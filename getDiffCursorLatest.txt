Starting a Gradle Daemon, 2 busy Daemons could not be reused, use --status for details
Type-safe dependency accessors is an incubating feature.
> Task :buildSrc:extractPluginRequests UP-TO-DATE
> Task :buildSrc:generatePluginAdapters UP-TO-DATE
> Task :buildSrc:compileJava UP-TO-DATE
> Task :buildSrc:compileGroovy NO-SOURCE
> Task :buildSrc:compileGroovyPlugins UP-TO-DATE
> Task :buildSrc:pluginDescriptors UP-TO-DATE
> Task :buildSrc:processResources UP-TO-DATE
> Task :buildSrc:classes UP-TO-DATE
> Task :buildSrc:jar UP-TO-DATE
> Task :buildSrc:assemble UP-TO-DATE
> Task :buildSrc:pluginUnderTestMetadata UP-TO-DATE
> Task :buildSrc:compileTestJava NO-SOURCE
> Task :buildSrc:compileTestGroovy NO-SOURCE
> Task :buildSrc:processTestResources NO-SOURCE
> Task :buildSrc:testClasses UP-TO-DATE
> Task :buildSrc:test NO-SOURCE
> Task :buildSrc:validatePlugins UP-TO-DATE
> Task :buildSrc:check UP-TO-DATE
> Task :buildSrc:build UP-TO-DATE
> Task :refinery-store:compileJava UP-TO-DATE
> Task :refinery-store:processResources NO-SOURCE
> Task :refinery-store:classes UP-TO-DATE
> Task :refinery-store:compileTestJava UP-TO-DATE
> Task :refinery-store:processTestResources NO-SOURCE
> Task :refinery-store:testClasses UP-TO-DATE
> Task :refinery-store:compileJmhJava
> Task :refinery-store:processJmhResources NO-SOURCE
> Task :refinery-store:jmhClasses

> Task :refinery-store:jmh
# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 0.00% complete, ETA 02:56:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.020 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.020, 0.020, 0.020), stdev = 0.001
  CI (99.9%): [0.020, 0.020] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 0.09% complete, ETA 03:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.023 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.021 ms/op
# Warmup Iteration   5: 0.021 ms/op
Iteration   1: 0.021 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.021 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.021 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.021 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
  CI (99.9%): [0.020, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 0.19% complete, ETA 03:04:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.705 ms/op
# Warmup Iteration   2: 0.657 ms/op
# Warmup Iteration   3: 0.650 ms/op
# Warmup Iteration   4: 0.641 ms/op
# Warmup Iteration   5: 0.645 ms/op
Iteration   1: 0.651 ms/op
Iteration   2: 0.647 ms/op
Iteration   3: 0.645 ms/op
Iteration   4: 0.650 ms/op
Iteration   5: 0.652 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.649 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.645, 0.649, 0.652), stdev = 0.003
  CI (99.9%): [0.638, 0.660] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 0.28% complete, ETA 03:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.715 ms/op
# Warmup Iteration   2: 0.646 ms/op
# Warmup Iteration   3: 0.640 ms/op
# Warmup Iteration   4: 0.636 ms/op
# Warmup Iteration   5: 0.649 ms/op
Iteration   1: 0.639 ms/op
Iteration   2: 0.641 ms/op
Iteration   3: 0.644 ms/op
Iteration   4: 0.635 ms/op
Iteration   5: 0.636 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.639 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.635, 0.639, 0.644), stdev = 0.004
  CI (99.9%): [0.624, 0.654] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 0.38% complete, ETA 03:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 114.502 ms/op
# Warmup Iteration   2: 106.769 ms/op
# Warmup Iteration   3: 102.700 ms/op
# Warmup Iteration   4: 105.801 ms/op
# Warmup Iteration   5: 101.491 ms/op
Iteration   1: 101.202 ms/op
Iteration   2: 100.984 ms/op
Iteration   3: 99.470 ms/op
Iteration   4: 100.217 ms/op
Iteration   5: 99.130 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  100.201 ±(99.9%) 3.496 ms/op [Average]
  (min, avg, max) = (99.130, 100.201, 101.202), stdev = 0.908
  CI (99.9%): [96.705, 103.697] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 0.47% complete, ETA 03:05:23
# Fork: 1 of 1
# Warmup Iteration   1: 110.351 ms/op
# Warmup Iteration   2: 101.917 ms/op
# Warmup Iteration   3: 103.429 ms/op
# Warmup Iteration   4: 98.569 ms/op
# Warmup Iteration   5: 102.605 ms/op
Iteration   1: 100.517 ms/op
Iteration   2: 100.737 ms/op
Iteration   3: 98.956 ms/op
Iteration   4: 101.760 ms/op
Iteration   5: 102.610 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  100.916 ±(99.9%) 5.313 ms/op [Average]
  (min, avg, max) = (98.956, 100.916, 102.610), stdev = 1.380
  CI (99.9%): [95.603, 106.229] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 0.57% complete, ETA 03:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.046 ms/op
# Warmup Iteration   5: 0.046 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.046 ms/op
Iteration   4: 0.046 ms/op
Iteration   5: 0.046 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.046 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.045, 0.046, 0.046), stdev = 0.001
  CI (99.9%): [0.044, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 0.66% complete, ETA 03:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.046 ms/op
# Warmup Iteration   4: 0.045 ms/op
# Warmup Iteration   5: 0.046 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.044 ms/op
Iteration   4: 0.045 ms/op
Iteration   5: 0.045 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.045 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.044, 0.045, 0.045), stdev = 0.001
  CI (99.9%): [0.043, 0.046] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 0.76% complete, ETA 03:05:42
# Fork: 1 of 1
# Warmup Iteration   1: 1.410 ms/op
# Warmup Iteration   2: 1.293 ms/op
# Warmup Iteration   3: 1.270 ms/op
# Warmup Iteration   4: 1.265 ms/op
# Warmup Iteration   5: 1.265 ms/op
Iteration   1: 1.291 ms/op
Iteration   2: 1.291 ms/op
Iteration   3: 1.280 ms/op
Iteration   4: 1.270 ms/op
Iteration   5: 1.265 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.279 ±(99.9%) 0.046 ms/op [Average]
  (min, avg, max) = (1.265, 1.279, 1.291), stdev = 0.012
  CI (99.9%): [1.233, 1.325] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 0.85% complete, ETA 03:05:08
# Fork: 1 of 1
# Warmup Iteration   1: 1.439 ms/op
# Warmup Iteration   2: 1.263 ms/op
# Warmup Iteration   3: 1.288 ms/op
# Warmup Iteration   4: 1.271 ms/op
# Warmup Iteration   5: 1.284 ms/op
Iteration   1: 1.265 ms/op
Iteration   2: 1.286 ms/op
Iteration   3: 1.280 ms/op
Iteration   4: 1.294 ms/op
Iteration   5: 1.273 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.280 ±(99.9%) 0.043 ms/op [Average]
  (min, avg, max) = (1.265, 1.280, 1.294), stdev = 0.011
  CI (99.9%): [1.236, 1.323] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 0.95% complete, ETA 03:04:36
# Fork: 1 of 1
# Warmup Iteration   1: 221.251 ms/op
# Warmup Iteration   2: 208.215 ms/op
# Warmup Iteration   3: 212.257 ms/op
# Warmup Iteration   4: 206.939 ms/op
# Warmup Iteration   5: 200.329 ms/op
Iteration   1: 234.574 ms/op
Iteration   2: 231.646 ms/op
Iteration   3: 232.247 ms/op
Iteration   4: 214.170 ms/op
Iteration   5: 191.327 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  220.793 ±(99.9%) 70.767 ms/op [Average]
  (min, avg, max) = (191.327, 220.793, 234.574), stdev = 18.378
  CI (99.9%): [150.026, 291.559] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 1.04% complete, ETA 03:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 225.024 ms/op
# Warmup Iteration   2: 201.276 ms/op
# Warmup Iteration   3: 206.023 ms/op
# Warmup Iteration   4: 196.996 ms/op
# Warmup Iteration   5: 187.089 ms/op
Iteration   1: 190.173 ms/op
Iteration   2: 185.469 ms/op
Iteration   3: 184.808 ms/op
Iteration   4: 181.284 ms/op
Iteration   5: 177.916 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  183.930 ±(99.9%) 17.780 ms/op [Average]
  (min, avg, max) = (177.916, 183.930, 190.173), stdev = 4.617
  CI (99.9%): [166.150, 201.710] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 1.14% complete, ETA 03:07:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ms/op
# Warmup Iteration   2: 0.089 ms/op
# Warmup Iteration   3: 0.089 ms/op
# Warmup Iteration   4: 0.088 ms/op
# Warmup Iteration   5: 0.091 ms/op
Iteration   1: 0.087 ms/op
Iteration   2: 0.089 ms/op
Iteration   3: 0.088 ms/op
Iteration   4: 0.089 ms/op
Iteration   5: 0.088 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.088 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.087, 0.088, 0.089), stdev = 0.001
  CI (99.9%): [0.085, 0.091] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 1.23% complete, ETA 03:06:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.097 ms/op
# Warmup Iteration   2: 0.088 ms/op
# Warmup Iteration   3: 0.090 ms/op
# Warmup Iteration   4: 0.088 ms/op
# Warmup Iteration   5: 0.089 ms/op
Iteration   1: 0.089 ms/op
Iteration   2: 0.089 ms/op
Iteration   3: 0.087 ms/op
Iteration   4: 0.088 ms/op
Iteration   5: 0.089 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.089 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.087, 0.089, 0.089), stdev = 0.001
  CI (99.9%): [0.086, 0.092] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 1.33% complete, ETA 03:06:24
# Fork: 1 of 1
# Warmup Iteration   1: 2.843 ms/op
# Warmup Iteration   2: 2.581 ms/op
# Warmup Iteration   3: 2.560 ms/op
# Warmup Iteration   4: 2.538 ms/op
# Warmup Iteration   5: 2.568 ms/op
Iteration   1: 2.573 ms/op
Iteration   2: 2.543 ms/op
Iteration   3: 2.569 ms/op
Iteration   4: 2.540 ms/op
Iteration   5: 2.563 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.558 ±(99.9%) 0.058 ms/op [Average]
  (min, avg, max) = (2.540, 2.558, 2.573), stdev = 0.015
  CI (99.9%): [2.500, 2.616] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 1.42% complete, ETA 03:05:54
# Fork: 1 of 1
# Warmup Iteration   1: 2.860 ms/op
# Warmup Iteration   2: 2.562 ms/op
# Warmup Iteration   3: 2.547 ms/op
# Warmup Iteration   4: 2.565 ms/op
# Warmup Iteration   5: 2.539 ms/op
Iteration   1: 2.575 ms/op
Iteration   2: 2.559 ms/op
Iteration   3: 2.581 ms/op
Iteration   4: 2.556 ms/op
Iteration   5: 2.535 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.561 ±(99.9%) 0.069 ms/op [Average]
  (min, avg, max) = (2.535, 2.561, 2.581), stdev = 0.018
  CI (99.9%): [2.493, 2.630] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 1.52% complete, ETA 03:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 436.872 ms/op
# Warmup Iteration   2: 415.241 ms/op
# Warmup Iteration   3: 414.665 ms/op
# Warmup Iteration   4: 402.633 ms/op
# Warmup Iteration   5: 407.548 ms/op
Iteration   1: 404.639 ms/op
Iteration   2: 405.486 ms/op
Iteration   3: 407.314 ms/op
Iteration   4: 414.752 ms/op
Iteration   5: 399.811 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  406.401 ±(99.9%) 20.909 ms/op [Average]
  (min, avg, max) = (399.811, 406.401, 414.752), stdev = 5.430
  CI (99.9%): [385.492, 427.309] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 1.61% complete, ETA 03:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 438.595 ms/op
# Warmup Iteration   2: 406.390 ms/op
# Warmup Iteration   3: 391.100 ms/op
# Warmup Iteration   4: 406.039 ms/op
# Warmup Iteration   5: 399.101 ms/op
Iteration   1: 380.694 ms/op
Iteration   2: 381.730 ms/op
Iteration   3: 388.231 ms/op
Iteration   4: 381.055 ms/op
Iteration   5: 367.114 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  379.765 ±(99.9%) 29.710 ms/op [Average]
  (min, avg, max) = (367.114, 379.765, 388.231), stdev = 7.715
  CI (99.9%): [350.056, 409.475] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 1.70% complete, ETA 03:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.196 ms/op
# Warmup Iteration   2: 0.181 ms/op
# Warmup Iteration   3: 0.184 ms/op
# Warmup Iteration   4: 0.180 ms/op
# Warmup Iteration   5: 0.180 ms/op
Iteration   1: 0.180 ms/op
Iteration   2: 0.180 ms/op
Iteration   3: 0.183 ms/op
Iteration   4: 0.181 ms/op
Iteration   5: 0.180 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.181 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.180, 0.181, 0.183), stdev = 0.001
  CI (99.9%): [0.176, 0.186] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 1.80% complete, ETA 03:08:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.199 ms/op
# Warmup Iteration   2: 0.184 ms/op
# Warmup Iteration   3: 0.185 ms/op
# Warmup Iteration   4: 0.182 ms/op
# Warmup Iteration   5: 0.179 ms/op
Iteration   1: 0.180 ms/op
Iteration   2: 0.186 ms/op
Iteration   3: 0.184 ms/op
Iteration   4: 0.186 ms/op
Iteration   5: 0.182 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.183 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.180, 0.183, 0.186), stdev = 0.003
  CI (99.9%): [0.173, 0.193] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 1.89% complete, ETA 03:07:37
# Fork: 1 of 1
# Warmup Iteration   1: 5.543 ms/op
# Warmup Iteration   2: 5.077 ms/op
# Warmup Iteration   3: 5.078 ms/op
# Warmup Iteration   4: 5.066 ms/op
# Warmup Iteration   5: 5.027 ms/op
Iteration   1: 5.027 ms/op
Iteration   2: 5.053 ms/op
Iteration   3: 5.076 ms/op
Iteration   4: 5.169 ms/op
Iteration   5: 5.141 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.093 ±(99.9%) 0.231 ms/op [Average]
  (min, avg, max) = (5.027, 5.093, 5.169), stdev = 0.060
  CI (99.9%): [4.863, 5.324] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 1.99% complete, ETA 03:07:05
# Fork: 1 of 1
# Warmup Iteration   1: 5.699 ms/op
# Warmup Iteration   2: 5.707 ms/op
# Warmup Iteration   3: 5.420 ms/op
# Warmup Iteration   4: 5.236 ms/op
# Warmup Iteration   5: 5.148 ms/op
Iteration   1: 5.105 ms/op
Iteration   2: 5.111 ms/op
Iteration   3: 5.123 ms/op
Iteration   4: 5.189 ms/op
Iteration   5: 5.164 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.139 ±(99.9%) 0.141 ms/op [Average]
  (min, avg, max) = (5.105, 5.139, 5.189), stdev = 0.037
  CI (99.9%): [4.998, 5.279] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 2.08% complete, ETA 03:06:37
# Fork: 1 of 1
# Warmup Iteration   1: 880.262 ms/op
# Warmup Iteration   2: 877.239 ms/op
# Warmup Iteration   3: 880.425 ms/op
# Warmup Iteration   4: 863.822 ms/op
# Warmup Iteration   5: 832.571 ms/op
Iteration   1: 792.298 ms/op
Iteration   2: 795.416 ms/op
Iteration   3: 788.225 ms/op
Iteration   4: 818.819 ms/op
Iteration   5: 793.633 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  797.678 ±(99.9%) 46.635 ms/op [Average]
  (min, avg, max) = (788.225, 797.678, 818.819), stdev = 12.111
  CI (99.9%): [751.043, 844.314] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 2.18% complete, ETA 03:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 887.524 ms/op
# Warmup Iteration   2: 808.898 ms/op
# Warmup Iteration   3: 761.736 ms/op
# Warmup Iteration   4: 732.880 ms/op
# Warmup Iteration   5: 749.192 ms/op
Iteration   1: 764.108 ms/op
Iteration   2: 736.079 ms/op
Iteration   3: 724.820 ms/op
Iteration   4: 737.177 ms/op
Iteration   5: 751.609 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  742.759 ±(99.9%) 58.768 ms/op [Average]
  (min, avg, max) = (724.820, 742.759, 764.108), stdev = 15.262
  CI (99.9%): [683.991, 801.526] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 2.27% complete, ETA 03:14:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.378 ms/op
# Warmup Iteration   2: 0.355 ms/op
# Warmup Iteration   3: 0.355 ms/op
# Warmup Iteration   4: 0.359 ms/op
# Warmup Iteration   5: 0.350 ms/op
Iteration   1: 0.353 ms/op
Iteration   2: 0.353 ms/op
Iteration   3: 0.353 ms/op
Iteration   4: 0.354 ms/op
Iteration   5: 0.358 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.354 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.353, 0.354, 0.358), stdev = 0.002
  CI (99.9%): [0.345, 0.363] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 2.37% complete, ETA 03:13:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.384 ms/op
# Warmup Iteration   2: 0.357 ms/op
# Warmup Iteration   3: 0.350 ms/op
# Warmup Iteration   4: 0.346 ms/op
# Warmup Iteration   5: 0.351 ms/op
Iteration   1: 0.349 ms/op
Iteration   2: 0.348 ms/op
Iteration   3: 0.352 ms/op
Iteration   4: 0.354 ms/op
Iteration   5: 0.347 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.350 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.347, 0.350, 0.354), stdev = 0.003
  CI (99.9%): [0.340, 0.360] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 2.46% complete, ETA 03:12:55
# Fork: 1 of 1
# Warmup Iteration   1: 11.336 ms/op
# Warmup Iteration   2: 10.158 ms/op
# Warmup Iteration   3: 10.269 ms/op
# Warmup Iteration   4: 10.087 ms/op
# Warmup Iteration   5: 10.063 ms/op
Iteration   1: 11.266 ms/op
Iteration   2: 10.632 ms/op
Iteration   3: 11.919 ms/op
Iteration   4: 10.258 ms/op
Iteration   5: 10.088 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  10.833 ±(99.9%) 2.915 ms/op [Average]
  (min, avg, max) = (10.088, 10.833, 11.919), stdev = 0.757
  CI (99.9%): [7.918, 13.747] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 2.56% complete, ETA 03:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 11.377 ms/op
# Warmup Iteration   2: 10.537 ms/op
# Warmup Iteration   3: 10.295 ms/op
# Warmup Iteration   4: 10.151 ms/op
# Warmup Iteration   5: 10.078 ms/op
Iteration   1: 10.327 ms/op
Iteration   2: 10.241 ms/op
Iteration   3: 10.266 ms/op
Iteration   4: 10.131 ms/op
Iteration   5: 10.053 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  10.204 ±(99.9%) 0.424 ms/op [Average]
  (min, avg, max) = (10.053, 10.204, 10.327), stdev = 0.110
  CI (99.9%): [9.780, 10.628] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 2.65% complete, ETA 03:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 1749.903 ms/op
# Warmup Iteration   2: 1674.892 ms/op
# Warmup Iteration   3: 1619.370 ms/op
# Warmup Iteration   4: 1642.628 ms/op
# Warmup Iteration   5: 1620.187 ms/op
Iteration   1: 1660.244 ms/op
Iteration   2: 1687.020 ms/op
Iteration   3: 1658.799 ms/op
Iteration   4: 1670.353 ms/op
Iteration   5: 1638.131 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1662.909 ±(99.9%) 68.739 ms/op [Average]
  (min, avg, max) = (1638.131, 1662.909, 1687.020), stdev = 17.851
  CI (99.9%): [1594.170, 1731.649] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 2.75% complete, ETA 03:14:58
# Fork: 1 of 1
# Warmup Iteration   1: 1713.369 ms/op
# Warmup Iteration   2: 1653.118 ms/op
# Warmup Iteration   3: 1687.413 ms/op
# Warmup Iteration   4: 1584.640 ms/op
# Warmup Iteration   5: 1604.316 ms/op
Iteration   1: 1627.522 ms/op
Iteration   2: 1650.788 ms/op
Iteration   3: 1658.003 ms/op
Iteration   4: 1665.772 ms/op
Iteration   5: 1604.270 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1641.271 ±(99.9%) 96.823 ms/op [Average]
  (min, avg, max) = (1604.270, 1641.271, 1665.772), stdev = 25.145
  CI (99.9%): [1544.448, 1738.094] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 2.84% complete, ETA 03:18:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.754 ms/op
# Warmup Iteration   2: 0.721 ms/op
# Warmup Iteration   3: 0.706 ms/op
# Warmup Iteration   4: 0.710 ms/op
# Warmup Iteration   5: 0.696 ms/op
Iteration   1: 0.694 ms/op
Iteration   2: 0.698 ms/op
Iteration   3: 0.695 ms/op
Iteration   4: 0.701 ms/op
Iteration   5: 0.698 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.697 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.694, 0.697, 0.701), stdev = 0.003
  CI (99.9%): [0.686, 0.709] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 2.94% complete, ETA 03:17:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.775 ms/op
# Warmup Iteration   2: 0.722 ms/op
# Warmup Iteration   3: 0.712 ms/op
# Warmup Iteration   4: 0.707 ms/op
# Warmup Iteration   5: 0.709 ms/op
Iteration   1: 0.717 ms/op
Iteration   2: 0.716 ms/op
Iteration   3: 0.708 ms/op
Iteration   4: 0.714 ms/op
Iteration   5: 0.714 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.714 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.708, 0.714, 0.717), stdev = 0.003
  CI (99.9%): [0.701, 0.727] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 3.03% complete, ETA 03:16:23
# Fork: 1 of 1
# Warmup Iteration   1: 22.880 ms/op
# Warmup Iteration   2: 21.104 ms/op
# Warmup Iteration   3: 21.084 ms/op
# Warmup Iteration   4: 20.693 ms/op
# Warmup Iteration   5: 20.701 ms/op
Iteration   1: 20.825 ms/op
Iteration   2: 20.606 ms/op
Iteration   3: 20.601 ms/op
Iteration   4: 20.416 ms/op
Iteration   5: 20.663 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  20.622 ±(99.9%) 0.565 ms/op [Average]
  (min, avg, max) = (20.416, 20.622, 20.825), stdev = 0.147
  CI (99.9%): [20.058, 21.187] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 3.13% complete, ETA 03:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 22.441 ms/op
# Warmup Iteration   2: 20.488 ms/op
# Warmup Iteration   3: 20.369 ms/op
# Warmup Iteration   4: 20.527 ms/op
# Warmup Iteration   5: 20.418 ms/op
Iteration   1: 20.034 ms/op
Iteration   2: 20.218 ms/op
Iteration   3: 20.233 ms/op
Iteration   4: 20.183 ms/op
Iteration   5: 20.160 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  20.165 ±(99.9%) 0.303 ms/op [Average]
  (min, avg, max) = (20.034, 20.165, 20.233), stdev = 0.079
  CI (99.9%): [19.862, 20.469] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 3.22% complete, ETA 03:15:01
# Fork: 1 of 1
# Warmup Iteration   1: 3569.612 ms/op
# Warmup Iteration   2: 3194.909 ms/op
# Warmup Iteration   3: 3064.474 ms/op
# Warmup Iteration   4: 3092.308 ms/op
# Warmup Iteration   5: 3123.173 ms/op
Iteration   1: 3196.635 ms/op
Iteration   2: 3108.747 ms/op
Iteration   3: 3137.765 ms/op
Iteration   4: 3118.749 ms/op
Iteration   5: 3115.241 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  3135.427 ±(99.9%) 138.159 ms/op [Average]
  (min, avg, max) = (3108.747, 3135.427, 3196.635), stdev = 35.880
  CI (99.9%): [2997.268, 3273.586] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 3.31% complete, ETA 03:24:57
# Fork: 1 of 1
# Warmup Iteration   1: 3361.353 ms/op
# Warmup Iteration   2: 3269.292 ms/op
# Warmup Iteration   3: 3221.028 ms/op
# Warmup Iteration   4: 3263.756 ms/op
# Warmup Iteration   5: 3203.827 ms/op
Iteration   1: 3197.810 ms/op
Iteration   2: 3134.576 ms/op
Iteration   3: 3178.758 ms/op
Iteration   4: 3188.016 ms/op
Iteration   5: 3169.243 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  3173.681 ±(99.9%) 93.578 ms/op [Average]
  (min, avg, max) = (3134.576, 3173.681, 3197.810), stdev = 24.302
  CI (99.9%): [3080.102, 3267.259] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 3.41% complete, ETA 03:34:33
# Fork: 1 of 1
# Warmup Iteration   1: 1.533 ms/op
# Warmup Iteration   2: 1.410 ms/op
# Warmup Iteration   3: 1.399 ms/op
# Warmup Iteration   4: 1.394 ms/op
# Warmup Iteration   5: 1.398 ms/op
Iteration   1: 1.402 ms/op
Iteration   2: 1.405 ms/op
Iteration   3: 1.397 ms/op
Iteration   4: 1.393 ms/op
Iteration   5: 1.379 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.395 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (1.379, 1.395, 1.405), stdev = 0.010
  CI (99.9%): [1.357, 1.434] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 3.50% complete, ETA 03:33:19
# Fork: 1 of 1
# Warmup Iteration   1: 1.556 ms/op
# Warmup Iteration   2: 1.440 ms/op
# Warmup Iteration   3: 1.401 ms/op
# Warmup Iteration   4: 1.419 ms/op
# Warmup Iteration   5: 1.408 ms/op
Iteration   1: 1.413 ms/op
Iteration   2: 1.385 ms/op
Iteration   3: 1.419 ms/op
Iteration   4: 1.398 ms/op
Iteration   5: 1.400 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.403 ±(99.9%) 0.052 ms/op [Average]
  (min, avg, max) = (1.385, 1.403, 1.419), stdev = 0.013
  CI (99.9%): [1.351, 1.455] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 3.60% complete, ETA 03:32:09
# Fork: 1 of 1
# Warmup Iteration   1: 44.683 ms/op
# Warmup Iteration   2: 40.870 ms/op
# Warmup Iteration   3: 40.842 ms/op
# Warmup Iteration   4: 40.951 ms/op
# Warmup Iteration   5: 41.055 ms/op
Iteration   1: 40.706 ms/op
Iteration   2: 40.530 ms/op
Iteration   3: 40.561 ms/op
Iteration   4: 41.133 ms/op
Iteration   5: 40.640 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  40.714 ±(99.9%) 0.939 ms/op [Average]
  (min, avg, max) = (40.530, 40.714, 41.133), stdev = 0.244
  CI (99.9%): [39.775, 41.653] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 3.69% complete, ETA 03:31:07
# Fork: 1 of 1
# Warmup Iteration   1: 44.642 ms/op
# Warmup Iteration   2: 40.719 ms/op
# Warmup Iteration   3: 40.519 ms/op
# Warmup Iteration   4: 40.468 ms/op
# Warmup Iteration   5: 40.618 ms/op
Iteration   1: 40.215 ms/op
Iteration   2: 40.420 ms/op
Iteration   3: 41.410 ms/op
Iteration   4: 41.261 ms/op
Iteration   5: 40.661 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  40.793 ±(99.9%) 2.010 ms/op [Average]
  (min, avg, max) = (40.215, 40.793, 41.410), stdev = 0.522
  CI (99.9%): [38.783, 42.804] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 3.79% complete, ETA 03:30:06
# Fork: 1 of 1
# Warmup Iteration   1: 6545.754 ms/op
# Warmup Iteration   2: 6333.599 ms/op
# Warmup Iteration   3: 6249.996 ms/op
# Warmup Iteration   4: 6326.990 ms/op
# Warmup Iteration   5: 6213.058 ms/op
Iteration   1: 6329.765 ms/op
Iteration   2: 6261.553 ms/op
Iteration   3: 6279.126 ms/op
Iteration   4: 6315.504 ms/op
Iteration   5: 6288.485 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  6294.886 ±(99.9%) 106.193 ms/op [Average]
  (min, avg, max) = (6261.553, 6294.886, 6329.765), stdev = 27.578
  CI (99.9%): [6188.694, 6401.079] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 3.88% complete, ETA 03:51:04
# Fork: 1 of 1
# Warmup Iteration   1: 6562.874 ms/op
# Warmup Iteration   2: 6248.690 ms/op
# Warmup Iteration   3: 6260.424 ms/op
# Warmup Iteration   4: 6148.297 ms/op
# Warmup Iteration   5: 6209.116 ms/op
Iteration   1: 6208.857 ms/op
Iteration   2: 6217.881 ms/op
Iteration   3: 6179.439 ms/op
Iteration   4: 6341.695 ms/op
Iteration   5: 6165.188 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  6222.612 ±(99.9%) 269.226 ms/op [Average]
  (min, avg, max) = (6165.188, 6222.612, 6341.695), stdev = 69.917
  CI (99.9%): [5953.386, 6491.838] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 3.98% complete, ETA 04:10:46
# Fork: 1 of 1
# Warmup Iteration   1: 3.070 ms/op
# Warmup Iteration   2: 2.859 ms/op
# Warmup Iteration   3: 2.823 ms/op
# Warmup Iteration   4: 2.822 ms/op
# Warmup Iteration   5: 2.818 ms/op
Iteration   1: 2.791 ms/op
Iteration   2: 2.824 ms/op
Iteration   3: 2.824 ms/op
Iteration   4: 2.817 ms/op
Iteration   5: 2.820 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.815 ±(99.9%) 0.053 ms/op [Average]
  (min, avg, max) = (2.791, 2.815, 2.824), stdev = 0.014
  CI (99.9%): [2.762, 2.868] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 4.07% complete, ETA 04:08:47
# Fork: 1 of 1
# Warmup Iteration   1: 3.065 ms/op
# Warmup Iteration   2: 2.829 ms/op
# Warmup Iteration   3: 2.799 ms/op
# Warmup Iteration   4: 2.731 ms/op
# Warmup Iteration   5: 2.759 ms/op
Iteration   1: 2.736 ms/op
Iteration   2: 2.763 ms/op
Iteration   3: 2.780 ms/op
Iteration   4: 2.766 ms/op
Iteration   5: 2.728 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.755 ±(99.9%) 0.084 ms/op [Average]
  (min, avg, max) = (2.728, 2.755, 2.780), stdev = 0.022
  CI (99.9%): [2.671, 2.839] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 4.17% complete, ETA 04:06:53
# Fork: 1 of 1
# Warmup Iteration   1: 88.852 ms/op
# Warmup Iteration   2: 81.542 ms/op
# Warmup Iteration   3: 80.267 ms/op
# Warmup Iteration   4: 80.136 ms/op
# Warmup Iteration   5: 80.503 ms/op
Iteration   1: 81.312 ms/op
Iteration   2: 80.157 ms/op
Iteration   3: 80.934 ms/op
Iteration   4: 81.405 ms/op
Iteration   5: 80.284 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  80.819 ±(99.9%) 2.216 ms/op [Average]
  (min, avg, max) = (80.157, 80.819, 81.405), stdev = 0.575
  CI (99.9%): [78.603, 83.034] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 4.26% complete, ETA 04:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 87.698 ms/op
# Warmup Iteration   2: 81.432 ms/op
# Warmup Iteration   3: 82.279 ms/op
# Warmup Iteration   4: 82.251 ms/op
# Warmup Iteration   5: 82.720 ms/op
Iteration   1: 82.391 ms/op
Iteration   2: 81.997 ms/op
Iteration   3: 82.054 ms/op
Iteration   4: 81.907 ms/op
Iteration   5: 81.791 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  82.028 ±(99.9%) 0.871 ms/op [Average]
  (min, avg, max) = (81.791, 82.028, 82.391), stdev = 0.226
  CI (99.9%): [81.157, 82.899] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 4.36% complete, ETA 04:03:41
# Fork: 1 of 1
# Warmup Iteration   1: 12944.505 ms/op
# Warmup Iteration   2: 12651.792 ms/op
# Warmup Iteration   3: 12551.584 ms/op
# Warmup Iteration   4: 12606.151 ms/op
# Warmup Iteration   5: 12530.070 ms/op
Iteration   1: 12557.060 ms/op
Iteration   2: 12580.523 ms/op
Iteration   3: 12683.822 ms/op
Iteration   4: 12659.329 ms/op
Iteration   5: 12534.896 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  12603.126 ±(99.9%) 250.727 ms/op [Average]
  (min, avg, max) = (12534.896, 12603.126, 12683.822), stdev = 65.113
  CI (99.9%): [12352.399, 12853.853] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 4.45% complete, ETA 04:43:40
# Fork: 1 of 1
# Warmup Iteration   1: 12694.698 ms/op
# Warmup Iteration   2: 12152.115 ms/op
# Warmup Iteration   3: 12248.342 ms/op
# Warmup Iteration   4: 12162.336 ms/op
# Warmup Iteration   5: 12196.795 ms/op
Iteration   1: 12351.003 ms/op
Iteration   2: 12180.073 ms/op
Iteration   3: 12214.646 ms/op
Iteration   4: 12115.691 ms/op
Iteration   5: 12248.285 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  12221.939 ±(99.9%) 335.946 ms/op [Average]
  (min, avg, max) = (12115.691, 12221.939, 12351.003), stdev = 87.244
  CI (99.9%): [11885.994, 12557.885] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 4.55% complete, ETA 05:20:35
# Fork: 1 of 1
# Warmup Iteration   1: 6.178 ms/op
# Warmup Iteration   2: 5.622 ms/op
# Warmup Iteration   3: 5.736 ms/op
# Warmup Iteration   4: 5.600 ms/op
# Warmup Iteration   5: 5.663 ms/op
Iteration   1: 5.660 ms/op
Iteration   2: 6.098 ms/op
Iteration   3: 5.645 ms/op
Iteration   4: 5.652 ms/op
Iteration   5: 5.700 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.751 ±(99.9%) 0.751 ms/op [Average]
  (min, avg, max) = (5.645, 5.751, 6.098), stdev = 0.195
  CI (99.9%): [5.000, 6.503] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 4.64% complete, ETA 05:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 6.116 ms/op
# Warmup Iteration   2: 5.730 ms/op
# Warmup Iteration   3: 5.554 ms/op
# Warmup Iteration   4: 5.671 ms/op
# Warmup Iteration   5: 5.649 ms/op
Iteration   1: 5.635 ms/op
Iteration   2: 5.602 ms/op
Iteration   3: 5.646 ms/op
Iteration   4: 5.808 ms/op
Iteration   5: 5.662 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.671 ±(99.9%) 0.307 ms/op [Average]
  (min, avg, max) = (5.602, 5.671, 5.808), stdev = 0.080
  CI (99.9%): [5.363, 5.978] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 4.73% complete, ETA 05:14:09
# Fork: 1 of 1
# Warmup Iteration   1: 181.390 ms/op
# Warmup Iteration   2: 163.249 ms/op
# Warmup Iteration   3: 162.869 ms/op
# Warmup Iteration   4: 162.481 ms/op
# Warmup Iteration   5: 162.926 ms/op
Iteration   1: 163.440 ms/op
Iteration   2: 162.564 ms/op
Iteration   3: 163.071 ms/op
Iteration   4: 162.398 ms/op
Iteration   5: 166.282 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  163.551 ±(99.9%) 6.090 ms/op [Average]
  (min, avg, max) = (162.398, 163.551, 166.282), stdev = 1.581
  CI (99.9%): [157.461, 169.641] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 4.83% complete, ETA 05:11:32
# Fork: 1 of 1
# Warmup Iteration   1: 182.073 ms/op
# Warmup Iteration   2: 164.607 ms/op
# Warmup Iteration   3: 164.858 ms/op
# Warmup Iteration   4: 164.474 ms/op
# Warmup Iteration   5: 163.129 ms/op
Iteration   1: 161.312 ms/op
Iteration   2: 162.402 ms/op
Iteration   3: 163.457 ms/op
Iteration   4: 164.945 ms/op
Iteration   5: 164.160 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  163.255 ±(99.9%) 5.520 ms/op [Average]
  (min, avg, max) = (161.312, 163.255, 164.945), stdev = 1.433
  CI (99.9%): [157.736, 168.775] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 4.92% complete, ETA 05:09:01
# Fork: 1 of 1
# Warmup Iteration   1: 25726.036 ms/op
# Warmup Iteration   2: 25772.680 ms/op
# Warmup Iteration   3: 25820.020 ms/op
# Warmup Iteration   4: 25447.692 ms/op
# Warmup Iteration   5: 25204.630 ms/op
Iteration   1: 25204.833 ms/op
Iteration   2: 25171.382 ms/op
Iteration   3: 25386.419 ms/op
Iteration   4: 25192.563 ms/op
Iteration   5: 25215.385 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  25234.116 ±(99.9%) 333.847 ms/op [Average]
  (min, avg, max) = (25171.382, 25234.116, 25386.419), stdev = 86.699
  CI (99.9%): [24900.269, 25567.964] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 5.02% complete, ETA 06:23:14
# Fork: 1 of 1
# Warmup Iteration   1: 24919.560 ms/op
# Warmup Iteration   2: 24234.698 ms/op
# Warmup Iteration   3: 24308.689 ms/op
# Warmup Iteration   4: 24205.649 ms/op
# Warmup Iteration   5: 24268.065 ms/op
Iteration   1: 24113.630 ms/op
Iteration   2: 24039.274 ms/op
Iteration   3: 24228.797 ms/op
Iteration   4: 24205.133 ms/op
Iteration   5: 24160.340 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  24149.435 ±(99.9%) 291.588 ms/op [Average]
  (min, avg, max) = (24039.274, 24149.435, 24228.797), stdev = 75.724
  CI (99.9%): [23857.847, 24441.023] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 5.11% complete, ETA 07:31:00
# Fork: 1 of 1
# Warmup Iteration   1: 12.402 ms/op
# Warmup Iteration   2: 11.653 ms/op
# Warmup Iteration   3: 11.473 ms/op
# Warmup Iteration   4: 11.584 ms/op
# Warmup Iteration   5: 11.331 ms/op
Iteration   1: 11.466 ms/op
Iteration   2: 11.467 ms/op
Iteration   3: 11.321 ms/op
Iteration   4: 11.414 ms/op
Iteration   5: 11.616 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11.457 ±(99.9%) 0.412 ms/op [Average]
  (min, avg, max) = (11.321, 11.457, 11.616), stdev = 0.107
  CI (99.9%): [11.045, 11.868] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 5.21% complete, ETA 07:25:32
# Fork: 1 of 1
# Warmup Iteration   1: 12.498 ms/op
# Warmup Iteration   2: 11.578 ms/op
# Warmup Iteration   3: 11.166 ms/op
# Warmup Iteration   4: 11.256 ms/op
# Warmup Iteration   5: 11.221 ms/op
Iteration   1: 11.317 ms/op
Iteration   2: 11.186 ms/op
Iteration   3: 11.340 ms/op
Iteration   4: 11.296 ms/op
Iteration   5: 11.198 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11.267 ±(99.9%) 0.272 ms/op [Average]
  (min, avg, max) = (11.186, 11.267, 11.340), stdev = 0.071
  CI (99.9%): [10.995, 11.540] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 5.30% complete, ETA 07:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 367.083 ms/op
# Warmup Iteration   2: 332.895 ms/op
# Warmup Iteration   3: 331.923 ms/op
# Warmup Iteration   4: 327.020 ms/op
# Warmup Iteration   5: 330.861 ms/op
Iteration   1: 325.510 ms/op
Iteration   2: 325.622 ms/op
Iteration   3: 325.995 ms/op
Iteration   4: 331.407 ms/op
Iteration   5: 328.808 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  327.468 ±(99.9%) 9.953 ms/op [Average]
  (min, avg, max) = (325.510, 327.468, 331.407), stdev = 2.585
  CI (99.9%): [317.515, 337.421] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 5.40% complete, ETA 07:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 363.336 ms/op
# Warmup Iteration   2: 325.829 ms/op
# Warmup Iteration   3: 320.783 ms/op
# Warmup Iteration   4: 323.318 ms/op
# Warmup Iteration   5: 324.394 ms/op
Iteration   1: 323.055 ms/op
Iteration   2: 325.306 ms/op
Iteration   3: 320.613 ms/op
Iteration   4: 320.417 ms/op
Iteration   5: 323.861 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  322.650 ±(99.9%) 8.127 ms/op [Average]
  (min, avg, max) = (320.417, 322.650, 325.306), stdev = 2.111
  CI (99.9%): [314.523, 330.778] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 5.49% complete, ETA 07:11:48
# Fork: 1 of 1
# Warmup Iteration   1: 50661.116 ms/op
# Warmup Iteration   2: 50626.678 ms/op
# Warmup Iteration   3: 50364.500 ms/op
# Warmup Iteration   4: 50375.920 ms/op
# Warmup Iteration   5: 50260.129 ms/op
Iteration   1: 50360.793 ms/op
Iteration   2: 50725.532 ms/op
Iteration   3: 50561.348 ms/op
Iteration   4: 50212.309 ms/op
Iteration   5: 50061.284 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  50384.253 ±(99.9%) 1022.884 ms/op [Average]
  (min, avg, max) = (50061.284, 50384.253, 50725.532), stdev = 265.640
  CI (99.9%): [49361.369, 51407.137] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 5.59% complete, ETA 09:26:13
# Fork: 1 of 1
# Warmup Iteration   1: 47777.399 ms/op
# Warmup Iteration   2: 46927.377 ms/op
# Warmup Iteration   3: 46877.919 ms/op
# Warmup Iteration   4: 46745.373 ms/op
# Warmup Iteration   5: 46753.465 ms/op
Iteration   1: 46808.900 ms/op
Iteration   2: 46820.479 ms/op
Iteration   3: 46874.695 ms/op
Iteration   4: 47410.366 ms/op
Iteration   5: 47503.065 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  47083.501 ±(99.9%) 1321.422 ms/op [Average]
  (min, avg, max) = (46808.900, 47083.501, 47503.065), stdev = 343.169
  CI (99.9%): [45762.079, 48404.923] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 5.68% complete, ETA 11:26:34
# Fork: 1 of 1
# Warmup Iteration   1: 25.040 ms/op
# Warmup Iteration   2: 23.543 ms/op
# Warmup Iteration   3: 22.974 ms/op
# Warmup Iteration   4: 23.163 ms/op
# Warmup Iteration   5: 22.615 ms/op
Iteration   1: 22.709 ms/op
Iteration   2: 22.981 ms/op
Iteration   3: 23.180 ms/op
Iteration   4: 23.264 ms/op
Iteration   5: 22.792 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  22.985 ±(99.9%) 0.921 ms/op [Average]
  (min, avg, max) = (22.709, 22.985, 23.264), stdev = 0.239
  CI (99.9%): [22.064, 23.906] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 5.78% complete, ETA 11:17:30
# Fork: 1 of 1
# Warmup Iteration   1: 25.040 ms/op
# Warmup Iteration   2: 22.722 ms/op
# Warmup Iteration   3: 22.386 ms/op
# Warmup Iteration   4: 22.790 ms/op
# Warmup Iteration   5: 22.142 ms/op
Iteration   1: 22.271 ms/op
Iteration   2: 22.466 ms/op
Iteration   3: 23.096 ms/op
Iteration   4: 22.265 ms/op
Iteration   5: 22.172 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  22.454 ±(99.9%) 1.442 ms/op [Average]
  (min, avg, max) = (22.172, 22.454, 23.096), stdev = 0.374
  CI (99.9%): [21.012, 23.896] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 5.87% complete, ETA 11:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 697.124 ms/op
# Warmup Iteration   2: 663.974 ms/op
# Warmup Iteration   3: 649.750 ms/op
# Warmup Iteration   4: 653.336 ms/op
# Warmup Iteration   5: 651.910 ms/op
Iteration   1: 649.179 ms/op
Iteration   2: 653.026 ms/op
Iteration   3: 644.344 ms/op
Iteration   4: 650.981 ms/op
Iteration   5: 650.437 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  649.593 ±(99.9%) 12.500 ms/op [Average]
  (min, avg, max) = (644.344, 649.593, 653.026), stdev = 3.246
  CI (99.9%): [637.093, 662.094] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 5.97% complete, ETA 11:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 706.342 ms/op
# Warmup Iteration   2: 680.004 ms/op
# Warmup Iteration   3: 650.340 ms/op
# Warmup Iteration   4: 658.325 ms/op
# Warmup Iteration   5: 655.312 ms/op
Iteration   1: 661.073 ms/op
Iteration   2: 653.948 ms/op
Iteration   3: 662.125 ms/op
Iteration   4: 661.562 ms/op
Iteration   5: 650.378 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  657.817 ±(99.9%) 20.512 ms/op [Average]
  (min, avg, max) = (650.378, 657.817, 662.125), stdev = 5.327
  CI (99.9%): [637.305, 678.329] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 6.06% complete, ETA 10:53:31
# Fork: 1 of 1
# Warmup Iteration   1: 100913.061 ms/op
# Warmup Iteration   2: 100159.154 ms/op
# Warmup Iteration   3: 99778.286 ms/op
# Warmup Iteration   4: 100416.377 ms/op
# Warmup Iteration   5: 100934.203 ms/op
Iteration   1: 100797.947 ms/op
Iteration   2: 100793.092 ms/op
Iteration   3: 100626.976 ms/op
Iteration   4: 100100.126 ms/op
Iteration   5: 99980.037 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  100459.636 ±(99.9%) 1507.310 ms/op [Average]
  (min, avg, max) = (99980.037, 100459.636, 100797.947), stdev = 391.444
  CI (99.9%): [98952.325, 101966.946] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 6.16% complete, ETA 14:58:12
# Fork: 1 of 1
# Warmup Iteration   1: 98563.533 ms/op
# Warmup Iteration   2: 98463.834 ms/op
# Warmup Iteration   3: 98361.731 ms/op
# Warmup Iteration   4: 98560.040 ms/op
# Warmup Iteration   5: 98487.570 ms/op
Iteration   1: 98284.596 ms/op
Iteration   2: 97885.424 ms/op
Iteration   3: 98236.865 ms/op
Iteration   4: 98298.885 ms/op
Iteration   5: 98300.408 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  98201.235 ±(99.9%) 687.008 ms/op [Average]
  (min, avg, max) = (97885.424, 98201.235, 98300.408), stdev = 178.414
  CI (99.9%): [97514.228, 98888.243] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 6.25% complete, ETA 18:49:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.022 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.021 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.020 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.020, 0.020, 0.021), stdev = 0.001
  CI (99.9%): [0.019, 0.022] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 6.34% complete, ETA 18:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.020 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.020, 0.020, 0.020), stdev = 0.001
  CI (99.9%): [0.019, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 6.44% complete, ETA 18:19:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.722 ms/op
# Warmup Iteration   2: 0.662 ms/op
# Warmup Iteration   3: 0.672 ms/op
# Warmup Iteration   4: 0.662 ms/op
# Warmup Iteration   5: 0.681 ms/op
Iteration   1: 0.673 ms/op
Iteration   2: 0.671 ms/op
Iteration   3: 0.678 ms/op
Iteration   4: 0.668 ms/op
Iteration   5: 0.672 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.672 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.668, 0.672, 0.678), stdev = 0.004
  CI (99.9%): [0.658, 0.686] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 6.53% complete, ETA 18:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.744 ms/op
# Warmup Iteration   2: 0.671 ms/op
# Warmup Iteration   3: 0.671 ms/op
# Warmup Iteration   4: 0.661 ms/op
# Warmup Iteration   5: 0.660 ms/op
Iteration   1: 0.661 ms/op
Iteration   2: 0.657 ms/op
Iteration   3: 0.662 ms/op
Iteration   4: 0.670 ms/op
Iteration   5: 0.656 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.661 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (0.656, 0.661, 0.670), stdev = 0.005
  CI (99.9%): [0.640, 0.682] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 6.63% complete, ETA 17:50:39
# Fork: 1 of 1
# Warmup Iteration   1: 119.952 ms/op
# Warmup Iteration   2: 116.120 ms/op
# Warmup Iteration   3: 106.936 ms/op
# Warmup Iteration   4: 103.098 ms/op
# Warmup Iteration   5: 105.682 ms/op
Iteration   1: 102.306 ms/op
Iteration   2: 106.289 ms/op
Iteration   3: 104.351 ms/op
Iteration   4: 104.081 ms/op
Iteration   5: 102.798 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  103.965 ±(99.9%) 5.990 ms/op [Average]
  (min, avg, max) = (102.306, 103.965, 106.289), stdev = 1.556
  CI (99.9%): [97.975, 109.955] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 6.72% complete, ETA 17:37:11
# Fork: 1 of 1
# Warmup Iteration   1: 115.697 ms/op
# Warmup Iteration   2: 106.033 ms/op
# Warmup Iteration   3: 102.655 ms/op
# Warmup Iteration   4: 97.727 ms/op
# Warmup Iteration   5: 101.665 ms/op
Iteration   1: 104.863 ms/op
Iteration   2: 93.181 ms/op
Iteration   3: 97.766 ms/op
Iteration   4: 101.949 ms/op
Iteration   5: 98.614 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  99.275 ±(99.9%) 17.029 ms/op [Average]
  (min, avg, max) = (93.181, 99.275, 104.863), stdev = 4.422
  CI (99.9%): [82.246, 116.303] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 6.82% complete, ETA 17:24:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.046 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.045 ms/op
# Warmup Iteration   5: 0.045 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.044 ms/op
Iteration   5: 0.044 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.045 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.044, 0.045, 0.045), stdev = 0.001
  CI (99.9%): [0.044, 0.045] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 6.91% complete, ETA 17:11:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.044 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.044 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.044 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.044 ms/op
Iteration   4: 0.044 ms/op
Iteration   5: 0.044 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.044 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.044, 0.044, 0.044), stdev = 0.001
  CI (99.9%): [0.043, 0.045] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 7.01% complete, ETA 16:58:27
# Fork: 1 of 1
# Warmup Iteration   1: 1.453 ms/op
# Warmup Iteration   2: 1.319 ms/op
# Warmup Iteration   3: 1.329 ms/op
# Warmup Iteration   4: 1.325 ms/op
# Warmup Iteration   5: 1.345 ms/op
Iteration   1: 1.340 ms/op
Iteration   2: 1.326 ms/op
Iteration   3: 1.321 ms/op
Iteration   4: 1.315 ms/op
Iteration   5: 1.319 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.324 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (1.315, 1.324, 1.340), stdev = 0.010
  CI (99.9%): [1.287, 1.362] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 7.10% complete, ETA 16:46:07
# Fork: 1 of 1
# Warmup Iteration   1: 1.472 ms/op
# Warmup Iteration   2: 1.349 ms/op
# Warmup Iteration   3: 1.361 ms/op
# Warmup Iteration   4: 1.350 ms/op
# Warmup Iteration   5: 1.336 ms/op
Iteration   1: 1.331 ms/op
Iteration   2: 1.333 ms/op
Iteration   3: 1.325 ms/op
Iteration   4: 1.342 ms/op
Iteration   5: 1.331 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.333 ±(99.9%) 0.024 ms/op [Average]
  (min, avg, max) = (1.325, 1.333, 1.342), stdev = 0.006
  CI (99.9%): [1.309, 1.356] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 7.20% complete, ETA 16:34:07
# Fork: 1 of 1
# Warmup Iteration   1: 230.248 ms/op
# Warmup Iteration   2: 224.619 ms/op
# Warmup Iteration   3: 214.027 ms/op
# Warmup Iteration   4: 197.957 ms/op
# Warmup Iteration   5: 209.227 ms/op
Iteration   1: 201.692 ms/op
Iteration   2: 207.106 ms/op
Iteration   3: 204.683 ms/op
Iteration   4: 206.046 ms/op
Iteration   5: 205.480 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  205.002 ±(99.9%) 7.892 ms/op [Average]
  (min, avg, max) = (201.692, 205.002, 207.106), stdev = 2.050
  CI (99.9%): [197.110, 212.894] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 7.29% complete, ETA 16:22:53
# Fork: 1 of 1
# Warmup Iteration   1: 233.965 ms/op
# Warmup Iteration   2: 225.436 ms/op
# Warmup Iteration   3: 209.279 ms/op
# Warmup Iteration   4: 205.375 ms/op
# Warmup Iteration   5: 201.301 ms/op
Iteration   1: 196.249 ms/op
Iteration   2: 191.870 ms/op
Iteration   3: 210.676 ms/op
Iteration   4: 203.686 ms/op
Iteration   5: 205.170 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  201.530 ±(99.9%) 28.735 ms/op [Average]
  (min, avg, max) = (191.870, 201.530, 210.676), stdev = 7.462
  CI (99.9%): [172.795, 230.265] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 7.39% complete, ETA 16:11:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.097 ms/op
# Warmup Iteration   2: 0.090 ms/op
# Warmup Iteration   3: 0.088 ms/op
# Warmup Iteration   4: 0.089 ms/op
# Warmup Iteration   5: 0.088 ms/op
Iteration   1: 0.089 ms/op
Iteration   2: 0.089 ms/op
Iteration   3: 0.088 ms/op
Iteration   4: 0.088 ms/op
Iteration   5: 0.089 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.089 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.088, 0.089, 0.089), stdev = 0.001
  CI (99.9%): [0.087, 0.091] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 7.48% complete, ETA 16:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ms/op
# Warmup Iteration   2: 0.091 ms/op
# Warmup Iteration   3: 0.090 ms/op
# Warmup Iteration   4: 0.090 ms/op
# Warmup Iteration   5: 0.090 ms/op
Iteration   1: 0.089 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.089 ms/op
Iteration   4: 0.089 ms/op
Iteration   5: 0.089 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.089 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.088, 0.089, 0.089), stdev = 0.001
  CI (99.9%): [0.087, 0.090] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 7.58% complete, ETA 15:49:54
# Fork: 1 of 1
# Warmup Iteration   1: 2.965 ms/op
# Warmup Iteration   2: 2.683 ms/op
# Warmup Iteration   3: 2.655 ms/op
# Warmup Iteration   4: 2.672 ms/op
# Warmup Iteration   5: 2.736 ms/op
Iteration   1: 2.655 ms/op
Iteration   2: 2.692 ms/op
Iteration   3: 2.667 ms/op
Iteration   4: 2.674 ms/op
Iteration   5: 2.680 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.674 ±(99.9%) 0.053 ms/op [Average]
  (min, avg, max) = (2.655, 2.674, 2.692), stdev = 0.014
  CI (99.9%): [2.620, 2.727] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 7.67% complete, ETA 15:39:18
# Fork: 1 of 1
# Warmup Iteration   1: 2.876 ms/op
# Warmup Iteration   2: 2.691 ms/op
# Warmup Iteration   3: 2.686 ms/op
# Warmup Iteration   4: 2.612 ms/op
# Warmup Iteration   5: 2.657 ms/op
Iteration   1: 2.659 ms/op
Iteration   2: 2.653 ms/op
Iteration   3: 2.642 ms/op
Iteration   4: 2.669 ms/op
Iteration   5: 2.624 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.650 ±(99.9%) 0.066 ms/op [Average]
  (min, avg, max) = (2.624, 2.650, 2.669), stdev = 0.017
  CI (99.9%): [2.583, 2.716] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 7.77% complete, ETA 15:28:58
# Fork: 1 of 1
# Warmup Iteration   1: 437.910 ms/op
# Warmup Iteration   2: 430.442 ms/op
# Warmup Iteration   3: 392.791 ms/op
# Warmup Iteration   4: 400.509 ms/op
# Warmup Iteration   5: 399.685 ms/op
Iteration   1: 394.678 ms/op
Iteration   2: 405.236 ms/op
Iteration   3: 409.051 ms/op
Iteration   4: 399.836 ms/op
Iteration   5: 391.889 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  400.138 ±(99.9%) 27.457 ms/op [Average]
  (min, avg, max) = (391.889, 400.138, 409.051), stdev = 7.131
  CI (99.9%): [372.681, 427.595] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 7.86% complete, ETA 15:19:25
# Fork: 1 of 1
# Warmup Iteration   1: 446.769 ms/op
# Warmup Iteration   2: 429.298 ms/op
# Warmup Iteration   3: 406.957 ms/op
# Warmup Iteration   4: 405.750 ms/op
# Warmup Iteration   5: 396.128 ms/op
Iteration   1: 397.529 ms/op
Iteration   2: 392.032 ms/op
Iteration   3: 377.172 ms/op
Iteration   4: 389.440 ms/op
Iteration   5: 400.680 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  391.371 ±(99.9%) 34.994 ms/op [Average]
  (min, avg, max) = (377.172, 391.371, 400.680), stdev = 9.088
  CI (99.9%): [356.377, 426.365] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 7.95% complete, ETA 15:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.202 ms/op
# Warmup Iteration   2: 0.188 ms/op
# Warmup Iteration   3: 0.187 ms/op
# Warmup Iteration   4: 0.187 ms/op
# Warmup Iteration   5: 0.184 ms/op
Iteration   1: 0.184 ms/op
Iteration   2: 0.185 ms/op
Iteration   3: 0.185 ms/op
Iteration   4: 0.184 ms/op
Iteration   5: 0.186 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.185 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.184, 0.185, 0.186), stdev = 0.001
  CI (99.9%): [0.183, 0.187] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 8.05% complete, ETA 15:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.193 ms/op
# Warmup Iteration   2: 0.178 ms/op
# Warmup Iteration   3: 0.180 ms/op
# Warmup Iteration   4: 0.179 ms/op
# Warmup Iteration   5: 0.176 ms/op
Iteration   1: 0.179 ms/op
Iteration   2: 0.178 ms/op
Iteration   3: 0.178 ms/op
Iteration   4: 0.179 ms/op
Iteration   5: 0.177 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.178 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.177, 0.178, 0.179), stdev = 0.001
  CI (99.9%): [0.175, 0.181] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 8.14% complete, ETA 14:51:01
# Fork: 1 of 1
# Warmup Iteration   1: 6.040 ms/op
# Warmup Iteration   2: 5.384 ms/op
# Warmup Iteration   3: 5.357 ms/op
# Warmup Iteration   4: 5.338 ms/op
# Warmup Iteration   5: 5.344 ms/op
Iteration   1: 5.351 ms/op
Iteration   2: 5.353 ms/op
Iteration   3: 5.346 ms/op
Iteration   4: 5.394 ms/op
Iteration   5: 5.425 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.374 ±(99.9%) 0.133 ms/op [Average]
  (min, avg, max) = (5.346, 5.374, 5.425), stdev = 0.035
  CI (99.9%): [5.241, 5.507] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 8.24% complete, ETA 14:41:48
# Fork: 1 of 1
# Warmup Iteration   1: 5.946 ms/op
# Warmup Iteration   2: 5.375 ms/op
# Warmup Iteration   3: 5.363 ms/op
# Warmup Iteration   4: 5.286 ms/op
# Warmup Iteration   5: 5.265 ms/op
Iteration   1: 5.377 ms/op
Iteration   2: 5.322 ms/op
Iteration   3: 5.463 ms/op
Iteration   4: 5.584 ms/op
Iteration   5: 5.645 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.478 ±(99.9%) 0.523 ms/op [Average]
  (min, avg, max) = (5.322, 5.478, 5.645), stdev = 0.136
  CI (99.9%): [4.955, 6.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 8.33% complete, ETA 14:32:48
# Fork: 1 of 1
# Warmup Iteration   1: 881.540 ms/op
# Warmup Iteration   2: 854.606 ms/op
# Warmup Iteration   3: 785.112 ms/op
# Warmup Iteration   4: 848.089 ms/op
# Warmup Iteration   5: 791.511 ms/op
Iteration   1: 842.765 ms/op
Iteration   2: 787.667 ms/op
Iteration   3: 851.407 ms/op
Iteration   4: 796.771 ms/op
Iteration   5: 883.724 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  832.467 ±(99.9%) 153.704 ms/op [Average]
  (min, avg, max) = (787.667, 832.467, 883.724), stdev = 39.916
  CI (99.9%): [678.763, 986.171] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 8.43% complete, ETA 14:25:21
# Fork: 1 of 1
# Warmup Iteration   1: 904.332 ms/op
# Warmup Iteration   2: 843.326 ms/op
# Warmup Iteration   3: 780.556 ms/op
# Warmup Iteration   4: 783.310 ms/op
# Warmup Iteration   5: 847.006 ms/op
Iteration   1: 788.606 ms/op
Iteration   2: 777.253 ms/op
Iteration   3: 780.629 ms/op
Iteration   4: 792.761 ms/op
Iteration   5: 754.535 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  778.757 ±(99.9%) 57.295 ms/op [Average]
  (min, avg, max) = (754.535, 778.757, 792.761), stdev = 14.879
  CI (99.9%): [721.462, 836.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 8.52% complete, ETA 14:17:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.385 ms/op
# Warmup Iteration   2: 0.354 ms/op
# Warmup Iteration   3: 0.358 ms/op
# Warmup Iteration   4: 0.350 ms/op
# Warmup Iteration   5: 0.350 ms/op
Iteration   1: 0.353 ms/op
Iteration   2: 0.349 ms/op
Iteration   3: 0.356 ms/op
Iteration   4: 0.355 ms/op
Iteration   5: 0.349 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.352 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.349, 0.352, 0.356), stdev = 0.003
  CI (99.9%): [0.339, 0.365] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 8.62% complete, ETA 14:09:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.381 ms/op
# Warmup Iteration   2: 0.361 ms/op
# Warmup Iteration   3: 0.356 ms/op
# Warmup Iteration   4: 0.356 ms/op
# Warmup Iteration   5: 0.352 ms/op
Iteration   1: 0.356 ms/op
Iteration   2: 0.359 ms/op
Iteration   3: 0.355 ms/op
Iteration   4: 0.356 ms/op
Iteration   5: 0.357 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.357 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.355, 0.357, 0.359), stdev = 0.001
  CI (99.9%): [0.351, 0.362] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 8.71% complete, ETA 14:01:11
# Fork: 1 of 1
# Warmup Iteration   1: 12.192 ms/op
# Warmup Iteration   2: 10.975 ms/op
# Warmup Iteration   3: 10.786 ms/op
# Warmup Iteration   4: 10.861 ms/op
# Warmup Iteration   5: 10.972 ms/op
Iteration   1: 10.773 ms/op
Iteration   2: 10.905 ms/op
Iteration   3: 10.826 ms/op
Iteration   4: 10.995 ms/op
Iteration   5: 10.942 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  10.888 ±(99.9%) 0.344 ms/op [Average]
  (min, avg, max) = (10.773, 10.888, 10.995), stdev = 0.089
  CI (99.9%): [10.544, 11.232] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 8.81% complete, ETA 13:53:05
# Fork: 1 of 1
# Warmup Iteration   1: 11.656 ms/op
# Warmup Iteration   2: 10.439 ms/op
# Warmup Iteration   3: 10.424 ms/op
# Warmup Iteration   4: 10.380 ms/op
# Warmup Iteration   5: 10.396 ms/op
Iteration   1: 10.289 ms/op
Iteration   2: 10.517 ms/op
Iteration   3: 10.441 ms/op
Iteration   4: 10.436 ms/op
Iteration   5: 10.477 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  10.432 ±(99.9%) 0.333 ms/op [Average]
  (min, avg, max) = (10.289, 10.432, 10.517), stdev = 0.086
  CI (99.9%): [10.099, 10.765] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 8.90% complete, ETA 13:45:09
# Fork: 1 of 1
# Warmup Iteration   1: 1891.516 ms/op
# Warmup Iteration   2: 1658.041 ms/op
# Warmup Iteration   3: 1770.217 ms/op
# Warmup Iteration   4: 1641.140 ms/op
# Warmup Iteration   5: 1669.151 ms/op
Iteration   1: 1628.096 ms/op
Iteration   2: 1710.291 ms/op
Iteration   3: 1680.266 ms/op
Iteration   4: 1602.166 ms/op
Iteration   5: 1794.763 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1683.117 ±(99.9%) 290.665 ms/op [Average]
  (min, avg, max) = (1602.166, 1683.117, 1794.763), stdev = 75.485
  CI (99.9%): [1392.451, 1973.782] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 9.00% complete, ETA 13:38:43
# Fork: 1 of 1
# Warmup Iteration   1: 1739.287 ms/op
# Warmup Iteration   2: 1583.228 ms/op
# Warmup Iteration   3: 1558.316 ms/op
# Warmup Iteration   4: 1590.114 ms/op
# Warmup Iteration   5: 1572.364 ms/op
Iteration   1: 1562.507 ms/op
Iteration   2: 1500.929 ms/op
Iteration   3: 1502.985 ms/op
Iteration   4: 1512.154 ms/op
Iteration   5: 1492.194 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1514.154 ±(99.9%) 107.611 ms/op [Average]
  (min, avg, max) = (1492.194, 1514.154, 1562.507), stdev = 27.946
  CI (99.9%): [1406.543, 1621.765] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 9.09% complete, ETA 13:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.756 ms/op
# Warmup Iteration   2: 0.711 ms/op
# Warmup Iteration   3: 0.698 ms/op
# Warmup Iteration   4: 0.701 ms/op
# Warmup Iteration   5: 0.713 ms/op
Iteration   1: 0.702 ms/op
Iteration   2: 0.695 ms/op
Iteration   3: 0.693 ms/op
Iteration   4: 0.705 ms/op
Iteration   5: 0.693 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.698 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.693, 0.698, 0.705), stdev = 0.006
  CI (99.9%): [0.676, 0.719] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 9.19% complete, ETA 13:24:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.783 ms/op
# Warmup Iteration   2: 0.705 ms/op
# Warmup Iteration   3: 0.714 ms/op
# Warmup Iteration   4: 0.698 ms/op
# Warmup Iteration   5: 0.699 ms/op
Iteration   1: 0.696 ms/op
Iteration   2: 0.694 ms/op
Iteration   3: 0.699 ms/op
Iteration   4: 0.702 ms/op
Iteration   5: 0.702 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.698 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.694, 0.698, 0.702), stdev = 0.003
  CI (99.9%): [0.685, 0.712] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 9.28% complete, ETA 13:17:18
# Fork: 1 of 1
# Warmup Iteration   1: 24.062 ms/op
# Warmup Iteration   2: 22.274 ms/op
# Warmup Iteration   3: 21.617 ms/op
# Warmup Iteration   4: 21.544 ms/op
# Warmup Iteration   5: 21.645 ms/op
Iteration   1: 21.380 ms/op
Iteration   2: 21.524 ms/op
Iteration   3: 21.619 ms/op
Iteration   4: 21.620 ms/op
Iteration   5: 21.351 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  21.499 ±(99.9%) 0.494 ms/op [Average]
  (min, avg, max) = (21.351, 21.499, 21.620), stdev = 0.128
  CI (99.9%): [21.004, 21.993] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 9.38% complete, ETA 13:10:06
# Fork: 1 of 1
# Warmup Iteration   1: 23.614 ms/op
# Warmup Iteration   2: 21.898 ms/op
# Warmup Iteration   3: 21.333 ms/op
# Warmup Iteration   4: 21.390 ms/op
# Warmup Iteration   5: 21.373 ms/op
Iteration   1: 21.121 ms/op
Iteration   2: 21.294 ms/op
Iteration   3: 21.199 ms/op
Iteration   4: 21.169 ms/op
Iteration   5: 21.193 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  21.195 ±(99.9%) 0.243 ms/op [Average]
  (min, avg, max) = (21.121, 21.195, 21.294), stdev = 0.063
  CI (99.9%): [20.952, 21.439] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 9.47% complete, ETA 13:03:04
# Fork: 1 of 1
# Warmup Iteration   1: 3471.255 ms/op
# Warmup Iteration   2: 3258.870 ms/op
# Warmup Iteration   3: 3304.799 ms/op
# Warmup Iteration   4: 3241.920 ms/op
# Warmup Iteration   5: 3734.148 ms/op
Iteration   1: 3875.660 ms/op
Iteration   2: 4001.061 ms/op
Iteration   3: 4135.340 ms/op
Iteration   4: 4628.508 ms/op
Iteration   5: 4595.104 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  4247.135 ±(99.9%) 1330.524 ms/op [Average]
  (min, avg, max) = (3875.660, 4247.135, 4628.508), stdev = 345.533
  CI (99.9%): [2916.611, 5577.659] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 9.56% complete, ETA 13:00:43
# Fork: 1 of 1
# Warmup Iteration   1: 3541.812 ms/op
# Warmup Iteration   2: 3161.269 ms/op
# Warmup Iteration   3: 3213.603 ms/op
# Warmup Iteration   4: 3080.748 ms/op
# Warmup Iteration   5: 3137.982 ms/op
Iteration   1: 2992.681 ms/op
Iteration   2: 3376.141 ms/op
Iteration   3: 3843.106 ms/op
Iteration   4: 4365.491 ms/op
Iteration   5: 4256.171 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  3766.718 ±(99.9%) 2241.667 ms/op [Average]
  (min, avg, max) = (2992.681, 3766.718, 4365.491), stdev = 582.154
  CI (99.9%): [1525.051, 6008.385] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 9.66% complete, ETA 12:57:57
# Fork: 1 of 1
# Warmup Iteration   1: 1.574 ms/op
# Warmup Iteration   2: 1.461 ms/op
# Warmup Iteration   3: 1.458 ms/op
# Warmup Iteration   4: 1.439 ms/op
# Warmup Iteration   5: 1.432 ms/op
Iteration   1: 1.434 ms/op
Iteration   2: 1.447 ms/op
Iteration   3: 1.447 ms/op
Iteration   4: 1.433 ms/op
Iteration   5: 1.438 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.440 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (1.433, 1.440, 1.447), stdev = 0.007
  CI (99.9%): [1.413, 1.467] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 9.75% complete, ETA 12:51:12
# Fork: 1 of 1
# Warmup Iteration   1: 1.536 ms/op
# Warmup Iteration   2: 1.427 ms/op
# Warmup Iteration   3: 1.444 ms/op
# Warmup Iteration   4: 1.420 ms/op
# Warmup Iteration   5: 1.409 ms/op
Iteration   1: 1.413 ms/op
Iteration   2: 1.425 ms/op
Iteration   3: 1.425 ms/op
Iteration   4: 1.414 ms/op
Iteration   5: 1.435 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.422 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (1.413, 1.422, 1.435), stdev = 0.009
  CI (99.9%): [1.388, 1.457] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 9.85% complete, ETA 12:44:34
# Fork: 1 of 1
# Warmup Iteration   1: 47.325 ms/op
# Warmup Iteration   2: 43.097 ms/op
# Warmup Iteration   3: 42.741 ms/op
# Warmup Iteration   4: 42.298 ms/op
# Warmup Iteration   5: 43.565 ms/op
Iteration   1: 42.780 ms/op
Iteration   2: 42.847 ms/op
Iteration   3: 42.835 ms/op
Iteration   4: 44.001 ms/op
Iteration   5: 42.740 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  43.041 ±(99.9%) 2.075 ms/op [Average]
  (min, avg, max) = (42.740, 43.041, 44.001), stdev = 0.539
  CI (99.9%): [40.966, 45.115] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 9.94% complete, ETA 12:38:06
# Fork: 1 of 1
# Warmup Iteration   1: 47.838 ms/op
# Warmup Iteration   2: 43.821 ms/op
# Warmup Iteration   3: 43.513 ms/op
# Warmup Iteration   4: 43.247 ms/op
# Warmup Iteration   5: 42.934 ms/op
Iteration   1: 43.361 ms/op
Iteration   2: 43.213 ms/op
Iteration   3: 43.353 ms/op
Iteration   4: 43.439 ms/op
Iteration   5: 43.430 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  43.359 ±(99.9%) 0.349 ms/op [Average]
  (min, avg, max) = (43.213, 43.359, 43.439), stdev = 0.091
  CI (99.9%): [43.011, 43.708] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 10.04% complete, ETA 12:31:45
# Fork: 1 of 1
# Warmup Iteration   1: 6660.163 ms/op
# Warmup Iteration   2: 6283.859 ms/op
# Warmup Iteration   3: 6276.199 ms/op
# Warmup Iteration   4: 7157.093 ms/op
# Warmup Iteration   5: 7605.847 ms/op
Iteration   1: 8855.559 ms/op
Iteration   2: 8609.791 ms/op
Iteration   3: 8617.859 ms/op
Iteration   4: 8543.743 ms/op
Iteration   5: 8588.300 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  8643.050 ±(99.9%) 470.662 ms/op [Average]
  (min, avg, max) = (8543.743, 8643.050, 8855.559), stdev = 122.229
  CI (99.9%): [8172.389, 9113.712] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 10.13% complete, ETA 12:35:35
# Fork: 1 of 1
# Warmup Iteration   1: 6591.200 ms/op
# Warmup Iteration   2: 6135.438 ms/op
# Warmup Iteration   3: 6139.407 ms/op
# Warmup Iteration   4: 7127.675 ms/op
# Warmup Iteration   5: 8790.476 ms/op
Iteration   1: 8910.410 ms/op
Iteration   2: 8741.639 ms/op
Iteration   3: 8745.956 ms/op
Iteration   4: 8622.678 ms/op
Iteration   5: 8512.236 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  8706.584 ±(99.9%) 574.817 ms/op [Average]
  (min, avg, max) = (8512.236, 8706.584, 8910.410), stdev = 149.278
  CI (99.9%): [8131.767, 9281.401] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 10.23% complete, ETA 12:39:25
# Fork: 1 of 1
# Warmup Iteration   1: 3.202 ms/op
# Warmup Iteration   2: 2.904 ms/op
# Warmup Iteration   3: 2.873 ms/op
# Warmup Iteration   4: 2.873 ms/op
# Warmup Iteration   5: 2.874 ms/op
Iteration   1: 2.865 ms/op
Iteration   2: 2.853 ms/op
Iteration   3: 2.876 ms/op
Iteration   4: 2.841 ms/op
Iteration   5: 2.855 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.858 ±(99.9%) 0.051 ms/op [Average]
  (min, avg, max) = (2.841, 2.858, 2.876), stdev = 0.013
  CI (99.9%): [2.807, 2.909] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 10.32% complete, ETA 12:33:10
# Fork: 1 of 1
# Warmup Iteration   1: 3.090 ms/op
# Warmup Iteration   2: 2.876 ms/op
# Warmup Iteration   3: 2.873 ms/op
# Warmup Iteration   4: 2.863 ms/op
# Warmup Iteration   5: 2.840 ms/op
Iteration   1: 2.835 ms/op
Iteration   2: 2.833 ms/op
Iteration   3: 2.850 ms/op
Iteration   4: 2.902 ms/op
Iteration   5: 2.907 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.865 ±(99.9%) 0.141 ms/op [Average]
  (min, avg, max) = (2.833, 2.865, 2.907), stdev = 0.036
  CI (99.9%): [2.725, 3.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 10.42% complete, ETA 12:27:02
# Fork: 1 of 1
# Warmup Iteration   1: 94.001 ms/op
# Warmup Iteration   2: 85.340 ms/op
# Warmup Iteration   3: 86.198 ms/op
# Warmup Iteration   4: 84.635 ms/op
# Warmup Iteration   5: 86.666 ms/op
Iteration   1: 85.128 ms/op
Iteration   2: 85.119 ms/op
Iteration   3: 86.098 ms/op
Iteration   4: 86.389 ms/op
Iteration   5: 84.434 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  85.434 ±(99.9%) 3.072 ms/op [Average]
  (min, avg, max) = (84.434, 85.434, 86.389), stdev = 0.798
  CI (99.9%): [82.362, 88.505] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 10.51% complete, ETA 12:21:02
# Fork: 1 of 1
# Warmup Iteration   1: 95.714 ms/op
# Warmup Iteration   2: 85.360 ms/op
# Warmup Iteration   3: 86.803 ms/op
# Warmup Iteration   4: 86.711 ms/op
# Warmup Iteration   5: 86.147 ms/op
Iteration   1: 84.048 ms/op
Iteration   2: 84.806 ms/op
Iteration   3: 85.016 ms/op
Iteration   4: 85.684 ms/op
Iteration   5: 85.578 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  85.026 ±(99.9%) 2.542 ms/op [Average]
  (min, avg, max) = (84.048, 85.026, 85.684), stdev = 0.660
  CI (99.9%): [82.484, 87.569] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 10.61% complete, ETA 12:15:09
# Fork: 1 of 1
# Warmup Iteration   1: 13075.582 ms/op
# Warmup Iteration   2: 15294.980 ms/op
# Warmup Iteration   3: 17826.399 ms/op
# Warmup Iteration   4: 17602.629 ms/op
# Warmup Iteration   5: 18042.573 ms/op
Iteration   1: 17471.376 ms/op
Iteration   2: 17650.367 ms/op
Iteration   3: 17434.020 ms/op
Iteration   4: 17488.489 ms/op
Iteration   5: 17287.438 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  17466.338 ±(99.9%) 499.964 ms/op [Average]
  (min, avg, max) = (17287.438, 17466.338, 17650.367), stdev = 129.839
  CI (99.9%): [16966.374, 17966.301] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 10.70% complete, ETA 12:31:34
# Fork: 1 of 1
# Warmup Iteration   1: 12850.911 ms/op
# Warmup Iteration   2: 13587.786 ms/op
# Warmup Iteration   3: 17090.639 ms/op
# Warmup Iteration   4: 16821.040 ms/op
# Warmup Iteration   5: 16503.669 ms/op
Iteration   1: 16694.746 ms/op
Iteration   2: 16706.886 ms/op
Iteration   3: 16621.570 ms/op
Iteration   4: 16923.291 ms/op
Iteration   5: 16589.723 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  16707.243 ±(99.9%) 502.002 ms/op [Average]
  (min, avg, max) = (16589.723, 16707.243, 16923.291), stdev = 130.368
  CI (99.9%): [16205.241, 17209.245] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 10.80% complete, ETA 12:46:27
# Fork: 1 of 1
# Warmup Iteration   1: 6.206 ms/op
# Warmup Iteration   2: 5.728 ms/op
# Warmup Iteration   3: 5.740 ms/op
# Warmup Iteration   4: 5.671 ms/op
# Warmup Iteration   5: 5.668 ms/op
Iteration   1: 5.723 ms/op
Iteration   2: 5.714 ms/op
Iteration   3: 5.651 ms/op
Iteration   4: 5.654 ms/op
Iteration   5: 5.664 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.681 ±(99.9%) 0.133 ms/op [Average]
  (min, avg, max) = (5.651, 5.681, 5.723), stdev = 0.034
  CI (99.9%): [5.548, 5.813] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 10.89% complete, ETA 12:40:24
# Fork: 1 of 1
# Warmup Iteration   1: 6.378 ms/op
# Warmup Iteration   2: 6.084 ms/op
# Warmup Iteration   3: 5.977 ms/op
# Warmup Iteration   4: 5.946 ms/op
# Warmup Iteration   5: 5.944 ms/op
Iteration   1: 5.997 ms/op
Iteration   2: 6.041 ms/op
Iteration   3: 6.162 ms/op
Iteration   4: 6.049 ms/op
Iteration   5: 5.991 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  6.048 ±(99.9%) 0.264 ms/op [Average]
  (min, avg, max) = (5.991, 6.048, 6.162), stdev = 0.069
  CI (99.9%): [5.784, 6.312] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 10.98% complete, ETA 12:34:27
# Fork: 1 of 1
# Warmup Iteration   1: 187.967 ms/op
# Warmup Iteration   2: 175.045 ms/op
# Warmup Iteration   3: 171.607 ms/op
# Warmup Iteration   4: 173.066 ms/op
# Warmup Iteration   5: 171.517 ms/op
Iteration   1: 168.469 ms/op
Iteration   2: 171.131 ms/op
Iteration   3: 172.178 ms/op
Iteration   4: 170.362 ms/op
Iteration   5: 172.191 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  170.866 ±(99.9%) 5.949 ms/op [Average]
  (min, avg, max) = (168.469, 170.866, 172.191), stdev = 1.545
  CI (99.9%): [164.917, 176.815] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 11.08% complete, ETA 12:28:40
# Fork: 1 of 1
# Warmup Iteration   1: 186.995 ms/op
# Warmup Iteration   2: 172.412 ms/op
# Warmup Iteration   3: 170.968 ms/op
# Warmup Iteration   4: 172.035 ms/op
# Warmup Iteration   5: 172.297 ms/op
Iteration   1: 173.496 ms/op
Iteration   2: 172.674 ms/op
Iteration   3: 172.890 ms/op
Iteration   4: 172.661 ms/op
Iteration   5: 174.696 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  173.283 ±(99.9%) 3.309 ms/op [Average]
  (min, avg, max) = (172.661, 173.283, 174.696), stdev = 0.859
  CI (99.9%): [169.975, 176.592] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 11.17% complete, ETA 12:22:58
# Fork: 1 of 1
# Warmup Iteration   1: 26921.778 ms/op
# Warmup Iteration   2: 32597.901 ms/op
# Warmup Iteration   3: 32330.905 ms/op
# Warmup Iteration   4: 32520.736 ms/op
# Warmup Iteration   5: 33985.148 ms/op
Iteration   1: 44075.360 ms/op
Iteration   2: 41257.381 ms/op
Iteration   3: 43376.386 ms/op
Iteration   4: 55570.806 ms/op
Iteration   5: 49501.626 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  46756.312 ±(99.9%) 22294.005 ms/op [Average]
  (min, avg, max) = (41257.381, 46756.312, 55570.806), stdev = 5789.682
  CI (99.9%): [24462.307, 69050.317] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 11.27% complete, ETA 13:07:34
# Fork: 1 of 1
# Warmup Iteration   1: 39674.848 ms/op
# Warmup Iteration   2: 52746.137 ms/op
# Warmup Iteration   3: 50626.813 ms/op
# Warmup Iteration   4: 44215.044 ms/op
# Warmup Iteration   5: 40816.388 ms/op
Iteration   1: 46548.212 ms/op
Iteration   2: 48703.073 ms/op
Iteration   3: 43099.587 ms/op
Iteration   4: 43888.787 ms/op
Iteration   5: 42768.609 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  45001.653 ±(99.9%) 9805.006 ms/op [Average]
  (min, avg, max) = (42768.609, 45001.653, 48703.073), stdev = 2546.329
  CI (99.9%): [35196.647, 54806.660] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 11.36% complete, ETA 13:59:14
# Fork: 1 of 1
# Warmup Iteration   1: 11.885 ms/op
# Warmup Iteration   2: 11.175 ms/op
# Warmup Iteration   3: 10.940 ms/op
# Warmup Iteration   4: 11.003 ms/op
# Warmup Iteration   5: 11.180 ms/op
Iteration   1: 11.090 ms/op
Iteration   2: 10.940 ms/op
Iteration   3: 14.153 ms/op
Iteration   4: 17.979 ms/op
Iteration   5: 19.383 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  14.709 ±(99.9%) 14.933 ms/op [Average]
  (min, avg, max) = (10.940, 14.709, 19.383), stdev = 3.878
  CI (99.9%): [? 0, 29.641] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 11.46% complete, ETA 13:52:46
# Fork: 1 of 1
# Warmup Iteration   1: 11.978 ms/op
# Warmup Iteration   2: 11.038 ms/op
# Warmup Iteration   3: 10.968 ms/op
# Warmup Iteration   4: 11.023 ms/op
# Warmup Iteration   5: 10.937 ms/op
Iteration   1: 11.051 ms/op
Iteration   2: 10.858 ms/op
Iteration   3: 13.864 ms/op
Iteration   4: 18.810 ms/op
Iteration   5: 18.426 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  14.602 ±(99.9%) 14.852 ms/op [Average]
  (min, avg, max) = (10.858, 14.602, 18.810), stdev = 3.857
  CI (99.9%): [? 0, 29.454] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 11.55% complete, ETA 13:46:24
# Fork: 1 of 1
# Warmup Iteration   1: 361.748 ms/op
# Warmup Iteration   2: 332.856 ms/op
# Warmup Iteration   3: 329.872 ms/op
# Warmup Iteration   4: 330.996 ms/op
# Warmup Iteration   5: 329.770 ms/op
Iteration   1: 337.724 ms/op
Iteration   2: 609.633 ms/op
Iteration   3: 531.984 ms/op
Iteration   4: 576.651 ms/op
Iteration   5: 541.325 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  519.464 ±(99.9%) 408.718 ms/op [Average]
  (min, avg, max) = (337.724, 519.464, 609.633), stdev = 106.143
  CI (99.9%): [110.746, 928.181] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 11.65% complete, ETA 13:40:24
# Fork: 1 of 1
# Warmup Iteration   1: 371.111 ms/op
# Warmup Iteration   2: 332.701 ms/op
# Warmup Iteration   3: 330.006 ms/op
# Warmup Iteration   4: 328.840 ms/op
# Warmup Iteration   5: 328.728 ms/op
Iteration   1: 344.875 ms/op
Iteration   2: 578.652 ms/op
Iteration   3: 555.807 ms/op
Iteration   4: 520.983 ms/op
Iteration   5: 553.532 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  510.770 ±(99.9%) 365.763 ms/op [Average]
  (min, avg, max) = (344.875, 510.770, 578.652), stdev = 94.987
  CI (99.9%): [145.007, 876.533] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 11.74% complete, ETA 13:34:29
# Fork: 1 of 1
# Warmup Iteration   1: 84999.778 ms/op
# Warmup Iteration   2: 92752.787 ms/op
# Warmup Iteration   3: 96622.497 ms/op
# Warmup Iteration   4: 98110.403 ms/op
# Warmup Iteration   5: 100839.298 ms/op
Iteration   1: 91647.052 ms/op
Iteration   2: 102372.354 ms/op
Iteration   3: 112531.279 ms/op
Iteration   4: 116072.218 ms/op
Iteration   5: 113121.622 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  107148.905 ±(99.9%) 38860.596 ms/op [Average]
  (min, avg, max) = (91647.052, 107148.905, 116072.218), stdev = 10091.973
  CI (99.9%): [68288.309, 146009.501] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 11.84% complete, ETA 15:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 113659.680 ms/op
# Warmup Iteration   2: 118457.366 ms/op
# Warmup Iteration   3: 120175.420 ms/op
# Warmup Iteration   4: 121422.368 ms/op
# Warmup Iteration   5: 130532.339 ms/op
Iteration   1: 138515.408 ms/op
Iteration   2: 128251.971 ms/op
Iteration   3: 115349.578 ms/op
Iteration   4: 116476.764 ms/op
Iteration   5: 130342.040 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  125787.152 ±(99.9%) 37750.900 ms/op [Average]
  (min, avg, max) = (115349.578, 125787.152, 138515.408), stdev = 9803.789
  CI (99.9%): [88036.252, 163538.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 11.93% complete, ETA 17:56:05
# Fork: 1 of 1
# Warmup Iteration   1: 26.773 ms/op
# Warmup Iteration   2: 26.072 ms/op
# Warmup Iteration   3: 26.000 ms/op
# Warmup Iteration   4: 26.674 ms/op
# Warmup Iteration   5: 26.943 ms/op
Iteration   1: 25.905 ms/op
Iteration   2: 28.985 ms/op
Iteration   3: 44.572 ms/op
Iteration   4: 80.752 ms/op
Iteration   5: 50.276 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  46.098 ±(99.9%) 84.391 ms/op [Average]
  (min, avg, max) = (25.905, 46.098, 80.752), stdev = 21.916
  CI (99.9%): [? 0, 130.489] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 12.03% complete, ETA 17:47:46
# Fork: 1 of 1
# Warmup Iteration   1: 32.637 ms/op
# Warmup Iteration   2: 28.718 ms/op
# Warmup Iteration   3: 35.355 ms/op
# Warmup Iteration   4: 34.371 ms/op
# Warmup Iteration   5: 31.932 ms/op
Iteration   1: 36.642 ms/op
Iteration   2: 30.217 ms/op
Iteration   3: 60.403 ms/op
Iteration   4: 63.164 ms/op
Iteration   5: 55.022 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  49.090 ±(99.9%) 56.867 ms/op [Average]
  (min, avg, max) = (30.217, 49.090, 63.164), stdev = 14.768
  CI (99.9%): [? 0, 105.957] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 12.12% complete, ETA 17:39:34
# Fork: 1 of 1
# Warmup Iteration   1: 875.368 ms/op
# Warmup Iteration   2: 927.294 ms/op
# Warmup Iteration   3: 852.243 ms/op
# Warmup Iteration   4: 831.051 ms/op
# Warmup Iteration   5: 1077.093 ms/op
Iteration   1: 1244.427 ms/op
Iteration   2: 1251.152 ms/op
Iteration   3: 1106.929 ms/op
Iteration   4: 1119.713 ms/op
Iteration   5: 1115.203 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1167.485 ±(99.9%) 282.982 ms/op [Average]
  (min, avg, max) = (1106.929, 1167.485, 1251.152), stdev = 73.490
  CI (99.9%): [884.502, 1450.467] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 12.22% complete, ETA 17:32:04
# Fork: 1 of 1
# Warmup Iteration   1: 845.328 ms/op
# Warmup Iteration   2: 774.178 ms/op
# Warmup Iteration   3: 828.447 ms/op
# Warmup Iteration   4: 831.245 ms/op
# Warmup Iteration   5: 983.047 ms/op
Iteration   1: 1584.194 ms/op
Iteration   2: 1443.234 ms/op
Iteration   3: 1198.647 ms/op
Iteration   4: 1286.890 ms/op
Iteration   5: 1239.399 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1350.473 ±(99.9%) 616.890 ms/op [Average]
  (min, avg, max) = (1198.647, 1350.473, 1584.194), stdev = 160.204
  CI (99.9%): [733.583, 1967.363] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 12.31% complete, ETA 17:24:43
# Fork: 1 of 1
# Warmup Iteration   1: 219380.020 ms/op
# Warmup Iteration   2: 243650.633 ms/op
# Warmup Iteration   3: 243469.462 ms/op
# Warmup Iteration   4: 218599.178 ms/op
# Warmup Iteration   5: 240727.527 ms/op
Iteration   1: 251821.441 ms/op
Iteration   2: 236284.548 ms/op
Iteration   3: 258078.309 ms/op
Iteration   4: 262415.817 ms/op
Iteration   5: 267347.637 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  255189.550 ±(99.9%) 46252.878 ms/op [Average]
  (min, avg, max) = (236284.548, 255189.550, 267347.637), stdev = 12011.726
  CI (99.9%): [208936.672, 301442.428] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 12.41% complete, ETA 22:03:10
# Fork: 1 of 1
# Warmup Iteration   1: 255855.742 ms/op
# Warmup Iteration   2: 258002.660 ms/op
# Warmup Iteration   3: 274726.347 ms/op
# Warmup Iteration   4: 271352.211 ms/op
# Warmup Iteration   5: 246088.188 ms/op
Iteration   1: 254696.412 ms/op
Iteration   2: 234786.262 ms/op
Iteration   3: 204771.032 ms/op
Iteration   4: 206328.733 ms/op
Iteration   5: 203927.757 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  220902.039 ±(99.9%) 88135.767 ms/op [Average]
  (min, avg, max) = (203927.757, 220902.039, 254696.412), stdev = 22888.579
  CI (99.9%): [132766.272, 309037.806] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 12.50% complete, ETA 1 days, 02:33:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.024 ms/op
# Warmup Iteration   3: 0.024 ms/op
# Warmup Iteration   4: 0.024 ms/op
# Warmup Iteration   5: 0.024 ms/op
Iteration   1: 0.024 ms/op
Iteration   2: 0.024 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.043 ms/op
Iteration   5: 0.043 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.033 ±(99.9%) 0.037 ms/op [Average]
  (min, avg, max) = (0.024, 0.033, 0.043), stdev = 0.010
  CI (99.9%): [? 0, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 12.59% complete, ETA 1 days, 02:20:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.041 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.028 ±(99.9%) 0.037 ms/op [Average]
  (min, avg, max) = (0.020, 0.028, 0.041), stdev = 0.010
  CI (99.9%): [? 0, 0.065] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 12.69% complete, ETA 1 days, 02:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.704 ms/op
# Warmup Iteration   2: 0.650 ms/op
# Warmup Iteration   3: 0.648 ms/op
# Warmup Iteration   4: 0.642 ms/op
# Warmup Iteration   5: 0.642 ms/op
Iteration   1: 0.638 ms/op
Iteration   2: 0.637 ms/op
Iteration   3: 0.786 ms/op
Iteration   4: 1.078 ms/op
Iteration   5: 1.216 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.871 ±(99.9%) 1.016 ms/op [Average]
  (min, avg, max) = (0.637, 0.871, 1.216), stdev = 0.264
  CI (99.9%): [? 0, 1.887] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 12.78% complete, ETA 1 days, 01:56:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.694 ms/op
# Warmup Iteration   2: 0.641 ms/op
# Warmup Iteration   3: 0.646 ms/op
# Warmup Iteration   4: 0.691 ms/op
# Warmup Iteration   5: 0.634 ms/op
Iteration   1: 0.637 ms/op
Iteration   2: 0.638 ms/op
Iteration   3: 0.772 ms/op
Iteration   4: 1.185 ms/op
Iteration   5: 1.006 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.847 ±(99.9%) 0.929 ms/op [Average]
  (min, avg, max) = (0.637, 0.847, 1.185), stdev = 0.241
  CI (99.9%): [? 0, 1.776] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 12.88% complete, ETA 1 days, 01:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 109.468 ms/op
# Warmup Iteration   2: 101.976 ms/op
# Warmup Iteration   3: 101.656 ms/op
# Warmup Iteration   4: 103.972 ms/op
# Warmup Iteration   5: 103.466 ms/op
Iteration   1: 100.967 ms/op
Iteration   2: 97.862 ms/op
Iteration   3: 177.023 ms/op
Iteration   4: 164.385 ms/op
Iteration   5: 154.179 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  138.883 ±(99.9%) 142.256 ms/op [Average]
  (min, avg, max) = (97.862, 138.883, 177.023), stdev = 36.944
  CI (99.9%): [? 0, 281.140] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 12.97% complete, ETA 1 days, 01:32:38
# Fork: 1 of 1
# Warmup Iteration   1: 112.056 ms/op
# Warmup Iteration   2: 106.818 ms/op
# Warmup Iteration   3: 101.699 ms/op
# Warmup Iteration   4: 105.285 ms/op
# Warmup Iteration   5: 106.680 ms/op
Iteration   1: 116.396 ms/op
Iteration   2: 120.930 ms/op
Iteration   3: 211.503 ms/op
Iteration   4: 181.397 ms/op
Iteration   5: 183.526 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  162.750 ±(99.9%) 161.702 ms/op [Average]
  (min, avg, max) = (116.396, 162.750, 211.503), stdev = 41.994
  CI (99.9%): [1.048, 324.452] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 13.07% complete, ETA 1 days, 01:21:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.044 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.041 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.041 ms/op
Iteration   2: 0.042 ms/op
Iteration   3: 0.054 ms/op
Iteration   4: 0.080 ms/op
Iteration   5: 0.070 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.057 ±(99.9%) 0.067 ms/op [Average]
  (min, avg, max) = (0.041, 0.057, 0.080), stdev = 0.017
  CI (99.9%): [? 0, 0.124] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 13.16% complete, ETA 1 days, 01:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.044 ms/op
# Warmup Iteration   4: 0.044 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.044 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.076 ms/op
Iteration   5: 0.080 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.059 ±(99.9%) 0.068 ms/op [Average]
  (min, avg, max) = (0.044, 0.059, 0.080), stdev = 0.018
  CI (99.9%): [? 0, 0.127] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 13.26% complete, ETA 1 days, 00:58:25
# Fork: 1 of 1
# Warmup Iteration   1: 1.408 ms/op
# Warmup Iteration   2: 1.276 ms/op
# Warmup Iteration   3: 1.279 ms/op
# Warmup Iteration   4: 1.287 ms/op
# Warmup Iteration   5: 1.267 ms/op
Iteration   1: 1.289 ms/op
Iteration   2: 1.269 ms/op
Iteration   3: 1.573 ms/op
Iteration   4: 1.919 ms/op
Iteration   5: 2.398 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.690 ±(99.9%) 1.832 ms/op [Average]
  (min, avg, max) = (1.269, 1.690, 2.398), stdev = 0.476
  CI (99.9%): [? 0, 3.522] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 13.35% complete, ETA 1 days, 00:47:18
# Fork: 1 of 1
# Warmup Iteration   1: 1.411 ms/op
# Warmup Iteration   2: 1.273 ms/op
# Warmup Iteration   3: 1.275 ms/op
# Warmup Iteration   4: 1.279 ms/op
# Warmup Iteration   5: 1.288 ms/op
Iteration   1: 1.282 ms/op
Iteration   2: 1.292 ms/op
Iteration   3: 1.469 ms/op
Iteration   4: 2.245 ms/op
Iteration   5: 2.397 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.737 ±(99.9%) 2.082 ms/op [Average]
  (min, avg, max) = (1.282, 1.737, 2.397), stdev = 0.541
  CI (99.9%): [? 0, 3.819] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 13.45% complete, ETA 1 days, 00:36:21
# Fork: 1 of 1
# Warmup Iteration   1: 218.322 ms/op
# Warmup Iteration   2: 205.988 ms/op
# Warmup Iteration   3: 203.354 ms/op
# Warmup Iteration   4: 212.076 ms/op
# Warmup Iteration   5: 201.744 ms/op
Iteration   1: 208.132 ms/op
Iteration   2: 222.364 ms/op
Iteration   3: 330.113 ms/op
Iteration   4: 313.270 ms/op
Iteration   5: 306.494 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  276.074 ±(99.9%) 217.229 ms/op [Average]
  (min, avg, max) = (208.132, 276.074, 330.113), stdev = 56.414
  CI (99.9%): [58.845, 493.304] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 13.54% complete, ETA 1 days, 00:25:43
# Fork: 1 of 1
# Warmup Iteration   1: 218.501 ms/op
# Warmup Iteration   2: 205.281 ms/op
# Warmup Iteration   3: 212.325 ms/op
# Warmup Iteration   4: 195.959 ms/op
# Warmup Iteration   5: 189.998 ms/op
Iteration   1: 197.915 ms/op
Iteration   2: 227.174 ms/op
Iteration   3: 355.281 ms/op
Iteration   4: 282.619 ms/op
Iteration   5: 309.716 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  274.541 ±(99.9%) 243.054 ms/op [Average]
  (min, avg, max) = (197.915, 274.541, 355.281), stdev = 63.120
  CI (99.9%): [31.487, 517.595] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 13.64% complete, ETA 1 days, 00:15:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ms/op
# Warmup Iteration   2: 0.088 ms/op
# Warmup Iteration   3: 0.089 ms/op
# Warmup Iteration   4: 0.088 ms/op
# Warmup Iteration   5: 0.088 ms/op
Iteration   1: 0.088 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.103 ms/op
Iteration   4: 0.160 ms/op
Iteration   5: 0.148 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.117 ±(99.9%) 0.132 ms/op [Average]
  (min, avg, max) = (0.088, 0.117, 0.160), stdev = 0.034
  CI (99.9%): [? 0, 0.249] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 13.73% complete, ETA 1 days, 00:04:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ms/op
# Warmup Iteration   2: 0.089 ms/op
# Warmup Iteration   3: 0.089 ms/op
# Warmup Iteration   4: 0.089 ms/op
# Warmup Iteration   5: 0.088 ms/op
Iteration   1: 0.088 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.103 ms/op
Iteration   4: 0.163 ms/op
Iteration   5: 0.144 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.117 ±(99.9%) 0.133 ms/op [Average]
  (min, avg, max) = (0.088, 0.117, 0.163), stdev = 0.034
  CI (99.9%): [? 0, 0.250] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 13.83% complete, ETA 23:54:17
# Fork: 1 of 1
# Warmup Iteration   1: 2.798 ms/op
# Warmup Iteration   2: 2.591 ms/op
# Warmup Iteration   3: 2.603 ms/op
# Warmup Iteration   4: 2.532 ms/op
# Warmup Iteration   5: 2.590 ms/op
Iteration   1: 2.566 ms/op
Iteration   2: 2.564 ms/op
Iteration   3: 2.926 ms/op
Iteration   4: 4.140 ms/op
Iteration   5: 4.832 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3.406 ±(99.9%) 3.955 ms/op [Average]
  (min, avg, max) = (2.564, 3.406, 4.832), stdev = 1.027
  CI (99.9%): [? 0, 7.361] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 13.92% complete, ETA 23:44:03
# Fork: 1 of 1
# Warmup Iteration   1: 2.817 ms/op
# Warmup Iteration   2: 2.571 ms/op
# Warmup Iteration   3: 2.563 ms/op
# Warmup Iteration   4: 2.578 ms/op
# Warmup Iteration   5: 2.563 ms/op
Iteration   1: 2.651 ms/op
Iteration   2: 2.566 ms/op
Iteration   3: 2.941 ms/op
Iteration   4: 3.959 ms/op
Iteration   5: 4.148 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3.253 ±(99.9%) 2.877 ms/op [Average]
  (min, avg, max) = (2.566, 3.253, 4.148), stdev = 0.747
  CI (99.9%): [0.377, 6.130] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 14.02% complete, ETA 23:33:56
# Fork: 1 of 1
# Warmup Iteration   1: 449.346 ms/op
# Warmup Iteration   2: 410.086 ms/op
# Warmup Iteration   3: 411.489 ms/op
# Warmup Iteration   4: 403.007 ms/op
# Warmup Iteration   5: 399.979 ms/op
Iteration   1: 392.607 ms/op
Iteration   2: 575.773 ms/op
Iteration   3: 631.451 ms/op
Iteration   4: 682.661 ms/op
Iteration   5: 670.464 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  590.591 ±(99.9%) 455.383 ms/op [Average]
  (min, avg, max) = (392.607, 590.591, 682.661), stdev = 118.262
  CI (99.9%): [135.208, 1045.975] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 14.11% complete, ETA 23:24:14
# Fork: 1 of 1
# Warmup Iteration   1: 440.434 ms/op
# Warmup Iteration   2: 420.790 ms/op
# Warmup Iteration   3: 409.296 ms/op
# Warmup Iteration   4: 402.168 ms/op
# Warmup Iteration   5: 393.308 ms/op
Iteration   1: 392.451 ms/op
Iteration   2: 598.371 ms/op
Iteration   3: 571.190 ms/op
Iteration   4: 665.871 ms/op
Iteration   5: 654.871 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  576.551 ±(99.9%) 424.051 ms/op [Average]
  (min, avg, max) = (392.451, 576.551, 665.871), stdev = 110.125
  CI (99.9%): [152.500, 1000.601] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 14.20% complete, ETA 23:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.189 ms/op
# Warmup Iteration   2: 0.175 ms/op
# Warmup Iteration   3: 0.177 ms/op
# Warmup Iteration   4: 0.175 ms/op
# Warmup Iteration   5: 0.174 ms/op
Iteration   1: 0.173 ms/op
Iteration   2: 0.177 ms/op
Iteration   3: 0.202 ms/op
Iteration   4: 0.311 ms/op
Iteration   5: 0.269 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.226 ±(99.9%) 0.235 ms/op [Average]
  (min, avg, max) = (0.173, 0.226, 0.311), stdev = 0.061
  CI (99.9%): [? 0, 0.462] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 14.30% complete, ETA 23:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.190 ms/op
# Warmup Iteration   2: 0.177 ms/op
# Warmup Iteration   3: 0.172 ms/op
# Warmup Iteration   4: 0.174 ms/op
# Warmup Iteration   5: 0.176 ms/op
Iteration   1: 0.174 ms/op
Iteration   2: 0.174 ms/op
Iteration   3: 0.210 ms/op
Iteration   4: 0.315 ms/op
Iteration   5: 0.269 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.229 ±(99.9%) 0.239 ms/op [Average]
  (min, avg, max) = (0.174, 0.229, 0.315), stdev = 0.062
  CI (99.9%): [? 0, 0.468] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 14.39% complete, ETA 22:55:20
# Fork: 1 of 1
# Warmup Iteration   1: 5.529 ms/op
# Warmup Iteration   2: 5.016 ms/op
# Warmup Iteration   3: 5.037 ms/op
# Warmup Iteration   4: 5.071 ms/op
# Warmup Iteration   5: 5.068 ms/op
Iteration   1: 5.108 ms/op
Iteration   2: 5.063 ms/op
Iteration   3: 6.032 ms/op
Iteration   4: 7.839 ms/op
Iteration   5: 8.524 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  6.513 ±(99.9%) 6.122 ms/op [Average]
  (min, avg, max) = (5.063, 6.513, 8.524), stdev = 1.590
  CI (99.9%): [0.392, 12.635] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 14.49% complete, ETA 22:45:52
# Fork: 1 of 1
# Warmup Iteration   1: 5.660 ms/op
# Warmup Iteration   2: 5.097 ms/op
# Warmup Iteration   3: 5.138 ms/op
# Warmup Iteration   4: 5.130 ms/op
# Warmup Iteration   5: 5.121 ms/op
Iteration   1: 5.118 ms/op
Iteration   2: 5.073 ms/op
Iteration   3: 5.930 ms/op
Iteration   4: 9.670 ms/op
Iteration   5: 8.487 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  6.856 ±(99.9%) 8.085 ms/op [Average]
  (min, avg, max) = (5.073, 6.856, 9.670), stdev = 2.100
  CI (99.9%): [? 0, 14.941] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 14.58% complete, ETA 22:36:31
# Fork: 1 of 1
# Warmup Iteration   1: 850.326 ms/op
# Warmup Iteration   2: 805.062 ms/op
# Warmup Iteration   3: 819.898 ms/op
# Warmup Iteration   4: 806.757 ms/op
# Warmup Iteration   5: 1004.836 ms/op
Iteration   1: 1595.577 ms/op
Iteration   2: 1455.565 ms/op
Iteration   3: 1335.027 ms/op
Iteration   4: 1216.725 ms/op
Iteration   5: 1188.690 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1358.317 ±(99.9%) 653.231 ms/op [Average]
  (min, avg, max) = (1188.690, 1358.317, 1595.577), stdev = 169.642
  CI (99.9%): [705.086, 2011.548] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 14.68% complete, ETA 22:27:49
# Fork: 1 of 1
# Warmup Iteration   1: 860.304 ms/op
# Warmup Iteration   2: 820.310 ms/op
# Warmup Iteration   3: 810.368 ms/op
# Warmup Iteration   4: 810.659 ms/op
# Warmup Iteration   5: 960.886 ms/op
Iteration   1: 1301.529 ms/op
Iteration   2: 1211.425 ms/op
Iteration   3: 1271.730 ms/op
Iteration   4: 1103.707 ms/op
Iteration   5: 1285.887 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1234.855 ±(99.9%) 311.392 ms/op [Average]
  (min, avg, max) = (1103.707, 1234.855, 1301.529), stdev = 80.867
  CI (99.9%): [923.464, 1546.247] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 14.77% complete, ETA 22:19:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.386 ms/op
# Warmup Iteration   2: 0.357 ms/op
# Warmup Iteration   3: 0.355 ms/op
# Warmup Iteration   4: 0.351 ms/op
# Warmup Iteration   5: 0.352 ms/op
Iteration   1: 0.354 ms/op
Iteration   2: 0.350 ms/op
Iteration   3: 0.426 ms/op
Iteration   4: 0.605 ms/op
Iteration   5: 0.536 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.454 ±(99.9%) 0.435 ms/op [Average]
  (min, avg, max) = (0.350, 0.454, 0.605), stdev = 0.113
  CI (99.9%): [0.019, 0.889] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 14.87% complete, ETA 22:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.390 ms/op
# Warmup Iteration   2: 0.365 ms/op
# Warmup Iteration   3: 0.368 ms/op
# Warmup Iteration   4: 0.362 ms/op
# Warmup Iteration   5: 0.358 ms/op
Iteration   1: 0.364 ms/op
Iteration   2: 0.360 ms/op
Iteration   3: 0.415 ms/op
Iteration   4: 0.611 ms/op
Iteration   5: 0.662 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.482 ±(99.9%) 0.551 ms/op [Average]
  (min, avg, max) = (0.360, 0.482, 0.662), stdev = 0.143
  CI (99.9%): [? 0, 1.034] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 14.96% complete, ETA 22:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 11.272 ms/op
# Warmup Iteration   2: 10.252 ms/op
# Warmup Iteration   3: 10.535 ms/op
# Warmup Iteration   4: 10.370 ms/op
# Warmup Iteration   5: 10.257 ms/op
Iteration   1: 10.152 ms/op
Iteration   2: 10.167 ms/op
Iteration   3: 12.584 ms/op
Iteration   4: 16.265 ms/op
Iteration   5: 15.279 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  12.889 ±(99.9%) 10.908 ms/op [Average]
  (min, avg, max) = (10.152, 12.889, 16.265), stdev = 2.833
  CI (99.9%): [1.982, 23.797] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 15.06% complete, ETA 21:52:29
# Fork: 1 of 1
# Warmup Iteration   1: 11.222 ms/op
# Warmup Iteration   2: 10.398 ms/op
# Warmup Iteration   3: 10.261 ms/op
# Warmup Iteration   4: 10.213 ms/op
# Warmup Iteration   5: 10.223 ms/op
Iteration   1: 10.202 ms/op
Iteration   2: 10.354 ms/op
Iteration   3: 12.709 ms/op
Iteration   4: 18.017 ms/op
Iteration   5: 18.262 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  13.909 ±(99.9%) 15.360 ms/op [Average]
  (min, avg, max) = (10.202, 13.909, 18.262), stdev = 3.989
  CI (99.9%): [? 0, 29.268] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 15.15% complete, ETA 21:43:49
# Fork: 1 of 1
# Warmup Iteration   1: 1716.265 ms/op
# Warmup Iteration   2: 1622.816 ms/op
# Warmup Iteration   3: 1627.377 ms/op
# Warmup Iteration   4: 1636.672 ms/op
# Warmup Iteration   5: 1920.578 ms/op
Iteration   1: 2568.223 ms/op
Iteration   2: 2422.969 ms/op
Iteration   3: 2476.559 ms/op
Iteration   4: 2586.541 ms/op
Iteration   5: 2730.256 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  2556.910 ±(99.9%) 453.377 ms/op [Average]
  (min, avg, max) = (2422.969, 2556.910, 2730.256), stdev = 117.740
  CI (99.9%): [2103.533, 3010.286] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 15.25% complete, ETA 21:36:18
# Fork: 1 of 1
# Warmup Iteration   1: 1708.140 ms/op
# Warmup Iteration   2: 1672.802 ms/op
# Warmup Iteration   3: 1598.221 ms/op
# Warmup Iteration   4: 1610.663 ms/op
# Warmup Iteration   5: 2103.201 ms/op
Iteration   1: 2381.919 ms/op
Iteration   2: 2550.440 ms/op
Iteration   3: 2283.825 ms/op
Iteration   4: 2421.479 ms/op
Iteration   5: 2443.044 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  2416.141 ±(99.9%) 372.674 ms/op [Average]
  (min, avg, max) = (2283.825, 2416.141, 2550.440), stdev = 96.782
  CI (99.9%): [2043.468, 2788.815] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 15.34% complete, ETA 21:28:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.774 ms/op
# Warmup Iteration   2: 0.719 ms/op
# Warmup Iteration   3: 0.712 ms/op
# Warmup Iteration   4: 0.718 ms/op
# Warmup Iteration   5: 0.719 ms/op
Iteration   1: 0.716 ms/op
Iteration   2: 0.716 ms/op
Iteration   3: 0.853 ms/op
Iteration   4: 1.061 ms/op
Iteration   5: 1.201 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.909 ±(99.9%) 0.830 ms/op [Average]
  (min, avg, max) = (0.716, 0.909, 1.201), stdev = 0.216
  CI (99.9%): [0.079, 1.740] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 15.44% complete, ETA 21:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.775 ms/op
# Warmup Iteration   2: 0.717 ms/op
# Warmup Iteration   3: 0.709 ms/op
# Warmup Iteration   4: 0.708 ms/op
# Warmup Iteration   5: 0.705 ms/op
Iteration   1: 0.696 ms/op
Iteration   2: 0.702 ms/op
Iteration   3: 0.806 ms/op
Iteration   4: 1.201 ms/op
Iteration   5: 1.220 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.925 ±(99.9%) 1.018 ms/op [Average]
  (min, avg, max) = (0.696, 0.925, 1.220), stdev = 0.264
  CI (99.9%): [? 0, 1.943] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 15.53% complete, ETA 21:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 22.129 ms/op
# Warmup Iteration   2: 20.566 ms/op
# Warmup Iteration   3: 20.331 ms/op
# Warmup Iteration   4: 20.274 ms/op
# Warmup Iteration   5: 20.314 ms/op
Iteration   1: 20.386 ms/op
Iteration   2: 20.825 ms/op
Iteration   3: 24.332 ms/op
Iteration   4: 37.553 ms/op
Iteration   5: 31.947 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  27.009 ±(99.9%) 28.869 ms/op [Average]
  (min, avg, max) = (20.386, 27.009, 37.553), stdev = 7.497
  CI (99.9%): [? 0, 55.878] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 15.63% complete, ETA 21:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 22.889 ms/op
# Warmup Iteration   2: 20.460 ms/op
# Warmup Iteration   3: 20.825 ms/op
# Warmup Iteration   4: 20.321 ms/op
# Warmup Iteration   5: 20.639 ms/op
Iteration   1: 20.843 ms/op
Iteration   2: 21.026 ms/op
Iteration   3: 25.413 ms/op
Iteration   4: 34.357 ms/op
Iteration   5: 36.077 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  27.543 ±(99.9%) 27.976 ms/op [Average]
  (min, avg, max) = (20.843, 27.543, 36.077), stdev = 7.265
  CI (99.9%): [? 0, 55.520] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 15.72% complete, ETA 20:55:54
# Fork: 1 of 1
# Warmup Iteration   1: 3406.169 ms/op
# Warmup Iteration   2: 3338.376 ms/op
# Warmup Iteration   3: 4711.627 ms/op
# Warmup Iteration   4: 5191.253 ms/op
# Warmup Iteration   5: 5278.668 ms/op
Iteration   1: 5213.977 ms/op
Iteration   2: 5100.993 ms/op
Iteration   3: 5263.780 ms/op
Iteration   4: 4888.230 ms/op
Iteration   5: 4926.485 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  5078.693 ±(99.9%) 645.771 ms/op [Average]
  (min, avg, max) = (4888.230, 5078.693, 5263.780), stdev = 167.705
  CI (99.9%): [4432.922, 5724.464] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 15.81% complete, ETA 20:51:14
# Fork: 1 of 1
# Warmup Iteration   1: 3439.142 ms/op
# Warmup Iteration   2: 3186.848 ms/op
# Warmup Iteration   3: 4870.749 ms/op
# Warmup Iteration   4: 5197.044 ms/op
# Warmup Iteration   5: 4832.428 ms/op
Iteration   1: 4989.859 ms/op
Iteration   2: 4933.638 ms/op
Iteration   3: 4764.945 ms/op
Iteration   4: 4983.088 ms/op
Iteration   5: 5037.555 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  4941.817 ±(99.9%) 406.274 ms/op [Average]
  (min, avg, max) = (4764.945, 4941.817, 5037.555), stdev = 105.508
  CI (99.9%): [4535.543, 5348.090] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 15.91% complete, ETA 20:46:31
# Fork: 1 of 1
# Warmup Iteration   1: 1.524 ms/op
# Warmup Iteration   2: 1.408 ms/op
# Warmup Iteration   3: 1.407 ms/op
# Warmup Iteration   4: 1.401 ms/op
# Warmup Iteration   5: 1.395 ms/op
Iteration   1: 1.387 ms/op
Iteration   2: 1.380 ms/op
Iteration   3: 1.630 ms/op
Iteration   4: 2.432 ms/op
Iteration   5: 2.396 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.845 ±(99.9%) 2.038 ms/op [Average]
  (min, avg, max) = (1.380, 1.845, 2.432), stdev = 0.529
  CI (99.9%): [? 0, 3.883] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 16.00% complete, ETA 20:38:40
# Fork: 1 of 1
# Warmup Iteration   1: 1.550 ms/op
# Warmup Iteration   2: 1.396 ms/op
# Warmup Iteration   3: 1.424 ms/op
# Warmup Iteration   4: 1.391 ms/op
# Warmup Iteration   5: 1.424 ms/op
Iteration   1: 1.384 ms/op
Iteration   2: 1.397 ms/op
Iteration   3: 1.723 ms/op
Iteration   4: 2.654 ms/op
Iteration   5: 2.631 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.958 ±(99.9%) 2.463 ms/op [Average]
  (min, avg, max) = (1.384, 1.958, 2.654), stdev = 0.640
  CI (99.9%): [? 0, 4.421] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 16.10% complete, ETA 20:30:54
# Fork: 1 of 1
# Warmup Iteration   1: 44.667 ms/op
# Warmup Iteration   2: 41.364 ms/op
# Warmup Iteration   3: 41.105 ms/op
# Warmup Iteration   4: 40.909 ms/op
# Warmup Iteration   5: 40.281 ms/op
Iteration   1: 40.332 ms/op
Iteration   2: 40.155 ms/op
Iteration   3: 53.408 ms/op
Iteration   4: 69.710 ms/op
Iteration   5: 63.521 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  53.425 ±(99.9%) 51.469 ms/op [Average]
  (min, avg, max) = (40.155, 53.425, 69.710), stdev = 13.366
  CI (99.9%): [1.956, 104.894] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 16.19% complete, ETA 20:23:15
# Fork: 1 of 1
# Warmup Iteration   1: 45.553 ms/op
# Warmup Iteration   2: 41.245 ms/op
# Warmup Iteration   3: 42.078 ms/op
# Warmup Iteration   4: 41.184 ms/op
# Warmup Iteration   5: 41.147 ms/op
Iteration   1: 41.174 ms/op
Iteration   2: 41.073 ms/op
Iteration   3: 53.443 ms/op
Iteration   4: 75.705 ms/op
Iteration   5: 66.762 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  55.631 ±(99.9%) 59.424 ms/op [Average]
  (min, avg, max) = (41.073, 55.631, 75.705), stdev = 15.432
  CI (99.9%): [? 0, 115.055] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 16.29% complete, ETA 20:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 6658.171 ms/op
# Warmup Iteration   2: 9804.046 ms/op
# Warmup Iteration   3: 10589.015 ms/op
# Warmup Iteration   4: 10168.513 ms/op
# Warmup Iteration   5: 10321.167 ms/op
Iteration   1: 10078.613 ms/op
Iteration   2: 9911.297 ms/op
Iteration   3: 10361.702 ms/op
Iteration   4: 10180.672 ms/op
Iteration   5: 10067.415 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  10119.940 ±(99.9%) 638.951 ms/op [Average]
  (min, avg, max) = (9911.297, 10119.940, 10361.702), stdev = 165.934
  CI (99.9%): [9480.989, 10758.891] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 16.38% complete, ETA 20:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 6456.084 ms/op
# Warmup Iteration   2: 9815.301 ms/op
# Warmup Iteration   3: 9760.741 ms/op
# Warmup Iteration   4: 9577.536 ms/op
# Warmup Iteration   5: 9617.318 ms/op
Iteration   1: 9641.716 ms/op
Iteration   2: 9384.901 ms/op
Iteration   3: 9247.634 ms/op
Iteration   4: 9545.573 ms/op
Iteration   5: 9514.815 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  9466.928 ±(99.9%) 589.814 ms/op [Average]
  (min, avg, max) = (9247.634, 9466.928, 9641.716), stdev = 153.173
  CI (99.9%): [8877.114, 10056.741] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 16.48% complete, ETA 20:15:12
# Fork: 1 of 1
# Warmup Iteration   1: 3.051 ms/op
# Warmup Iteration   2: 2.808 ms/op
# Warmup Iteration   3: 2.793 ms/op
# Warmup Iteration   4: 2.772 ms/op
# Warmup Iteration   5: 2.755 ms/op
Iteration   1: 2.784 ms/op
Iteration   2: 2.762 ms/op
Iteration   3: 3.331 ms/op
Iteration   4: 5.210 ms/op
Iteration   5: 4.840 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3.785 ±(99.9%) 4.473 ms/op [Average]
  (min, avg, max) = (2.762, 3.785, 5.210), stdev = 1.162
  CI (99.9%): [? 0, 8.259] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 16.57% complete, ETA 20:07:46
# Fork: 1 of 1
# Warmup Iteration   1: 3.025 ms/op
# Warmup Iteration   2: 2.800 ms/op
# Warmup Iteration   3: 2.761 ms/op
# Warmup Iteration   4: 2.774 ms/op
# Warmup Iteration   5: 2.826 ms/op
Iteration   1: 2.801 ms/op
Iteration   2: 2.796 ms/op
Iteration   3: 3.422 ms/op
Iteration   4: 5.021 ms/op
Iteration   5: 4.828 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3.774 ±(99.9%) 4.170 ms/op [Average]
  (min, avg, max) = (2.796, 3.774, 5.021), stdev = 1.083
  CI (99.9%): [? 0, 7.944] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 16.67% complete, ETA 20:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 89.968 ms/op
# Warmup Iteration   2: 81.695 ms/op
# Warmup Iteration   3: 81.576 ms/op
# Warmup Iteration   4: 80.642 ms/op
# Warmup Iteration   5: 81.483 ms/op
Iteration   1: 81.977 ms/op
Iteration   2: 80.929 ms/op
Iteration   3: 125.133 ms/op
Iteration   4: 132.344 ms/op
Iteration   5: 144.779 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  113.033 ±(99.9%) 114.265 ms/op [Average]
  (min, avg, max) = (80.929, 113.033, 144.779), stdev = 29.674
  CI (99.9%): [? 0, 227.298] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 16.76% complete, ETA 19:53:11
# Fork: 1 of 1
# Warmup Iteration   1: 89.035 ms/op
# Warmup Iteration   2: 80.990 ms/op
# Warmup Iteration   3: 80.868 ms/op
# Warmup Iteration   4: 81.768 ms/op
# Warmup Iteration   5: 81.098 ms/op
Iteration   1: 80.273 ms/op
Iteration   2: 81.139 ms/op
Iteration   3: 113.516 ms/op
Iteration   4: 134.021 ms/op
Iteration   5: 132.423 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  108.274 ±(99.9%) 101.768 ms/op [Average]
  (min, avg, max) = (80.273, 108.274, 134.021), stdev = 26.429
  CI (99.9%): [6.507, 210.042] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 16.86% complete, ETA 19:46:02
# Fork: 1 of 1
# Warmup Iteration   1: 16728.982 ms/op
# Warmup Iteration   2: 20714.548 ms/op
# Warmup Iteration   3: 20946.791 ms/op
# Warmup Iteration   4: 20262.634 ms/op
# Warmup Iteration   5: 20418.844 ms/op
Iteration   1: 20668.180 ms/op
Iteration   2: 20502.840 ms/op
Iteration   3: 20304.781 ms/op
Iteration   4: 20059.842 ms/op
Iteration   5: 20233.239 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  20353.776 ±(99.9%) 912.035 ms/op [Average]
  (min, avg, max) = (20059.842, 20353.776, 20668.180), stdev = 236.853
  CI (99.9%): [19441.741, 21265.811] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 16.95% complete, ETA 19:54:31
# Fork: 1 of 1
# Warmup Iteration   1: 15850.705 ms/op
# Warmup Iteration   2: 19418.176 ms/op
# Warmup Iteration   3: 19918.747 ms/op
# Warmup Iteration   4: 19902.207 ms/op
# Warmup Iteration   5: 19676.011 ms/op
Iteration   1: 20709.549 ms/op
Iteration   2: 19212.478 ms/op
Iteration   3: 20322.834 ms/op
Iteration   4: 20080.828 ms/op
Iteration   5: 19278.404 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  19920.819 ±(99.9%) 2527.793 ms/op [Average]
  (min, avg, max) = (19212.478, 19920.819, 20709.549), stdev = 656.460
  CI (99.9%): [17393.026, 22448.612] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 17.05% complete, ETA 20:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 6.164 ms/op
# Warmup Iteration   2: 5.844 ms/op
# Warmup Iteration   3: 5.578 ms/op
# Warmup Iteration   4: 5.587 ms/op
# Warmup Iteration   5: 5.619 ms/op
Iteration   1: 5.599 ms/op
Iteration   2: 5.617 ms/op
Iteration   3: 6.777 ms/op
Iteration   4: 10.104 ms/op
Iteration   5: 10.235 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  7.666 ±(99.9%) 8.991 ms/op [Average]
  (min, avg, max) = (5.599, 7.666, 10.235), stdev = 2.335
  CI (99.9%): [? 0, 16.657] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 17.14% complete, ETA 19:55:11
# Fork: 1 of 1
# Warmup Iteration   1: 6.119 ms/op
# Warmup Iteration   2: 5.765 ms/op
# Warmup Iteration   3: 5.688 ms/op
# Warmup Iteration   4: 5.614 ms/op
# Warmup Iteration   5: 5.693 ms/op
Iteration   1: 5.573 ms/op
Iteration   2: 5.657 ms/op
Iteration   3: 6.952 ms/op
Iteration   4: 9.714 ms/op
Iteration   5: 10.356 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  7.650 ±(99.9%) 8.686 ms/op [Average]
  (min, avg, max) = (5.573, 7.650, 10.356), stdev = 2.256
  CI (99.9%): [? 0, 16.337] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 17.23% complete, ETA 19:48:06
# Fork: 1 of 1
# Warmup Iteration   1: 177.200 ms/op
# Warmup Iteration   2: 163.532 ms/op
# Warmup Iteration   3: 163.939 ms/op
# Warmup Iteration   4: 162.700 ms/op
# Warmup Iteration   5: 162.792 ms/op
Iteration   1: 164.036 ms/op
Iteration   2: 177.825 ms/op
Iteration   3: 280.146 ms/op
Iteration   4: 290.218 ms/op
Iteration   5: 259.085 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  234.262 ±(99.9%) 227.559 ms/op [Average]
  (min, avg, max) = (164.036, 234.262, 290.218), stdev = 59.096
  CI (99.9%): [6.703, 461.821] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 17.33% complete, ETA 19:41:10
# Fork: 1 of 1
# Warmup Iteration   1: 176.940 ms/op
# Warmup Iteration   2: 165.539 ms/op
# Warmup Iteration   3: 163.668 ms/op
# Warmup Iteration   4: 162.835 ms/op
# Warmup Iteration   5: 163.793 ms/op
Iteration   1: 163.657 ms/op
Iteration   2: 173.532 ms/op
Iteration   3: 294.947 ms/op
Iteration   4: 240.507 ms/op
Iteration   5: 320.247 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  238.578 ±(99.9%) 270.198 ms/op [Average]
  (min, avg, max) = (163.657, 238.578, 320.247), stdev = 70.170
  CI (99.9%): [? 0, 508.776] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 17.42% complete, ETA 19:34:21
# Fork: 1 of 1
# Warmup Iteration   1: 36703.297 ms/op
# Warmup Iteration   2: 40310.643 ms/op
# Warmup Iteration   3: 40789.924 ms/op
# Warmup Iteration   4: 41588.804 ms/op
# Warmup Iteration   5: 39209.262 ms/op
Iteration   1: 39805.753 ms/op
Iteration   2: 38852.772 ms/op
Iteration   3: 40091.002 ms/op
Iteration   4: 39682.483 ms/op
Iteration   5: 38972.925 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  39480.987 ±(99.9%) 2083.419 ms/op [Average]
  (min, avg, max) = (38852.772, 39480.987, 40091.002), stdev = 541.057
  CI (99.9%): [37397.568, 41564.406] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 17.52% complete, ETA 19:57:47
# Fork: 1 of 1
# Warmup Iteration   1: 35999.455 ms/op
# Warmup Iteration   2: 39543.247 ms/op
# Warmup Iteration   3: 39093.205 ms/op
# Warmup Iteration   4: 39120.778 ms/op
# Warmup Iteration   5: 38912.412 ms/op
Iteration   1: 38502.297 ms/op
Iteration   2: 39130.249 ms/op
Iteration   3: 38902.637 ms/op
Iteration   4: 38045.032 ms/op
Iteration   5: 38482.639 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  38612.571 ±(99.9%) 1614.601 ms/op [Average]
  (min, avg, max) = (38045.032, 38612.571, 39130.249), stdev = 419.307
  CI (99.9%): [36997.970, 40227.171] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 17.61% complete, ETA 20:20:06
# Fork: 1 of 1
# Warmup Iteration   1: 11.745 ms/op
# Warmup Iteration   2: 11.061 ms/op
# Warmup Iteration   3: 11.063 ms/op
# Warmup Iteration   4: 11.111 ms/op
# Warmup Iteration   5: 11.112 ms/op
Iteration   1: 11.109 ms/op
Iteration   2: 11.187 ms/op
Iteration   3: 13.771 ms/op
Iteration   4: 17.991 ms/op
Iteration   5: 16.890 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  14.190 ±(99.9%) 12.241 ms/op [Average]
  (min, avg, max) = (11.109, 14.190, 17.991), stdev = 3.179
  CI (99.9%): [1.949, 26.430] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 17.71% complete, ETA 20:13:00
# Fork: 1 of 1
# Warmup Iteration   1: 12.534 ms/op
# Warmup Iteration   2: 11.385 ms/op
# Warmup Iteration   3: 11.311 ms/op
# Warmup Iteration   4: 11.326 ms/op
# Warmup Iteration   5: 11.503 ms/op
Iteration   1: 11.268 ms/op
Iteration   2: 11.002 ms/op
Iteration   3: 14.464 ms/op
Iteration   4: 20.453 ms/op
Iteration   5: 19.048 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  15.247 ±(99.9%) 16.785 ms/op [Average]
  (min, avg, max) = (11.002, 15.247, 20.453), stdev = 4.359
  CI (99.9%): [? 0, 32.032] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 17.80% complete, ETA 20:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 357.481 ms/op
# Warmup Iteration   2: 331.801 ms/op
# Warmup Iteration   3: 326.585 ms/op
# Warmup Iteration   4: 324.031 ms/op
# Warmup Iteration   5: 329.352 ms/op
Iteration   1: 327.481 ms/op
Iteration   2: 558.332 ms/op
Iteration   3: 578.173 ms/op
Iteration   4: 523.940 ms/op
Iteration   5: 475.049 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  492.595 ±(99.9%) 386.015 ms/op [Average]
  (min, avg, max) = (327.481, 492.595, 578.173), stdev = 100.247
  CI (99.9%): [106.580, 878.611] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 17.90% complete, ETA 19:59:11
# Fork: 1 of 1
# Warmup Iteration   1: 361.491 ms/op
# Warmup Iteration   2: 328.110 ms/op
# Warmup Iteration   3: 326.705 ms/op
# Warmup Iteration   4: 329.005 ms/op
# Warmup Iteration   5: 327.897 ms/op
Iteration   1: 326.409 ms/op
Iteration   2: 582.840 ms/op
Iteration   3: 618.080 ms/op
Iteration   4: 559.425 ms/op
Iteration   5: 574.117 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  532.174 ±(99.9%) 450.656 ms/op [Average]
  (min, avg, max) = (326.409, 532.174, 618.080), stdev = 117.034
  CI (99.9%): [81.518, 982.830] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 17.99% complete, ETA 19:52:27
# Fork: 1 of 1
# Warmup Iteration   1: 77339.978 ms/op
# Warmup Iteration   2: 80739.043 ms/op
# Warmup Iteration   3: 81127.215 ms/op
# Warmup Iteration   4: 81763.844 ms/op
# Warmup Iteration   5: 80184.096 ms/op
Iteration   1: 81092.042 ms/op
Iteration   2: 80588.373 ms/op
Iteration   3: 79426.409 ms/op
Iteration   4: 80380.073 ms/op
Iteration   5: 81019.410 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  80501.261 ±(99.9%) 2579.560 ms/op [Average]
  (min, avg, max) = (79426.409, 80501.261, 81092.042), stdev = 669.904
  CI (99.9%): [77921.701, 83080.821] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 18.09% complete, ETA 20:45:33
# Fork: 1 of 1
# Warmup Iteration   1: 72144.148 ms/op
# Warmup Iteration   2: 75974.192 ms/op
# Warmup Iteration   3: 76336.505 ms/op
# Warmup Iteration   4: 74605.289 ms/op
# Warmup Iteration   5: 77386.913 ms/op
Iteration   1: 75408.054 ms/op
Iteration   2: 74202.938 ms/op
Iteration   3: 76838.549 ms/op
Iteration   4: 75643.474 ms/op
Iteration   5: 74664.699 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  75351.543 ±(99.9%) 3894.032 ms/op [Average]
  (min, avg, max) = (74202.938, 75351.543, 76838.549), stdev = 1011.268
  CI (99.9%): [71457.511, 79245.575] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 18.18% complete, ETA 21:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 24.236 ms/op
# Warmup Iteration   2: 22.908 ms/op
# Warmup Iteration   3: 22.284 ms/op
# Warmup Iteration   4: 22.464 ms/op
# Warmup Iteration   5: 22.159 ms/op
Iteration   1: 22.433 ms/op
Iteration   2: 22.614 ms/op
Iteration   3: 29.004 ms/op
Iteration   4: 38.415 ms/op
Iteration   5: 36.098 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  29.713 ±(99.9%) 28.583 ms/op [Average]
  (min, avg, max) = (22.433, 29.713, 38.415), stdev = 7.423
  CI (99.9%): [1.130, 58.296] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 18.28% complete, ETA 21:26:46
# Fork: 1 of 1
# Warmup Iteration   1: 24.604 ms/op
# Warmup Iteration   2: 22.515 ms/op
# Warmup Iteration   3: 22.326 ms/op
# Warmup Iteration   4: 22.658 ms/op
# Warmup Iteration   5: 22.691 ms/op
Iteration   1: 22.373 ms/op
Iteration   2: 22.521 ms/op
Iteration   3: 28.420 ms/op
Iteration   4: 43.953 ms/op
Iteration   5: 41.206 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  31.694 ±(99.9%) 39.574 ms/op [Average]
  (min, avg, max) = (22.373, 31.694, 43.953), stdev = 10.277
  CI (99.9%): [? 0, 71.269] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 18.37% complete, ETA 21:19:26
# Fork: 1 of 1
# Warmup Iteration   1: 698.767 ms/op
# Warmup Iteration   2: 655.531 ms/op
# Warmup Iteration   3: 653.844 ms/op
# Warmup Iteration   4: 653.971 ms/op
# Warmup Iteration   5: 647.856 ms/op
Iteration   1: 766.766 ms/op
Iteration   2: 1153.357 ms/op
Iteration   3: 1268.168 ms/op
Iteration   4: 1053.851 ms/op
Iteration   5: 1062.266 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1060.882 ±(99.9%) 715.419 ms/op [Average]
  (min, avg, max) = (766.766, 1060.882, 1268.168), stdev = 185.792
  CI (99.9%): [345.463, 1776.300] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 18.47% complete, ETA 21:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 717.963 ms/op
# Warmup Iteration   2: 668.373 ms/op
# Warmup Iteration   3: 658.914 ms/op
# Warmup Iteration   4: 646.450 ms/op
# Warmup Iteration   5: 659.582 ms/op
Iteration   1: 793.705 ms/op
Iteration   2: 1163.722 ms/op
Iteration   3: 1141.547 ms/op
Iteration   4: 1089.432 ms/op
Iteration   5: 1101.555 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1057.992 ±(99.9%) 580.458 ms/op [Average]
  (min, avg, max) = (793.705, 1057.992, 1163.722), stdev = 150.743
  CI (99.9%): [477.534, 1638.450] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 18.56% complete, ETA 21:05:26
# Fork: 1 of 1
# Warmup Iteration   1: 157220.390 ms/op
# Warmup Iteration   2: 158856.759 ms/op
# Warmup Iteration   3: 157045.055 ms/op
# Warmup Iteration   4: 159229.479 ms/op
# Warmup Iteration   5: 159869.666 ms/op
Iteration   1: 161901.638 ms/op
Iteration   2: 160525.850 ms/op
Iteration   3: 159738.030 ms/op
Iteration   4: 161988.958 ms/op
Iteration   5: 161452.673 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  161121.430 ±(99.9%) 3723.177 ms/op [Average]
  (min, avg, max) = (159738.030, 161121.430, 161988.958), stdev = 966.897
  CI (99.9%): [157398.253, 164844.606] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 18.66% complete, ETA 22:53:43
# Fork: 1 of 1
# Warmup Iteration   1: 165844.213 ms/op
# Warmup Iteration   2: 168250.738 ms/op
# Warmup Iteration   3: 182581.378 ms/op
# Warmup Iteration   4: 177274.776 ms/op
# Warmup Iteration   5: 180033.690 ms/op
Iteration   1: 176114.503 ms/op
Iteration   2: 178804.501 ms/op
Iteration   3: 165133.390 ms/op
Iteration   4: 156135.246 ms/op
Iteration   5: 155526.265 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  166342.781 ±(99.9%) 41892.211 ms/op [Average]
  (min, avg, max) = (155526.265, 166342.781, 178804.501), stdev = 10879.274
  CI (99.9%): [124450.570, 208234.992] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 18.75% complete, ETA 1 days, 00:48:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.040 ms/op
Iteration   5: 0.038 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.028 ±(99.9%) 0.037 ms/op [Average]
  (min, avg, max) = (0.020, 0.028, 0.040), stdev = 0.010
  CI (99.9%): [? 0, 0.065] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 18.84% complete, ETA 1 days, 00:39:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.035 ms/op
Iteration   5: 0.037 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.027 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (0.020, 0.027, 0.037), stdev = 0.008
  CI (99.9%): [? 0, 0.059] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 18.94% complete, ETA 1 days, 00:31:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.700 ms/op
# Warmup Iteration   2: 0.641 ms/op
# Warmup Iteration   3: 0.641 ms/op
# Warmup Iteration   4: 0.640 ms/op
# Warmup Iteration   5: 0.644 ms/op
Iteration   1: 0.641 ms/op
Iteration   2: 0.640 ms/op
Iteration   3: 0.778 ms/op
Iteration   4: 1.160 ms/op
Iteration   5: 1.206 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.885 ±(99.9%) 1.070 ms/op [Average]
  (min, avg, max) = (0.640, 0.885, 1.206), stdev = 0.278
  CI (99.9%): [? 0, 1.955] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 19.03% complete, ETA 1 days, 00:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.708 ms/op
# Warmup Iteration   2: 0.636 ms/op
# Warmup Iteration   3: 0.646 ms/op
# Warmup Iteration   4: 0.683 ms/op
# Warmup Iteration   5: 0.652 ms/op
Iteration   1: 0.639 ms/op
Iteration   2: 0.642 ms/op
Iteration   3: 0.765 ms/op
Iteration   4: 1.089 ms/op
Iteration   5: 1.062 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.839 ±(99.9%) 0.853 ms/op [Average]
  (min, avg, max) = (0.639, 0.839, 1.089), stdev = 0.222
  CI (99.9%): [? 0, 1.693] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 19.13% complete, ETA 1 days, 00:15:06
# Fork: 1 of 1
# Warmup Iteration   1: 115.633 ms/op
# Warmup Iteration   2: 110.335 ms/op
# Warmup Iteration   3: 107.004 ms/op
# Warmup Iteration   4: 104.571 ms/op
# Warmup Iteration   5: 103.357 ms/op
Iteration   1: 105.702 ms/op
Iteration   2: 115.973 ms/op
Iteration   3: 170.189 ms/op
Iteration   4: 180.474 ms/op
Iteration   5: 145.652 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  143.598 ±(99.9%) 125.816 ms/op [Average]
  (min, avg, max) = (105.702, 143.598, 180.474), stdev = 32.674
  CI (99.9%): [17.782, 269.414] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 19.22% complete, ETA 1 days, 00:07:04
# Fork: 1 of 1
# Warmup Iteration   1: 116.421 ms/op
# Warmup Iteration   2: 103.499 ms/op
# Warmup Iteration   3: 108.521 ms/op
# Warmup Iteration   4: 97.367 ms/op
# Warmup Iteration   5: 100.080 ms/op
Iteration   1: 98.650 ms/op
Iteration   2: 133.254 ms/op
Iteration   3: 147.492 ms/op
Iteration   4: 149.865 ms/op
Iteration   5: 175.472 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  140.947 ±(99.9%) 108.273 ms/op [Average]
  (min, avg, max) = (98.650, 140.947, 175.472), stdev = 28.118
  CI (99.9%): [32.673, 249.220] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 19.32% complete, ETA 23:59:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.044 ms/op
# Warmup Iteration   5: 0.045 ms/op
Iteration   1: 0.044 ms/op
Iteration   2: 0.043 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.069 ms/op
Iteration   5: 0.073 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.056 ±(99.9%) 0.054 ms/op [Average]
  (min, avg, max) = (0.043, 0.056, 0.073), stdev = 0.014
  CI (99.9%): [0.002, 0.110] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 19.41% complete, ETA 23:51:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.047 ms/op
# Warmup Iteration   2: 0.044 ms/op
# Warmup Iteration   3: 0.044 ms/op
# Warmup Iteration   4: 0.043 ms/op
# Warmup Iteration   5: 0.043 ms/op
Iteration   1: 0.043 ms/op
Iteration   2: 0.043 ms/op
Iteration   3: 0.052 ms/op
Iteration   4: 0.075 ms/op
Iteration   5: 0.083 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.059 ±(99.9%) 0.073 ms/op [Average]
  (min, avg, max) = (0.043, 0.059, 0.083), stdev = 0.019
  CI (99.9%): [? 0, 0.132] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 19.51% complete, ETA 23:43:15
# Fork: 1 of 1
# Warmup Iteration   1: 1.399 ms/op
# Warmup Iteration   2: 1.272 ms/op
# Warmup Iteration   3: 1.280 ms/op
# Warmup Iteration   4: 1.253 ms/op
# Warmup Iteration   5: 1.263 ms/op
Iteration   1: 1.272 ms/op
Iteration   2: 1.265 ms/op
Iteration   3: 1.558 ms/op
Iteration   4: 2.418 ms/op
Iteration   5: 2.130 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.729 ±(99.9%) 2.010 ms/op [Average]
  (min, avg, max) = (1.265, 1.729, 2.418), stdev = 0.522
  CI (99.9%): [? 0, 3.738] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 19.60% complete, ETA 23:35:25
# Fork: 1 of 1
# Warmup Iteration   1: 1.406 ms/op
# Warmup Iteration   2: 1.264 ms/op
# Warmup Iteration   3: 1.278 ms/op
# Warmup Iteration   4: 1.255 ms/op
# Warmup Iteration   5: 1.260 ms/op
Iteration   1: 1.269 ms/op
Iteration   2: 1.288 ms/op
Iteration   3: 1.491 ms/op
Iteration   4: 2.094 ms/op
Iteration   5: 2.123 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.653 ±(99.9%) 1.637 ms/op [Average]
  (min, avg, max) = (1.269, 1.653, 2.123), stdev = 0.425
  CI (99.9%): [0.016, 3.289] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 19.70% complete, ETA 23:27:40
# Fork: 1 of 1
# Warmup Iteration   1: 227.422 ms/op
# Warmup Iteration   2: 228.470 ms/op
# Warmup Iteration   3: 202.877 ms/op
# Warmup Iteration   4: 202.031 ms/op
# Warmup Iteration   5: 197.036 ms/op
Iteration   1: 205.565 ms/op
Iteration   2: 304.414 ms/op
Iteration   3: 350.261 ms/op
Iteration   4: 315.052 ms/op
Iteration   5: 346.392 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  304.337 ±(99.9%) 225.751 ms/op [Average]
  (min, avg, max) = (205.565, 304.337, 350.261), stdev = 58.627
  CI (99.9%): [78.586, 530.087] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 19.79% complete, ETA 23:20:09
# Fork: 1 of 1
# Warmup Iteration   1: 234.433 ms/op
# Warmup Iteration   2: 218.177 ms/op
# Warmup Iteration   3: 212.207 ms/op
# Warmup Iteration   4: 198.161 ms/op
# Warmup Iteration   5: 190.722 ms/op
Iteration   1: 192.149 ms/op
Iteration   2: 276.795 ms/op
Iteration   3: 293.485 ms/op
Iteration   4: 305.637 ms/op
Iteration   5: 363.806 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  286.374 ±(99.9%) 238.828 ms/op [Average]
  (min, avg, max) = (192.149, 286.374, 363.806), stdev = 62.023
  CI (99.9%): [47.546, 525.203] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 19.89% complete, ETA 23:12:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.093 ms/op
# Warmup Iteration   2: 0.087 ms/op
# Warmup Iteration   3: 0.088 ms/op
# Warmup Iteration   4: 0.086 ms/op
# Warmup Iteration   5: 0.087 ms/op
Iteration   1: 0.086 ms/op
Iteration   2: 0.086 ms/op
Iteration   3: 0.100 ms/op
Iteration   4: 0.158 ms/op
Iteration   5: 0.152 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.116 ±(99.9%) 0.137 ms/op [Average]
  (min, avg, max) = (0.086, 0.116, 0.158), stdev = 0.036
  CI (99.9%): [? 0, 0.254] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 19.98% complete, ETA 23:05:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.094 ms/op
# Warmup Iteration   2: 0.088 ms/op
# Warmup Iteration   3: 0.086 ms/op
# Warmup Iteration   4: 0.087 ms/op
# Warmup Iteration   5: 0.086 ms/op
Iteration   1: 0.087 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.104 ms/op
Iteration   4: 0.153 ms/op
Iteration   5: 0.145 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.115 ±(99.9%) 0.122 ms/op [Average]
  (min, avg, max) = (0.087, 0.115, 0.153), stdev = 0.032
  CI (99.9%): [? 0, 0.237] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 20.08% complete, ETA 22:57:40
# Fork: 1 of 1
# Warmup Iteration   1: 2.877 ms/op
# Warmup Iteration   2: 2.607 ms/op
# Warmup Iteration   3: 2.558 ms/op
# Warmup Iteration   4: 2.734 ms/op
# Warmup Iteration   5: 2.790 ms/op
Iteration   1: 2.882 ms/op
Iteration   2: 3.254 ms/op
Iteration   3: 4.038 ms/op
Iteration   4: 4.818 ms/op
Iteration   5: 5.039 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  4.006 ±(99.9%) 3.631 ms/op [Average]
  (min, avg, max) = (2.882, 4.006, 5.039), stdev = 0.943
  CI (99.9%): [0.375, 7.637] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 20.17% complete, ETA 22:50:17
# Fork: 1 of 1
# Warmup Iteration   1: 3.536 ms/op
# Warmup Iteration   2: 3.416 ms/op
# Warmup Iteration   3: 3.716 ms/op
# Warmup Iteration   4: 3.600 ms/op
# Warmup Iteration   5: 3.250 ms/op
Iteration   1: 4.309 ms/op
Iteration   2: 3.487 ms/op
Iteration   3: 3.762 ms/op
Iteration   4: 4.831 ms/op
Iteration   5: 5.851 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  4.448 ±(99.9%) 3.616 ms/op [Average]
  (min, avg, max) = (3.487, 4.448, 5.851), stdev = 0.939
  CI (99.9%): [0.832, 8.064] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 20.27% complete, ETA 22:42:57
# Fork: 1 of 1
# Warmup Iteration   1: 570.611 ms/op
# Warmup Iteration   2: 516.021 ms/op
# Warmup Iteration   3: 627.821 ms/op
# Warmup Iteration   4: 549.690 ms/op
# Warmup Iteration   5: 563.682 ms/op
Iteration   1: 549.168 ms/op
Iteration   2: 746.453 ms/op
Iteration   3: 855.825 ms/op
Iteration   4: 822.825 ms/op
Iteration   5: 751.648 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  745.184 ±(99.9%) 458.596 ms/op [Average]
  (min, avg, max) = (549.168, 745.184, 855.825), stdev = 119.096
  CI (99.9%): [286.588, 1203.780] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 20.36% complete, ETA 22:36:00
# Fork: 1 of 1
# Warmup Iteration   1: 608.495 ms/op
# Warmup Iteration   2: 555.553 ms/op
# Warmup Iteration   3: 580.972 ms/op
# Warmup Iteration   4: 538.437 ms/op
# Warmup Iteration   5: 553.318 ms/op
Iteration   1: 509.225 ms/op
Iteration   2: 745.244 ms/op
Iteration   3: 854.384 ms/op
Iteration   4: 865.495 ms/op
Iteration   5: 697.953 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  734.460 ±(99.9%) 557.120 ms/op [Average]
  (min, avg, max) = (509.225, 734.460, 865.495), stdev = 144.682
  CI (99.9%): [177.340, 1291.581] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 20.45% complete, ETA 22:29:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.212 ms/op
# Warmup Iteration   2: 0.190 ms/op
# Warmup Iteration   3: 0.193 ms/op
# Warmup Iteration   4: 0.193 ms/op
# Warmup Iteration   5: 0.193 ms/op
Iteration   1: 0.192 ms/op
Iteration   2: 0.191 ms/op
Iteration   3: 0.238 ms/op
Iteration   4: 0.369 ms/op
Iteration   5: 0.370 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.272 ±(99.9%) 0.350 ms/op [Average]
  (min, avg, max) = (0.191, 0.272, 0.370), stdev = 0.091
  CI (99.9%): [? 0, 0.622] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 20.55% complete, ETA 22:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.237 ms/op
# Warmup Iteration   2: 0.207 ms/op
# Warmup Iteration   3: 0.207 ms/op
# Warmup Iteration   4: 0.213 ms/op
# Warmup Iteration   5: 0.231 ms/op
Iteration   1: 0.206 ms/op
Iteration   2: 0.208 ms/op
Iteration   3: 0.289 ms/op
Iteration   4: 0.349 ms/op
Iteration   5: 0.413 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.293 ±(99.9%) 0.347 ms/op [Average]
  (min, avg, max) = (0.206, 0.293, 0.413), stdev = 0.090
  CI (99.9%): [? 0, 0.640] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 20.64% complete, ETA 22:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 7.630 ms/op
# Warmup Iteration   2: 7.055 ms/op
# Warmup Iteration   3: 6.785 ms/op
# Warmup Iteration   4: 6.545 ms/op
# Warmup Iteration   5: 6.218 ms/op
Iteration   1: 5.983 ms/op
Iteration   2: 6.162 ms/op
Iteration   3: 8.082 ms/op
Iteration   4: 11.617 ms/op
Iteration   5: 9.942 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  8.357 ±(99.9%) 9.366 ms/op [Average]
  (min, avg, max) = (5.983, 8.357, 11.617), stdev = 2.432
  CI (99.9%): [? 0, 17.723] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 20.74% complete, ETA 22:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 6.566 ms/op
# Warmup Iteration   2: 5.921 ms/op
# Warmup Iteration   3: 5.939 ms/op
# Warmup Iteration   4: 6.025 ms/op
# Warmup Iteration   5: 5.977 ms/op
Iteration   1: 5.966 ms/op
Iteration   2: 5.960 ms/op
Iteration   3: 7.149 ms/op
Iteration   4: 9.886 ms/op
Iteration   5: 9.764 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  7.745 ±(99.9%) 7.546 ms/op [Average]
  (min, avg, max) = (5.960, 7.745, 9.886), stdev = 1.960
  CI (99.9%): [0.199, 15.291] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 20.83% complete, ETA 22:00:53
# Fork: 1 of 1
# Warmup Iteration   1: 1050.045 ms/op
# Warmup Iteration   2: 979.002 ms/op
# Warmup Iteration   3: 882.337 ms/op
# Warmup Iteration   4: 873.592 ms/op
# Warmup Iteration   5: 1626.956 ms/op
Iteration   1: 1721.245 ms/op
Iteration   2: 1608.642 ms/op
Iteration   3: 1505.161 ms/op
Iteration   4: 1617.461 ms/op
Iteration   5: 1818.807 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1654.263 ±(99.9%) 460.584 ms/op [Average]
  (min, avg, max) = (1505.161, 1654.263, 1818.807), stdev = 119.612
  CI (99.9%): [1193.679, 2114.847] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 20.93% complete, ETA 21:54:27
# Fork: 1 of 1
# Warmup Iteration   1: 1088.758 ms/op
# Warmup Iteration   2: 1084.441 ms/op
# Warmup Iteration   3: 1265.285 ms/op
# Warmup Iteration   4: 996.689 ms/op
# Warmup Iteration   5: 1736.052 ms/op
Iteration   1: 1314.485 ms/op
Iteration   2: 1364.699 ms/op
Iteration   3: 1480.712 ms/op
Iteration   4: 1498.564 ms/op
Iteration   5: 1368.501 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1405.392 ±(99.9%) 308.263 ms/op [Average]
  (min, avg, max) = (1314.485, 1405.392, 1498.564), stdev = 80.055
  CI (99.9%): [1097.130, 1713.655] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 21.02% complete, ETA 21:48:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.418 ms/op
# Warmup Iteration   2: 0.392 ms/op
# Warmup Iteration   3: 0.407 ms/op
# Warmup Iteration   4: 0.403 ms/op
# Warmup Iteration   5: 0.414 ms/op
Iteration   1: 0.461 ms/op
Iteration   2: 0.461 ms/op
Iteration   3: 0.563 ms/op
Iteration   4: 0.838 ms/op
Iteration   5: 0.767 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.618 ±(99.9%) 0.675 ms/op [Average]
  (min, avg, max) = (0.461, 0.618, 0.838), stdev = 0.175
  CI (99.9%): [? 0, 1.293] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 21.12% complete, ETA 21:41:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.441 ms/op
# Warmup Iteration   2: 0.431 ms/op
# Warmup Iteration   3: 0.447 ms/op
# Warmup Iteration   4: 0.441 ms/op
# Warmup Iteration   5: 0.474 ms/op
Iteration   1: 0.477 ms/op
Iteration   2: 0.548 ms/op
Iteration   3: 0.663 ms/op
Iteration   4: 0.857 ms/op
Iteration   5: 0.781 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.665 ±(99.9%) 0.607 ms/op [Average]
  (min, avg, max) = (0.477, 0.665, 0.857), stdev = 0.158
  CI (99.9%): [0.059, 1.272] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 21.21% complete, ETA 21:34:30
# Fork: 1 of 1
# Warmup Iteration   1: 13.483 ms/op
# Warmup Iteration   2: 13.803 ms/op
# Warmup Iteration   3: 13.678 ms/op
# Warmup Iteration   4: 13.737 ms/op
# Warmup Iteration   5: 14.545 ms/op
Iteration   1: 12.573 ms/op
Iteration   2: 13.621 ms/op
Iteration   3: 18.060 ms/op
Iteration   4: 25.643 ms/op
Iteration   5: 26.574 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  19.294 ±(99.9%) 25.264 ms/op [Average]
  (min, avg, max) = (12.573, 19.294, 26.574), stdev = 6.561
  CI (99.9%): [? 0, 44.559] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 21.31% complete, ETA 21:27:51
# Fork: 1 of 1
# Warmup Iteration   1: 13.649 ms/op
# Warmup Iteration   2: 13.937 ms/op
# Warmup Iteration   3: 12.831 ms/op
# Warmup Iteration   4: 12.208 ms/op
# Warmup Iteration   5: 12.089 ms/op
Iteration   1: 11.954 ms/op
Iteration   2: 12.456 ms/op
Iteration   3: 15.206 ms/op
Iteration   4: 20.151 ms/op
Iteration   5: 20.951 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  16.144 ±(99.9%) 16.247 ms/op [Average]
  (min, avg, max) = (11.954, 16.144, 20.951), stdev = 4.219
  CI (99.9%): [? 0, 32.390] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 21.40% complete, ETA 21:21:15
# Fork: 1 of 1
# Warmup Iteration   1: 1911.870 ms/op
# Warmup Iteration   2: 2106.680 ms/op
# Warmup Iteration   3: 2045.917 ms/op
# Warmup Iteration   4: 2816.290 ms/op
# Warmup Iteration   5: 3103.712 ms/op
Iteration   1: 3176.773 ms/op
Iteration   2: 3128.043 ms/op
Iteration   3: 2915.941 ms/op
Iteration   4: 3242.928 ms/op
Iteration   5: 3703.553 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3233.448 ±(99.9%) 1116.391 ms/op [Average]
  (min, avg, max) = (2915.941, 3233.448, 3703.553), stdev = 289.923
  CI (99.9%): [2117.057, 4349.838] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 21.50% complete, ETA 21:15:52
# Fork: 1 of 1
# Warmup Iteration   1: 2085.136 ms/op
# Warmup Iteration   2: 2035.323 ms/op
# Warmup Iteration   3: 1795.793 ms/op
# Warmup Iteration   4: 2646.974 ms/op
# Warmup Iteration   5: 3260.923 ms/op
Iteration   1: 3131.522 ms/op
Iteration   2: 3332.630 ms/op
Iteration   3: 3039.127 ms/op
Iteration   4: 3111.674 ms/op
Iteration   5: 3121.426 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3147.276 ±(99.9%) 422.853 ms/op [Average]
  (min, avg, max) = (3039.127, 3147.276, 3332.630), stdev = 109.814
  CI (99.9%): [2724.422, 3570.129] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 21.59% complete, ETA 21:10:29
# Fork: 1 of 1
# Warmup Iteration   1: 1.007 ms/op
# Warmup Iteration   2: 0.884 ms/op
# Warmup Iteration   3: 0.897 ms/op
# Warmup Iteration   4: 0.886 ms/op
# Warmup Iteration   5: 0.949 ms/op
Iteration   1: 0.847 ms/op
Iteration   2: 0.828 ms/op
Iteration   3: 0.970 ms/op
Iteration   4: 1.219 ms/op
Iteration   5: 1.298 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.033 ±(99.9%) 0.829 ms/op [Average]
  (min, avg, max) = (0.828, 1.033, 1.298), stdev = 0.215
  CI (99.9%): [0.204, 1.861] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 21.69% complete, ETA 21:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.822 ms/op
# Warmup Iteration   2: 0.752 ms/op
# Warmup Iteration   3: 0.775 ms/op
# Warmup Iteration   4: 0.747 ms/op
# Warmup Iteration   5: 0.731 ms/op
Iteration   1: 0.751 ms/op
Iteration   2: 0.742 ms/op
Iteration   3: 0.874 ms/op
Iteration   4: 1.262 ms/op
Iteration   5: 1.332 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  0.992 ±(99.9%) 1.095 ms/op [Average]
  (min, avg, max) = (0.742, 0.992, 1.332), stdev = 0.284
  CI (99.9%): [? 0, 2.087] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 21.78% complete, ETA 20:57:39
# Fork: 1 of 1
# Warmup Iteration   1: 25.788 ms/op
# Warmup Iteration   2: 23.877 ms/op
# Warmup Iteration   3: 22.659 ms/op
# Warmup Iteration   4: 22.332 ms/op
# Warmup Iteration   5: 22.549 ms/op
Iteration   1: 23.586 ms/op
Iteration   2: 24.754 ms/op
Iteration   3: 32.230 ms/op
Iteration   4: 46.488 ms/op
Iteration   5: 41.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  33.612 ±(99.9%) 38.572 ms/op [Average]
  (min, avg, max) = (23.586, 33.612, 46.488), stdev = 10.017
  CI (99.9%): [? 0, 72.184] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 21.88% complete, ETA 20:51:19
# Fork: 1 of 1
# Warmup Iteration   1: 28.525 ms/op
# Warmup Iteration   2: 26.313 ms/op
# Warmup Iteration   3: 25.257 ms/op
# Warmup Iteration   4: 25.180 ms/op
# Warmup Iteration   5: 24.125 ms/op
Iteration   1: 27.259 ms/op
Iteration   2: 25.287 ms/op
Iteration   3: 36.642 ms/op
Iteration   4: 42.755 ms/op
Iteration   5: 42.942 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  34.977 ±(99.9%) 32.227 ms/op [Average]
  (min, avg, max) = (25.287, 34.977, 42.942), stdev = 8.369
  CI (99.9%): [2.750, 67.203] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 21.97% complete, ETA 20:45:03
# Fork: 1 of 1
# Warmup Iteration   1: 4020.851 ms/op
# Warmup Iteration   2: 4860.979 ms/op
# Warmup Iteration   3: 6587.299 ms/op
# Warmup Iteration   4: 6522.442 ms/op
# Warmup Iteration   5: 7113.324 ms/op
Iteration   1: 7834.309 ms/op
Iteration   2: 7572.089 ms/op
Iteration   3: 8407.724 ms/op
Iteration   4: 9176.896 ms/op
Iteration   5: 9586.704 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  8515.544 ±(99.9%) 3307.176 ms/op [Average]
  (min, avg, max) = (7572.089, 8515.544, 9586.704), stdev = 858.863
  CI (99.9%): [5208.368, 11822.721] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 22.06% complete, ETA 20:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 6007.245 ms/op
# Warmup Iteration   2: 8747.034 ms/op
# Warmup Iteration   3: 6483.967 ms/op
# Warmup Iteration   4: 6661.825 ms/op
# Warmup Iteration   5: 5918.947 ms/op
Iteration   1: 7875.865 ms/op
Iteration   2: 9119.676 ms/op
Iteration   3: 8611.846 ms/op
Iteration   4: 7905.700 ms/op
Iteration   5: 6316.067 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  7965.831 ±(99.9%) 4076.105 ms/op [Average]
  (min, avg, max) = (6316.067, 7965.831, 9119.676), stdev = 1058.551
  CI (99.9%): [3889.726, 12041.936] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 22.16% complete, ETA 20:40:09
# Fork: 1 of 1
# Warmup Iteration   1: 1.641 ms/op
# Warmup Iteration   2: 1.487 ms/op
# Warmup Iteration   3: 1.432 ms/op
# Warmup Iteration   4: 1.453 ms/op
# Warmup Iteration   5: 1.452 ms/op
Iteration   1: 1.461 ms/op
Iteration   2: 1.448 ms/op
Iteration   3: 1.779 ms/op
Iteration   4: 2.822 ms/op
Iteration   5: 2.336 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.969 ±(99.9%) 2.301 ms/op [Average]
  (min, avg, max) = (1.448, 1.969, 2.822), stdev = 0.597
  CI (99.9%): [? 0, 4.270] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 22.25% complete, ETA 20:33:59
# Fork: 1 of 1
# Warmup Iteration   1: 1.545 ms/op
# Warmup Iteration   2: 1.429 ms/op
# Warmup Iteration   3: 1.408 ms/op
# Warmup Iteration   4: 1.395 ms/op
# Warmup Iteration   5: 1.410 ms/op
Iteration   1: 1.399 ms/op
Iteration   2: 1.409 ms/op
Iteration   3: 1.630 ms/op
Iteration   4: 2.617 ms/op
Iteration   5: 2.577 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1.926 ±(99.9%) 2.384 ms/op [Average]
  (min, avg, max) = (1.399, 1.926, 2.617), stdev = 0.619
  CI (99.9%): [? 0, 4.310] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 22.35% complete, ETA 20:27:52
# Fork: 1 of 1
# Warmup Iteration   1: 46.226 ms/op
# Warmup Iteration   2: 41.877 ms/op
# Warmup Iteration   3: 42.137 ms/op
# Warmup Iteration   4: 41.960 ms/op
# Warmup Iteration   5: 42.249 ms/op
Iteration   1: 42.239 ms/op
Iteration   2: 41.810 ms/op
Iteration   3: 55.670 ms/op
Iteration   4: 71.296 ms/op
Iteration   5: 73.272 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  56.857 ±(99.9%) 58.381 ms/op [Average]
  (min, avg, max) = (41.810, 56.857, 73.272), stdev = 15.161
  CI (99.9%): [? 0, 115.238] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 22.44% complete, ETA 20:21:49
# Fork: 1 of 1
# Warmup Iteration   1: 47.333 ms/op
# Warmup Iteration   2: 43.191 ms/op
# Warmup Iteration   3: 42.758 ms/op
# Warmup Iteration   4: 42.365 ms/op
# Warmup Iteration   5: 42.639 ms/op
Iteration   1: 42.887 ms/op
Iteration   2: 43.644 ms/op
Iteration   3: 54.058 ms/op
Iteration   4: 81.224 ms/op
Iteration   5: 78.804 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  60.123 ±(99.9%) 72.030 ms/op [Average]
  (min, avg, max) = (42.887, 60.123, 81.224), stdev = 18.706
  CI (99.9%): [? 0, 132.153] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 22.54% complete, ETA 20:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 6925.092 ms/op
# Warmup Iteration   2: 9852.092 ms/op
# Warmup Iteration   3: 10671.298 ms/op
# Warmup Iteration   4: 13164.918 ms/op
# Warmup Iteration   5: 13432.192 ms/op
Iteration   1: 12087.631 ms/op
Iteration   2: 12296.656 ms/op
Iteration   3: 11901.079 ms/op
Iteration   4: 11870.692 ms/op
Iteration   5: 12606.321 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  12152.476 ±(99.9%) 1176.766 ms/op [Average]
  (min, avg, max) = (11870.692, 12152.476, 12606.321), stdev = 305.602
  CI (99.9%): [10975.710, 13329.242] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 22.63% complete, ETA 20:15:51
# Fork: 1 of 1
# Warmup Iteration   1: 6860.682 ms/op
# Warmup Iteration   2: 10484.444 ms/op
# Warmup Iteration   3: 10410.721 ms/op
# Warmup Iteration   4: 12791.689 ms/op
# Warmup Iteration   5: 13981.268 ms/op
Iteration   1: 14492.593 ms/op
Iteration   2: 14287.358 ms/op
Iteration   3: 13287.877 ms/op
Iteration   4: 11966.323 ms/op
Iteration   5: 11406.218 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  13088.074 ±(99.9%) 5285.997 ms/op [Average]
  (min, avg, max) = (11406.218, 13088.074, 14492.593), stdev = 1372.757
  CI (99.9%): [7802.077, 18374.071] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 22.73% complete, ETA 20:16:10
# Fork: 1 of 1
# Warmup Iteration   1: 3.099 ms/op
# Warmup Iteration   2: 2.852 ms/op
# Warmup Iteration   3: 2.846 ms/op
# Warmup Iteration   4: 2.848 ms/op
# Warmup Iteration   5: 2.840 ms/op
Iteration   1: 2.828 ms/op
Iteration   2: 2.814 ms/op
Iteration   3: 3.088 ms/op
Iteration   4: 4.746 ms/op
Iteration   5: 5.063 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3.708 ±(99.9%) 4.248 ms/op [Average]
  (min, avg, max) = (2.814, 3.708, 5.063), stdev = 1.103
  CI (99.9%): [? 0, 7.956] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 22.82% complete, ETA 20:10:14
# Fork: 1 of 1
# Warmup Iteration   1: 3.122 ms/op
# Warmup Iteration   2: 2.925 ms/op
# Warmup Iteration   3: 2.829 ms/op
# Warmup Iteration   4: 2.866 ms/op
# Warmup Iteration   5: 2.840 ms/op
Iteration   1: 2.814 ms/op
Iteration   2: 2.853 ms/op
Iteration   3: 3.507 ms/op
Iteration   4: 5.189 ms/op
Iteration   5: 5.320 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  3.937 ±(99.9%) 4.757 ms/op [Average]
  (min, avg, max) = (2.814, 3.937, 5.320), stdev = 1.235
  CI (99.9%): [? 0, 8.693] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 22.92% complete, ETA 20:04:21
# Fork: 1 of 1
# Warmup Iteration   1: 92.664 ms/op
# Warmup Iteration   2: 86.350 ms/op
# Warmup Iteration   3: 87.451 ms/op
# Warmup Iteration   4: 86.433 ms/op
# Warmup Iteration   5: 85.529 ms/op
Iteration   1: 84.423 ms/op
Iteration   2: 84.378 ms/op
Iteration   3: 106.182 ms/op
Iteration   4: 147.849 ms/op
Iteration   5: 145.195 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  113.605 ±(99.9%) 120.721 ms/op [Average]
  (min, avg, max) = (84.378, 113.605, 147.849), stdev = 31.351
  CI (99.9%): [? 0, 234.326] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 23.01% complete, ETA 19:58:31
# Fork: 1 of 1
# Warmup Iteration   1: 93.327 ms/op
# Warmup Iteration   2: 86.393 ms/op
# Warmup Iteration   3: 84.673 ms/op
# Warmup Iteration   4: 84.742 ms/op
# Warmup Iteration   5: 85.421 ms/op
Iteration   1: 84.761 ms/op
Iteration   2: 84.482 ms/op
Iteration   3: 120.094 ms/op
Iteration   4: 130.857 ms/op
Iteration   5: 139.814 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  112.001 ±(99.9%) 99.930 ms/op [Average]
  (min, avg, max) = (84.482, 112.001, 139.814), stdev = 25.952
  CI (99.9%): [12.071, 211.932] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 23.11% complete, ETA 19:52:45
# Fork: 1 of 1
# Warmup Iteration   1: 18311.923 ms/op
# Warmup Iteration   2: 27351.575 ms/op
# Warmup Iteration   3: 27986.995 ms/op
# Warmup Iteration   4: 24732.146 ms/op
# Warmup Iteration   5: 24626.710 ms/op
Iteration   1: 25492.253 ms/op
Iteration   2: 25839.438 ms/op
Iteration   3: 28075.158 ms/op
Iteration   4: 27622.600 ms/op
Iteration   5: 29086.586 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  27223.207 ±(99.9%) 5861.502 ms/op [Average]
  (min, avg, max) = (25492.253, 27223.207, 29086.586), stdev = 1522.213
  CI (99.9%): [21361.705, 33084.709] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 23.20% complete, ETA 20:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 20129.376 ms/op
# Warmup Iteration   2: 25450.577 ms/op
# Warmup Iteration   3: 31133.645 ms/op
# Warmup Iteration   4: 32538.541 ms/op
# Warmup Iteration   5: 39658.160 ms/op
Iteration   1: 32034.268 ms/op
Iteration   2: 29399.749 ms/op
Iteration   3: 27725.196 ms/op
Iteration   4: 31696.524 ms/op
Iteration   5: 27408.866 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  29652.920 ±(99.9%) 8317.553 ms/op [Average]
  (min, avg, max) = (27408.866, 29652.920, 32034.268), stdev = 2160.042
  CI (99.9%): [21335.367, 37970.474] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 23.30% complete, ETA 20:10:49
# Fork: 1 of 1
# Warmup Iteration   1: 6.319 ms/op
# Warmup Iteration   2: 5.752 ms/op
# Warmup Iteration   3: 5.700 ms/op
# Warmup Iteration   4: 5.731 ms/op
# Warmup Iteration   5: 5.717 ms/op
Iteration   1: 5.723 ms/op
Iteration   2: 5.775 ms/op
Iteration   3: 7.204 ms/op
Iteration   4: 9.450 ms/op
Iteration   5: 8.482 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  7.327 ±(99.9%) 6.338 ms/op [Average]
  (min, avg, max) = (5.723, 7.327, 9.450), stdev = 1.646
  CI (99.9%): [0.989, 13.664] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 23.39% complete, ETA 20:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 6.322 ms/op
# Warmup Iteration   2: 5.939 ms/op
# Warmup Iteration   3: 5.807 ms/op
# Warmup Iteration   4: 5.721 ms/op
# Warmup Iteration   5: 5.695 ms/op
Iteration   1: 5.720 ms/op
Iteration   2: 5.715 ms/op
Iteration   3: 6.997 ms/op
Iteration   4: 10.878 ms/op
Iteration   5: 10.871 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  8.036 ±(99.9%) 10.177 ms/op [Average]
  (min, avg, max) = (5.715, 8.036, 10.878), stdev = 2.643
  CI (99.9%): [? 0, 18.213] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 23.48% complete, ETA 19:59:13
# Fork: 1 of 1
# Warmup Iteration   1: 186.521 ms/op
# Warmup Iteration   2: 173.636 ms/op
# Warmup Iteration   3: 173.349 ms/op
# Warmup Iteration   4: 171.674 ms/op
# Warmup Iteration   5: 172.589 ms/op
Iteration   1: 171.130 ms/op
Iteration   2: 168.742 ms/op
Iteration   3: 235.187 ms/op
Iteration   4: 303.870 ms/op
Iteration   5: 279.291 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  231.644 ±(99.9%) 236.727 ms/op [Average]
  (min, avg, max) = (168.742, 231.644, 303.870), stdev = 61.477
  CI (99.9%): [? 0, 468.371] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 23.58% complete, ETA 19:53:32
# Fork: 1 of 1
# Warmup Iteration   1: 185.797 ms/op
# Warmup Iteration   2: 169.952 ms/op
# Warmup Iteration   3: 171.297 ms/op
# Warmup Iteration   4: 171.810 ms/op
# Warmup Iteration   5: 173.220 ms/op
Iteration   1: 171.113 ms/op
Iteration   2: 171.821 ms/op
Iteration   3: 225.313 ms/op
Iteration   4: 315.151 ms/op
Iteration   5: 314.975 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  239.674 ±(99.9%) 278.192 ms/op [Average]
  (min, avg, max) = (171.113, 239.674, 315.151), stdev = 72.246
  CI (99.9%): [? 0, 517.867] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 23.67% complete, ETA 19:47:54
# Fork: 1 of 1
# Warmup Iteration   1: 42389.303 ms/op
# Warmup Iteration   2: 49178.331 ms/op
# Warmup Iteration   3: 54793.127 ms/op
# Warmup Iteration   4: 57025.577 ms/op
# Warmup Iteration   5: 63367.239 ms/op
Iteration   1: 68421.441 ms/op
Iteration   2: 61891.364 ms/op
Iteration   3: 52334.198 ms/op
Iteration   4: 56182.486 ms/op
Iteration   5: 72655.834 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  62297.065 ±(99.9%) 32310.062 ms/op [Average]
  (min, avg, max) = (52334.198, 62297.065, 72655.834), stdev = 8390.821
  CI (99.9%): [29987.003, 94607.127] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 23.77% complete, ETA 20:12:42
# Fork: 1 of 1
# Warmup Iteration   1: 53051.312 ms/op
# Warmup Iteration   2: 66351.506 ms/op
# Warmup Iteration   3: 54408.024 ms/op
# Warmup Iteration   4: 60884.069 ms/op
# Warmup Iteration   5: 66364.310 ms/op
Iteration   1: 53146.426 ms/op
Iteration   2: 69400.139 ms/op
Iteration   3: 56049.074 ms/op
Iteration   4: 59592.678 ms/op
Iteration   5: 79650.964 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  63567.856 ±(99.9%) 41900.518 ms/op [Average]
  (min, avg, max) = (53146.426, 63567.856, 79650.964), stdev = 10881.432
  CI (99.9%): [21667.338, 105468.375] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 23.86% complete, ETA 20:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 13.810 ms/op
# Warmup Iteration   2: 12.986 ms/op
# Warmup Iteration   3: 13.114 ms/op
# Warmup Iteration   4: 12.647 ms/op
# Warmup Iteration   5: 12.599 ms/op
Iteration   1: 12.565 ms/op
Iteration   2: 12.746 ms/op
Iteration   3: 16.280 ms/op
Iteration   4: 23.072 ms/op
Iteration   5: 21.815 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  17.296 ±(99.9%) 19.051 ms/op [Average]
  (min, avg, max) = (12.565, 17.296, 23.072), stdev = 4.947
  CI (99.9%): [? 0, 36.346] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 23.96% complete, ETA 20:33:30
# Fork: 1 of 1
# Warmup Iteration   1: 14.241 ms/op
# Warmup Iteration   2: 12.717 ms/op
# Warmup Iteration   3: 13.436 ms/op
# Warmup Iteration   4: 12.885 ms/op
# Warmup Iteration   5: 12.728 ms/op
Iteration   1: 13.080 ms/op
Iteration   2: 12.643 ms/op
Iteration   3: 16.908 ms/op
Iteration   4: 22.204 ms/op
Iteration   5: 21.859 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  17.339 ±(99.9%) 17.696 ms/op [Average]
  (min, avg, max) = (12.643, 17.339, 22.204), stdev = 4.596
  CI (99.9%): [? 0, 35.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 24.05% complete, ETA 20:27:40
# Fork: 1 of 1
# Warmup Iteration   1: 439.450 ms/op
# Warmup Iteration   2: 391.606 ms/op
# Warmup Iteration   3: 392.684 ms/op
# Warmup Iteration   4: 388.149 ms/op
# Warmup Iteration   5: 389.071 ms/op
Iteration   1: 388.975 ms/op
Iteration   2: 535.186 ms/op
Iteration   3: 696.189 ms/op
Iteration   4: 652.930 ms/op
Iteration   5: 702.953 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  595.246 ±(99.9%) 514.002 ms/op [Average]
  (min, avg, max) = (388.975, 595.246, 702.953), stdev = 133.485
  CI (99.9%): [81.244, 1109.249] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 24.15% complete, ETA 20:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 423.654 ms/op
# Warmup Iteration   2: 418.740 ms/op
# Warmup Iteration   3: 422.987 ms/op
# Warmup Iteration   4: 401.747 ms/op
# Warmup Iteration   5: 448.656 ms/op
Iteration   1: 691.350 ms/op
Iteration   2: 866.867 ms/op
Iteration   3: 660.527 ms/op
Iteration   4: 695.179 ms/op
Iteration   5: 616.914 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  706.167 ±(99.9%) 366.387 ms/op [Average]
  (min, avg, max) = (616.914, 706.167, 866.867), stdev = 95.150
  CI (99.9%): [339.780, 1072.554] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 24.24% complete, ETA 20:16:26
# Fork: 1 of 1
# Warmup Iteration   1: 120390.685 ms/op
# Warmup Iteration   2: 125090.261 ms/op
# Warmup Iteration   3: 149835.890 ms/op
# Warmup Iteration   4: 133473.319 ms/op
# Warmup Iteration   5: 107038.718 ms/op
Iteration   1: 99699.682 ms/op
Iteration   2: 108046.281 ms/op
Iteration   3: 115182.813 ms/op
Iteration   4: 110547.881 ms/op
Iteration   5: 117514.289 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  110198.189 ±(99.9%) 26771.215 ms/op [Average]
  (min, avg, max) = (99699.682, 110198.189, 117514.289), stdev = 6952.400
  CI (99.9%): [83426.974, 136969.404] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 24.34% complete, ETA 21:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 96345.611 ms/op
# Warmup Iteration   2: 108126.726 ms/op
# Warmup Iteration   3: 98175.129 ms/op
# Warmup Iteration   4: 99604.698 ms/op
# Warmup Iteration   5: 99423.274 ms/op
Iteration   1: 102553.250 ms/op
Iteration   2: 100846.446 ms/op
Iteration   3: 89179.454 ms/op
Iteration   4: 88083.613 ms/op
Iteration   5: 113023.676 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  98737.288 ±(99.9%) 39829.695 ms/op [Average]
  (min, avg, max) = (88083.613, 98737.288, 113023.676), stdev = 10343.645
  CI (99.9%): [58907.593, 138566.982] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 24.43% complete, ETA 21:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 28.637 ms/op
# Warmup Iteration   2: 27.558 ms/op
# Warmup Iteration   3: 28.037 ms/op
# Warmup Iteration   4: 27.629 ms/op
# Warmup Iteration   5: 27.561 ms/op
Iteration   1: 27.470 ms/op
Iteration   2: 27.197 ms/op
Iteration   3: 37.592 ms/op
Iteration   4: 41.447 ms/op
Iteration   5: 35.545 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  33.850 ±(99.9%) 24.320 ms/op [Average]
  (min, avg, max) = (27.197, 33.850, 41.447), stdev = 6.316
  CI (99.9%): [9.530, 58.170] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 24.53% complete, ETA 21:50:28
# Fork: 1 of 1
# Warmup Iteration   1: 24.170 ms/op
# Warmup Iteration   2: 22.485 ms/op
# Warmup Iteration   3: 23.873 ms/op
# Warmup Iteration   4: 24.700 ms/op
# Warmup Iteration   5: 24.748 ms/op
Iteration   1: 25.575 ms/op
Iteration   2: 26.473 ms/op
Iteration   3: 33.400 ms/op
Iteration   4: 37.113 ms/op
Iteration   5: 38.294 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  32.171 ±(99.9%) 22.732 ms/op [Average]
  (min, avg, max) = (25.575, 32.171, 38.294), stdev = 5.904
  CI (99.9%): [9.439, 54.904] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 24.62% complete, ETA 21:44:20
# Fork: 1 of 1
# Warmup Iteration   1: 739.132 ms/op
# Warmup Iteration   2: 706.770 ms/op
# Warmup Iteration   3: 708.868 ms/op
# Warmup Iteration   4: 713.783 ms/op
# Warmup Iteration   5: 711.026 ms/op
Iteration   1: 1054.937 ms/op
Iteration   2: 1080.445 ms/op
Iteration   3: 1197.187 ms/op
Iteration   4: 1069.165 ms/op
Iteration   5: 1034.451 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1087.237 ±(99.9%) 245.744 ms/op [Average]
  (min, avg, max) = (1034.451, 1087.237, 1197.187), stdev = 63.819
  CI (99.9%): [841.493, 1332.981] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 24.72% complete, ETA 21:38:25
# Fork: 1 of 1
# Warmup Iteration   1: 730.356 ms/op
# Warmup Iteration   2: 683.532 ms/op
# Warmup Iteration   3: 689.212 ms/op
# Warmup Iteration   4: 685.842 ms/op
# Warmup Iteration   5: 677.602 ms/op
Iteration   1: 897.420 ms/op
Iteration   2: 1083.787 ms/op
Iteration   3: 1163.477 ms/op
Iteration   4: 1286.236 ms/op
Iteration   5: 1161.962 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  1118.576 ±(99.9%) 551.761 ms/op [Average]
  (min, avg, max) = (897.420, 1118.576, 1286.236), stdev = 143.290
  CI (99.9%): [566.816, 1670.337] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 24.81% complete, ETA 21:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 204132.401 ms/op
# Warmup Iteration   2: 213383.537 ms/op
# Warmup Iteration   3: 236823.759 ms/op
# Warmup Iteration   4: 259973.417 ms/op
# Warmup Iteration   5: 234945.667 ms/op
Iteration   1: 230906.438 ms/op
Iteration   2: 223685.502 ms/op
Iteration   3: 264029.490 ms/op
Iteration   4: 231238.460 ms/op
Iteration   5: 227121.193 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  235396.217 ±(99.9%) 62770.404 ms/op [Average]
  (min, avg, max) = (223685.502, 235396.217, 264029.490), stdev = 16301.275
  CI (99.9%): [172625.812, 298166.621] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 24.91% complete, ETA 23:22:59
# Fork: 1 of 1
# Warmup Iteration   1: 212450.929 ms/op
# Warmup Iteration   2: 219725.882 ms/op
# Warmup Iteration   3: 210740.131 ms/op
# Warmup Iteration   4: 206449.987 ms/op
# Warmup Iteration   5: 209874.830 ms/op
Iteration   1: 208632.677 ms/op
Iteration   2: 206351.997 ms/op
Iteration   3: 205453.007 ms/op
Iteration   4: 209992.361 ms/op
Iteration   5: 198141.778 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous":
  205714.364 ±(99.9%) 17712.621 ms/op [Average]
  (min, avg, max) = (198141.778, 205714.364, 209992.361), stdev = 4599.912
  CI (99.9%): [188001.742, 223426.985] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 25.00% complete, ETA 1 days, 01:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.022 ms/op
# Warmup Iteration   4: 0.021 ms/op
# Warmup Iteration   5: 0.021 ms/op
Iteration   1: 0.021 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.028 ms/op
Iteration   4: 0.030 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.027 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.021, 0.027, 0.035), stdev = 0.006
  CI (99.9%): [0.005, 0.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 25.09% complete, ETA 1 days, 00:53:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.022 ms/op
# Warmup Iteration   5: 0.023 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.023 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.038 ms/op
Iteration   5: 0.033 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.029 ±(99.9%) 0.024 ms/op [Average]
  (min, avg, max) = (0.023, 0.029, 0.038), stdev = 0.006
  CI (99.9%): [0.005, 0.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 25.19% complete, ETA 1 days, 00:46:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.717 ms/op
# Warmup Iteration   2: 0.658 ms/op
# Warmup Iteration   3: 0.703 ms/op
# Warmup Iteration   4: 0.716 ms/op
# Warmup Iteration   5: 0.723 ms/op
Iteration   1: 0.743 ms/op
Iteration   2: 0.736 ms/op
Iteration   3: 0.989 ms/op
Iteration   4: 1.316 ms/op
Iteration   5: 1.063 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.970 ±(99.9%) 0.934 ms/op [Average]
  (min, avg, max) = (0.736, 0.970, 1.316), stdev = 0.243
  CI (99.9%): [0.036, 1.904] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 25.28% complete, ETA 1 days, 00:39:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.719 ms/op
# Warmup Iteration   2: 0.753 ms/op
# Warmup Iteration   3: 0.798 ms/op
# Warmup Iteration   4: 0.810 ms/op
# Warmup Iteration   5: 0.803 ms/op
Iteration   1: 0.800 ms/op
Iteration   2: 0.800 ms/op
Iteration   3: 1.023 ms/op
Iteration   4: 1.294 ms/op
Iteration   5: 1.075 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.998 ±(99.9%) 0.801 ms/op [Average]
  (min, avg, max) = (0.800, 0.998, 1.294), stdev = 0.208
  CI (99.9%): [0.198, 1.799] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 25.38% complete, ETA 1 days, 00:32:35
# Fork: 1 of 1
# Warmup Iteration   1: 115.696 ms/op
# Warmup Iteration   2: 118.728 ms/op
# Warmup Iteration   3: 115.978 ms/op
# Warmup Iteration   4: 117.162 ms/op
# Warmup Iteration   5: 130.415 ms/op
Iteration   1: 113.382 ms/op
Iteration   2: 115.723 ms/op
Iteration   3: 197.688 ms/op
Iteration   4: 151.804 ms/op
Iteration   5: 172.080 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  150.135 ±(99.9%) 139.909 ms/op [Average]
  (min, avg, max) = (113.382, 150.135, 197.688), stdev = 36.334
  CI (99.9%): [10.227, 290.044] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 25.47% complete, ETA 1 days, 00:25:47
# Fork: 1 of 1
# Warmup Iteration   1: 112.139 ms/op
# Warmup Iteration   2: 104.493 ms/op
# Warmup Iteration   3: 114.206 ms/op
# Warmup Iteration   4: 118.272 ms/op
# Warmup Iteration   5: 118.167 ms/op
Iteration   1: 105.053 ms/op
Iteration   2: 103.903 ms/op
Iteration   3: 190.887 ms/op
Iteration   4: 164.417 ms/op
Iteration   5: 172.652 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  147.383 ±(99.9%) 155.268 ms/op [Average]
  (min, avg, max) = (103.903, 147.383, 190.887), stdev = 40.323
  CI (99.9%): [? 0, 302.650] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 25.57% complete, ETA 1 days, 00:19:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.045 ms/op
# Warmup Iteration   5: 0.045 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.052 ms/op
Iteration   4: 0.079 ms/op
Iteration   5: 0.081 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.060 ±(99.9%) 0.071 ms/op [Average]
  (min, avg, max) = (0.044, 0.060, 0.081), stdev = 0.018
  CI (99.9%): [? 0, 0.131] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 25.66% complete, ETA 1 days, 00:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.044 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.040 ms/op
Iteration   2: 0.040 ms/op
Iteration   3: 0.049 ms/op
Iteration   4: 0.076 ms/op
Iteration   5: 0.068 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.055 ±(99.9%) 0.062 ms/op [Average]
  (min, avg, max) = (0.040, 0.055, 0.076), stdev = 0.016
  CI (99.9%): [? 0, 0.117] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 25.76% complete, ETA 1 days, 00:05:38
# Fork: 1 of 1
# Warmup Iteration   1: 1.407 ms/op
# Warmup Iteration   2: 1.281 ms/op
# Warmup Iteration   3: 1.291 ms/op
# Warmup Iteration   4: 1.279 ms/op
# Warmup Iteration   5: 1.304 ms/op
Iteration   1: 1.278 ms/op
Iteration   2: 1.280 ms/op
Iteration   3: 1.538 ms/op
Iteration   4: 2.160 ms/op
Iteration   5: 1.991 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.649 ±(99.9%) 1.569 ms/op [Average]
  (min, avg, max) = (1.278, 1.649, 2.160), stdev = 0.407
  CI (99.9%): [0.081, 3.218] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 25.85% complete, ETA 23:59:00
# Fork: 1 of 1
# Warmup Iteration   1: 1.427 ms/op
# Warmup Iteration   2: 1.300 ms/op
# Warmup Iteration   3: 1.345 ms/op
# Warmup Iteration   4: 1.327 ms/op
# Warmup Iteration   5: 1.300 ms/op
Iteration   1: 1.295 ms/op
Iteration   2: 1.311 ms/op
Iteration   3: 1.476 ms/op
Iteration   4: 1.959 ms/op
Iteration   5: 2.304 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.669 ±(99.9%) 1.715 ms/op [Average]
  (min, avg, max) = (1.295, 1.669, 2.304), stdev = 0.445
  CI (99.9%): [? 0, 3.384] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 25.95% complete, ETA 23:52:25
# Fork: 1 of 1
# Warmup Iteration   1: 223.776 ms/op
# Warmup Iteration   2: 213.649 ms/op
# Warmup Iteration   3: 209.442 ms/op
# Warmup Iteration   4: 231.172 ms/op
# Warmup Iteration   5: 296.622 ms/op
Iteration   1: 257.760 ms/op
Iteration   2: 268.144 ms/op
Iteration   3: 378.627 ms/op
Iteration   4: 390.640 ms/op
Iteration   5: 413.252 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  341.685 ±(99.9%) 281.221 ms/op [Average]
  (min, avg, max) = (257.760, 341.685, 413.252), stdev = 73.032
  CI (99.9%): [60.463, 622.906] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 26.04% complete, ETA 23:45:57
# Fork: 1 of 1
# Warmup Iteration   1: 249.749 ms/op
# Warmup Iteration   2: 224.933 ms/op
# Warmup Iteration   3: 220.593 ms/op
# Warmup Iteration   4: 213.069 ms/op
# Warmup Iteration   5: 206.094 ms/op
Iteration   1: 198.441 ms/op
Iteration   2: 262.881 ms/op
Iteration   3: 352.705 ms/op
Iteration   4: 348.273 ms/op
Iteration   5: 312.509 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  294.962 ±(99.9%) 249.771 ms/op [Average]
  (min, avg, max) = (198.441, 294.962, 352.705), stdev = 64.865
  CI (99.9%): [45.191, 544.732] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 26.14% complete, ETA 23:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.102 ms/op
# Warmup Iteration   2: 0.096 ms/op
# Warmup Iteration   3: 0.095 ms/op
# Warmup Iteration   4: 0.093 ms/op
# Warmup Iteration   5: 0.094 ms/op
Iteration   1: 0.095 ms/op
Iteration   2: 0.096 ms/op
Iteration   3: 0.119 ms/op
Iteration   4: 0.178 ms/op
Iteration   5: 0.180 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.134 ±(99.9%) 0.164 ms/op [Average]
  (min, avg, max) = (0.095, 0.134, 0.180), stdev = 0.043
  CI (99.9%): [? 0, 0.297] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 26.23% complete, ETA 23:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.103 ms/op
# Warmup Iteration   2: 0.094 ms/op
# Warmup Iteration   3: 0.097 ms/op
# Warmup Iteration   4: 0.096 ms/op
# Warmup Iteration   5: 0.093 ms/op
Iteration   1: 0.095 ms/op
Iteration   2: 0.094 ms/op
Iteration   3: 0.126 ms/op
Iteration   4: 0.186 ms/op
Iteration   5: 0.164 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.133 ±(99.9%) 0.158 ms/op [Average]
  (min, avg, max) = (0.094, 0.133, 0.186), stdev = 0.041
  CI (99.9%): [? 0, 0.291] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 26.33% complete, ETA 23:26:41
# Fork: 1 of 1
# Warmup Iteration   1: 2.972 ms/op
# Warmup Iteration   2: 2.975 ms/op
# Warmup Iteration   3: 2.923 ms/op
# Warmup Iteration   4: 2.887 ms/op
# Warmup Iteration   5: 2.877 ms/op
Iteration   1: 2.855 ms/op
Iteration   2: 2.845 ms/op
Iteration   3: 3.871 ms/op
Iteration   4: 6.428 ms/op
Iteration   5: 5.467 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  4.293 ±(99.9%) 6.173 ms/op [Average]
  (min, avg, max) = (2.845, 4.293, 6.428), stdev = 1.603
  CI (99.9%): [? 0, 10.466] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 26.42% complete, ETA 23:20:19
# Fork: 1 of 1
# Warmup Iteration   1: 3.153 ms/op
# Warmup Iteration   2: 2.865 ms/op
# Warmup Iteration   3: 2.825 ms/op
# Warmup Iteration   4: 2.879 ms/op
# Warmup Iteration   5: 2.842 ms/op
Iteration   1: 2.814 ms/op
Iteration   2: 2.667 ms/op
Iteration   3: 3.422 ms/op
Iteration   4: 4.784 ms/op
Iteration   5: 4.890 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.715 ±(99.9%) 4.092 ms/op [Average]
  (min, avg, max) = (2.667, 3.715, 4.890), stdev = 1.063
  CI (99.9%): [? 0, 7.808] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 26.52% complete, ETA 23:14:00
# Fork: 1 of 1
# Warmup Iteration   1: 465.757 ms/op
# Warmup Iteration   2: 430.797 ms/op
# Warmup Iteration   3: 425.521 ms/op
# Warmup Iteration   4: 420.804 ms/op
# Warmup Iteration   5: 444.349 ms/op
Iteration   1: 557.463 ms/op
Iteration   2: 776.996 ms/op
Iteration   3: 657.626 ms/op
Iteration   4: 742.316 ms/op
Iteration   5: 682.663 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  683.413 ±(99.9%) 326.490 ms/op [Average]
  (min, avg, max) = (557.463, 683.413, 776.996), stdev = 84.788
  CI (99.9%): [356.923, 1009.903] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 26.61% complete, ETA 23:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 440.326 ms/op
# Warmup Iteration   2: 408.626 ms/op
# Warmup Iteration   3: 422.343 ms/op
# Warmup Iteration   4: 449.594 ms/op
# Warmup Iteration   5: 465.946 ms/op
Iteration   1: 516.199 ms/op
Iteration   2: 821.419 ms/op
Iteration   3: 669.939 ms/op
Iteration   4: 696.476 ms/op
Iteration   5: 659.699 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  672.746 ±(99.9%) 418.960 ms/op [Average]
  (min, avg, max) = (516.199, 672.746, 821.419), stdev = 108.803
  CI (99.9%): [253.787, 1091.706] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 26.70% complete, ETA 23:01:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.192 ms/op
# Warmup Iteration   2: 0.179 ms/op
# Warmup Iteration   3: 0.193 ms/op
# Warmup Iteration   4: 0.204 ms/op
# Warmup Iteration   5: 0.202 ms/op
Iteration   1: 0.200 ms/op
Iteration   2: 0.200 ms/op
Iteration   3: 0.250 ms/op
Iteration   4: 0.331 ms/op
Iteration   5: 0.317 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.259 ±(99.9%) 0.240 ms/op [Average]
  (min, avg, max) = (0.200, 0.259, 0.331), stdev = 0.062
  CI (99.9%): [0.020, 0.499] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 26.80% complete, ETA 22:55:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.191 ms/op
# Warmup Iteration   2: 0.196 ms/op
# Warmup Iteration   3: 0.205 ms/op
# Warmup Iteration   4: 0.208 ms/op
# Warmup Iteration   5: 0.209 ms/op
Iteration   1: 0.210 ms/op
Iteration   2: 0.207 ms/op
Iteration   3: 0.267 ms/op
Iteration   4: 0.357 ms/op
Iteration   5: 0.298 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.268 ±(99.9%) 0.243 ms/op [Average]
  (min, avg, max) = (0.207, 0.268, 0.357), stdev = 0.063
  CI (99.9%): [0.025, 0.511] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 26.89% complete, ETA 22:49:30
# Fork: 1 of 1
# Warmup Iteration   1: 5.606 ms/op
# Warmup Iteration   2: 5.678 ms/op
# Warmup Iteration   3: 6.173 ms/op
# Warmup Iteration   4: 6.512 ms/op
# Warmup Iteration   5: 6.423 ms/op
Iteration   1: 6.457 ms/op
Iteration   2: 7.771 ms/op
Iteration   3: 11.131 ms/op
Iteration   4: 19.545 ms/op
Iteration   5: 11.832 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  11.347 ±(99.9%) 19.653 ms/op [Average]
  (min, avg, max) = (6.457, 11.347, 19.545), stdev = 5.104
  CI (99.9%): [? 0, 31.000] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 26.99% complete, ETA 22:43:24
# Fork: 1 of 1
# Warmup Iteration   1: 6.625 ms/op
# Warmup Iteration   2: 6.565 ms/op
# Warmup Iteration   3: 6.523 ms/op
# Warmup Iteration   4: 6.619 ms/op
# Warmup Iteration   5: 6.684 ms/op
Iteration   1: 6.651 ms/op
Iteration   2: 6.755 ms/op
Iteration   3: 8.159 ms/op
Iteration   4: 10.325 ms/op
Iteration   5: 8.457 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  8.069 ±(99.9%) 5.771 ms/op [Average]
  (min, avg, max) = (6.651, 8.069, 10.325), stdev = 1.499
  CI (99.9%): [2.299, 13.840] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 27.08% complete, ETA 22:37:21
# Fork: 1 of 1
# Warmup Iteration   1: 880.853 ms/op
# Warmup Iteration   2: 923.112 ms/op
# Warmup Iteration   3: 957.344 ms/op
# Warmup Iteration   4: 990.274 ms/op
# Warmup Iteration   5: 1677.785 ms/op
Iteration   1: 1241.142 ms/op
Iteration   2: 1515.945 ms/op
Iteration   3: 1271.229 ms/op
Iteration   4: 1159.188 ms/op
Iteration   5: 1258.727 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1289.246 ±(99.9%) 516.178 ms/op [Average]
  (min, avg, max) = (1159.188, 1289.246, 1515.945), stdev = 134.050
  CI (99.9%): [773.068, 1805.424] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 27.18% complete, ETA 22:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 858.238 ms/op
# Warmup Iteration   2: 813.465 ms/op
# Warmup Iteration   3: 814.092 ms/op
# Warmup Iteration   4: 828.065 ms/op
# Warmup Iteration   5: 1235.308 ms/op
Iteration   1: 1399.858 ms/op
Iteration   2: 1364.090 ms/op
Iteration   3: 1213.774 ms/op
Iteration   4: 1190.312 ms/op
Iteration   5: 1444.617 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1322.530 ±(99.9%) 438.709 ms/op [Average]
  (min, avg, max) = (1190.312, 1322.530, 1444.617), stdev = 113.931
  CI (99.9%): [883.821, 1761.239] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 27.27% complete, ETA 22:25:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.388 ms/op
# Warmup Iteration   2: 0.362 ms/op
# Warmup Iteration   3: 0.358 ms/op
# Warmup Iteration   4: 0.357 ms/op
# Warmup Iteration   5: 0.354 ms/op
Iteration   1: 0.363 ms/op
Iteration   2: 0.361 ms/op
Iteration   3: 0.415 ms/op
Iteration   4: 0.677 ms/op
Iteration   5: 0.614 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.486 ±(99.9%) 0.573 ms/op [Average]
  (min, avg, max) = (0.361, 0.486, 0.677), stdev = 0.149
  CI (99.9%): [? 0, 1.059] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 27.37% complete, ETA 22:19:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.382 ms/op
# Warmup Iteration   2: 0.353 ms/op
# Warmup Iteration   3: 0.353 ms/op
# Warmup Iteration   4: 0.355 ms/op
# Warmup Iteration   5: 0.352 ms/op
Iteration   1: 0.354 ms/op
Iteration   2: 0.348 ms/op
Iteration   3: 0.408 ms/op
Iteration   4: 0.611 ms/op
Iteration   5: 0.558 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.456 ±(99.9%) 0.467 ms/op [Average]
  (min, avg, max) = (0.348, 0.456, 0.611), stdev = 0.121
  CI (99.9%): [? 0, 0.923] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 27.46% complete, ETA 22:14:01
# Fork: 1 of 1
# Warmup Iteration   1: 11.321 ms/op
# Warmup Iteration   2: 10.345 ms/op
# Warmup Iteration   3: 10.371 ms/op
# Warmup Iteration   4: 10.312 ms/op
# Warmup Iteration   5: 10.457 ms/op
Iteration   1: 10.268 ms/op
Iteration   2: 10.215 ms/op
Iteration   3: 12.447 ms/op
Iteration   4: 20.665 ms/op
Iteration   5: 17.878 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  14.295 ±(99.9%) 18.235 ms/op [Average]
  (min, avg, max) = (10.215, 14.295, 20.665), stdev = 4.736
  CI (99.9%): [? 0, 32.530] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 27.56% complete, ETA 22:08:10
# Fork: 1 of 1
# Warmup Iteration   1: 11.134 ms/op
# Warmup Iteration   2: 10.296 ms/op
# Warmup Iteration   3: 10.217 ms/op
# Warmup Iteration   4: 10.296 ms/op
# Warmup Iteration   5: 10.323 ms/op
Iteration   1: 10.157 ms/op
Iteration   2: 10.280 ms/op
Iteration   3: 12.411 ms/op
Iteration   4: 18.041 ms/op
Iteration   5: 17.298 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  13.637 ±(99.9%) 14.624 ms/op [Average]
  (min, avg, max) = (10.157, 13.637, 18.041), stdev = 3.798
  CI (99.9%): [? 0, 28.261] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 27.65% complete, ETA 22:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 1748.872 ms/op
# Warmup Iteration   2: 1691.495 ms/op
# Warmup Iteration   3: 1629.093 ms/op
# Warmup Iteration   4: 1620.474 ms/op
# Warmup Iteration   5: 2248.088 ms/op
Iteration   1: 2562.785 ms/op
Iteration   2: 2417.499 ms/op
Iteration   3: 2581.699 ms/op
Iteration   4: 2572.996 ms/op
Iteration   5: 2765.519 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2580.100 ±(99.9%) 476.191 ms/op [Average]
  (min, avg, max) = (2417.499, 2580.100, 2765.519), stdev = 123.665
  CI (99.9%): [2103.909, 3056.290] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 27.75% complete, ETA 21:57:05
# Fork: 1 of 1
# Warmup Iteration   1: 1755.087 ms/op
# Warmup Iteration   2: 1631.123 ms/op
# Warmup Iteration   3: 1637.471 ms/op
# Warmup Iteration   4: 1611.709 ms/op
# Warmup Iteration   5: 2093.670 ms/op
Iteration   1: 2638.725 ms/op
Iteration   2: 2640.588 ms/op
Iteration   3: 2500.365 ms/op
Iteration   4: 2595.402 ms/op
Iteration   5: 2594.150 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2593.846 ±(99.9%) 219.015 ms/op [Average]
  (min, avg, max) = (2500.365, 2593.846, 2640.588), stdev = 56.877
  CI (99.9%): [2374.831, 2812.861] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 27.84% complete, ETA 21:51:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.758 ms/op
# Warmup Iteration   2: 0.692 ms/op
# Warmup Iteration   3: 0.694 ms/op
# Warmup Iteration   4: 0.708 ms/op
# Warmup Iteration   5: 0.696 ms/op
Iteration   1: 0.700 ms/op
Iteration   2: 0.696 ms/op
Iteration   3: 0.829 ms/op
Iteration   4: 1.305 ms/op
Iteration   5: 1.361 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.978 ±(99.9%) 1.266 ms/op [Average]
  (min, avg, max) = (0.696, 0.978, 1.361), stdev = 0.329
  CI (99.9%): [? 0, 2.244] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 27.94% complete, ETA 21:46:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.767 ms/op
# Warmup Iteration   2: 0.697 ms/op
# Warmup Iteration   3: 0.696 ms/op
# Warmup Iteration   4: 0.700 ms/op
# Warmup Iteration   5: 0.706 ms/op
Iteration   1: 0.699 ms/op
Iteration   2: 0.702 ms/op
Iteration   3: 0.835 ms/op
Iteration   4: 1.228 ms/op
Iteration   5: 1.175 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.928 ±(99.9%) 0.989 ms/op [Average]
  (min, avg, max) = (0.699, 0.928, 1.228), stdev = 0.257
  CI (99.9%): [? 0, 1.916] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 28.03% complete, ETA 21:40:27
# Fork: 1 of 1
# Warmup Iteration   1: 22.432 ms/op
# Warmup Iteration   2: 20.521 ms/op
# Warmup Iteration   3: 20.522 ms/op
# Warmup Iteration   4: 20.513 ms/op
# Warmup Iteration   5: 20.429 ms/op
Iteration   1: 20.514 ms/op
Iteration   2: 20.450 ms/op
Iteration   3: 25.244 ms/op
Iteration   4: 32.518 ms/op
Iteration   5: 37.853 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  27.316 ±(99.9%) 29.564 ms/op [Average]
  (min, avg, max) = (20.450, 27.316, 37.853), stdev = 7.678
  CI (99.9%): [? 0, 56.880] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 28.13% complete, ETA 21:34:49
# Fork: 1 of 1
# Warmup Iteration   1: 22.891 ms/op
# Warmup Iteration   2: 20.721 ms/op
# Warmup Iteration   3: 20.848 ms/op
# Warmup Iteration   4: 20.699 ms/op
# Warmup Iteration   5: 20.604 ms/op
Iteration   1: 20.890 ms/op
Iteration   2: 20.657 ms/op
Iteration   3: 24.930 ms/op
Iteration   4: 38.014 ms/op
Iteration   5: 32.330 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  27.364 ±(99.9%) 29.257 ms/op [Average]
  (min, avg, max) = (20.657, 27.364, 38.014), stdev = 7.598
  CI (99.9%): [? 0, 56.621] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 28.22% complete, ETA 21:29:13
# Fork: 1 of 1
# Warmup Iteration   1: 3468.223 ms/op
# Warmup Iteration   2: 3316.661 ms/op
# Warmup Iteration   3: 5209.291 ms/op
# Warmup Iteration   4: 5372.241 ms/op
# Warmup Iteration   5: 5014.473 ms/op
Iteration   1: 4815.288 ms/op
Iteration   2: 5269.476 ms/op
Iteration   3: 5443.919 ms/op
Iteration   4: 5293.864 ms/op
Iteration   5: 5365.287 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  5237.567 ±(99.9%) 945.961 ms/op [Average]
  (min, avg, max) = (4815.288, 5237.567, 5443.919), stdev = 245.663
  CI (99.9%): [4291.606, 6183.528] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 28.31% complete, ETA 21:25:17
# Fork: 1 of 1
# Warmup Iteration   1: 3413.876 ms/op
# Warmup Iteration   2: 3242.780 ms/op
# Warmup Iteration   3: 4890.495 ms/op
# Warmup Iteration   4: 5091.868 ms/op
# Warmup Iteration   5: 5185.842 ms/op
Iteration   1: 5154.620 ms/op
Iteration   2: 5104.236 ms/op
Iteration   3: 5128.190 ms/op
Iteration   4: 5027.142 ms/op
Iteration   5: 5081.160 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  5099.069 ±(99.9%) 187.210 ms/op [Average]
  (min, avg, max) = (5027.142, 5099.069, 5154.620), stdev = 48.618
  CI (99.9%): [4911.859, 5286.280] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 28.41% complete, ETA 21:21:20
# Fork: 1 of 1
# Warmup Iteration   1: 1.586 ms/op
# Warmup Iteration   2: 1.451 ms/op
# Warmup Iteration   3: 1.442 ms/op
# Warmup Iteration   4: 1.447 ms/op
# Warmup Iteration   5: 1.446 ms/op
Iteration   1: 1.437 ms/op
Iteration   2: 1.429 ms/op
Iteration   3: 1.776 ms/op
Iteration   4: 2.801 ms/op
Iteration   5: 2.471 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.983 ±(99.9%) 2.401 ms/op [Average]
  (min, avg, max) = (1.429, 1.983, 2.801), stdev = 0.623
  CI (99.9%): [? 0, 4.384] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 28.50% complete, ETA 21:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 1.563 ms/op
# Warmup Iteration   2: 1.450 ms/op
# Warmup Iteration   3: 1.448 ms/op
# Warmup Iteration   4: 1.435 ms/op
# Warmup Iteration   5: 1.465 ms/op
Iteration   1: 1.452 ms/op
Iteration   2: 1.425 ms/op
Iteration   3: 1.666 ms/op
Iteration   4: 2.521 ms/op
Iteration   5: 2.608 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.934 ±(99.9%) 2.247 ms/op [Average]
  (min, avg, max) = (1.425, 1.934, 2.608), stdev = 0.584
  CI (99.9%): [? 0, 4.181] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 28.60% complete, ETA 21:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 46.528 ms/op
# Warmup Iteration   2: 42.555 ms/op
# Warmup Iteration   3: 42.107 ms/op
# Warmup Iteration   4: 42.039 ms/op
# Warmup Iteration   5: 41.963 ms/op
Iteration   1: 41.850 ms/op
Iteration   2: 41.416 ms/op
Iteration   3: 55.852 ms/op
Iteration   4: 72.290 ms/op
Iteration   5: 74.878 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  57.257 ±(99.9%) 61.694 ms/op [Average]
  (min, avg, max) = (41.416, 57.257, 74.878), stdev = 16.022
  CI (99.9%): [? 0, 118.951] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 28.69% complete, ETA 21:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 45.891 ms/op
# Warmup Iteration   2: 42.050 ms/op
# Warmup Iteration   3: 41.334 ms/op
# Warmup Iteration   4: 41.358 ms/op
# Warmup Iteration   5: 42.298 ms/op
Iteration   1: 41.930 ms/op
Iteration   2: 41.056 ms/op
Iteration   3: 53.443 ms/op
Iteration   4: 71.781 ms/op
Iteration   5: 78.355 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  57.313 ±(99.9%) 65.800 ms/op [Average]
  (min, avg, max) = (41.056, 57.313, 78.355), stdev = 17.088
  CI (99.9%): [? 0, 123.113] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 28.79% complete, ETA 20:59:31
# Fork: 1 of 1
# Warmup Iteration   1: 6639.484 ms/op
# Warmup Iteration   2: 10290.129 ms/op
# Warmup Iteration   3: 10681.807 ms/op
# Warmup Iteration   4: 10806.615 ms/op
# Warmup Iteration   5: 10686.924 ms/op
Iteration   1: 10323.965 ms/op
Iteration   2: 10568.854 ms/op
Iteration   3: 10306.850 ms/op
Iteration   4: 10352.945 ms/op
Iteration   5: 10306.951 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  10371.913 ±(99.9%) 430.075 ms/op [Average]
  (min, avg, max) = (10306.850, 10371.913, 10568.854), stdev = 111.689
  CI (99.9%): [9941.838, 10801.988] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 28.88% complete, ETA 20:57:53
# Fork: 1 of 1
# Warmup Iteration   1: 6620.452 ms/op
# Warmup Iteration   2: 9126.759 ms/op
# Warmup Iteration   3: 10324.922 ms/op
# Warmup Iteration   4: 10131.354 ms/op
# Warmup Iteration   5: 9573.520 ms/op
Iteration   1: 9697.576 ms/op
Iteration   2: 10029.417 ms/op
Iteration   3: 10053.255 ms/op
Iteration   4: 10057.432 ms/op
Iteration   5: 9638.852 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  9895.307 ±(99.9%) 803.310 ms/op [Average]
  (min, avg, max) = (9638.852, 9895.307, 10057.432), stdev = 208.617
  CI (99.9%): [9091.997, 10698.616] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 28.98% complete, ETA 20:56:01
# Fork: 1 of 1
# Warmup Iteration   1: 3.113 ms/op
# Warmup Iteration   2: 2.822 ms/op
# Warmup Iteration   3: 2.836 ms/op
# Warmup Iteration   4: 2.844 ms/op
# Warmup Iteration   5: 2.801 ms/op
Iteration   1: 2.793 ms/op
Iteration   2: 2.837 ms/op
Iteration   3: 3.340 ms/op
Iteration   4: 5.115 ms/op
Iteration   5: 5.389 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.895 ±(99.9%) 4.857 ms/op [Average]
  (min, avg, max) = (2.793, 3.895, 5.389), stdev = 1.261
  CI (99.9%): [? 0, 8.752] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 29.07% complete, ETA 20:50:41
# Fork: 1 of 1
# Warmup Iteration   1: 3.133 ms/op
# Warmup Iteration   2: 2.875 ms/op
# Warmup Iteration   3: 2.871 ms/op
# Warmup Iteration   4: 2.859 ms/op
# Warmup Iteration   5: 2.835 ms/op
Iteration   1: 2.821 ms/op
Iteration   2: 2.843 ms/op
Iteration   3: 3.331 ms/op
Iteration   4: 5.178 ms/op
Iteration   5: 4.941 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.823 ±(99.9%) 4.430 ms/op [Average]
  (min, avg, max) = (2.821, 3.823, 5.178), stdev = 1.150
  CI (99.9%): [? 0, 8.252] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 29.17% complete, ETA 20:45:23
# Fork: 1 of 1
# Warmup Iteration   1: 92.218 ms/op
# Warmup Iteration   2: 83.834 ms/op
# Warmup Iteration   3: 84.251 ms/op
# Warmup Iteration   4: 84.322 ms/op
# Warmup Iteration   5: 83.968 ms/op
Iteration   1: 83.069 ms/op
Iteration   2: 83.114 ms/op
Iteration   3: 112.254 ms/op
Iteration   4: 146.411 ms/op
Iteration   5: 135.416 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  112.053 ±(99.9%) 112.328 ms/op [Average]
  (min, avg, max) = (83.069, 112.053, 146.411), stdev = 29.171
  CI (99.9%): [? 0, 224.381] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 29.26% complete, ETA 20:40:08
# Fork: 1 of 1
# Warmup Iteration   1: 94.300 ms/op
# Warmup Iteration   2: 82.881 ms/op
# Warmup Iteration   3: 84.744 ms/op
# Warmup Iteration   4: 84.419 ms/op
# Warmup Iteration   5: 81.800 ms/op
Iteration   1: 81.201 ms/op
Iteration   2: 81.768 ms/op
Iteration   3: 116.640 ms/op
Iteration   4: 131.090 ms/op
Iteration   5: 136.183 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  109.377 ±(99.9%) 101.860 ms/op [Average]
  (min, avg, max) = (81.201, 109.377, 136.183), stdev = 26.453
  CI (99.9%): [7.517, 211.236] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 29.36% complete, ETA 20:34:55
# Fork: 1 of 1
# Warmup Iteration   1: 16680.700 ms/op
# Warmup Iteration   2: 20865.820 ms/op
# Warmup Iteration   3: 20345.551 ms/op
# Warmup Iteration   4: 20360.232 ms/op
# Warmup Iteration   5: 19929.614 ms/op
Iteration   1: 20692.980 ms/op
Iteration   2: 20393.143 ms/op
Iteration   3: 20430.683 ms/op
Iteration   4: 20191.432 ms/op
Iteration   5: 20318.905 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  20405.429 ±(99.9%) 711.993 ms/op [Average]
  (min, avg, max) = (20191.432, 20405.429, 20692.980), stdev = 184.902
  CI (99.9%): [19693.435, 21117.422] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 29.45% complete, ETA 20:37:19
# Fork: 1 of 1
# Warmup Iteration   1: 16254.740 ms/op
# Warmup Iteration   2: 20537.822 ms/op
# Warmup Iteration   3: 20343.787 ms/op
# Warmup Iteration   4: 20208.131 ms/op
# Warmup Iteration   5: 20340.887 ms/op
Iteration   1: 20354.013 ms/op
Iteration   2: 20221.833 ms/op
Iteration   3: 19890.131 ms/op
Iteration   4: 20077.571 ms/op
Iteration   5: 19623.121 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  20033.334 ±(99.9%) 1104.513 ms/op [Average]
  (min, avg, max) = (19623.121, 20033.334, 20354.013), stdev = 286.838
  CI (99.9%): [18928.821, 21137.847] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 29.55% complete, ETA 20:39:35
# Fork: 1 of 1
# Warmup Iteration   1: 6.204 ms/op
# Warmup Iteration   2: 5.677 ms/op
# Warmup Iteration   3: 5.680 ms/op
# Warmup Iteration   4: 5.697 ms/op
# Warmup Iteration   5: 5.605 ms/op
Iteration   1: 5.603 ms/op
Iteration   2: 5.592 ms/op
Iteration   3: 6.674 ms/op
Iteration   4: 9.472 ms/op
Iteration   5: 9.410 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  7.350 ±(99.9%) 7.542 ms/op [Average]
  (min, avg, max) = (5.592, 7.350, 9.472), stdev = 1.959
  CI (99.9%): [? 0, 14.892] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 29.64% complete, ETA 20:34:23
# Fork: 1 of 1
# Warmup Iteration   1: 6.259 ms/op
# Warmup Iteration   2: 5.682 ms/op
# Warmup Iteration   3: 5.634 ms/op
# Warmup Iteration   4: 5.675 ms/op
# Warmup Iteration   5: 5.615 ms/op
Iteration   1: 5.766 ms/op
Iteration   2: 5.700 ms/op
Iteration   3: 7.172 ms/op
Iteration   4: 9.922 ms/op
Iteration   5: 10.215 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  7.755 ±(99.9%) 8.451 ms/op [Average]
  (min, avg, max) = (5.700, 7.755, 10.215), stdev = 2.195
  CI (99.9%): [? 0, 16.206] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 29.73% complete, ETA 20:29:12
# Fork: 1 of 1
# Warmup Iteration   1: 181.944 ms/op
# Warmup Iteration   2: 166.722 ms/op
# Warmup Iteration   3: 168.894 ms/op
# Warmup Iteration   4: 169.157 ms/op
# Warmup Iteration   5: 163.646 ms/op
Iteration   1: 164.521 ms/op
Iteration   2: 174.366 ms/op
Iteration   3: 295.649 ms/op
Iteration   4: 329.588 ms/op
Iteration   5: 315.530 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  255.931 ±(99.9%) 307.831 ms/op [Average]
  (min, avg, max) = (164.521, 255.931, 329.588), stdev = 79.943
  CI (99.9%): [? 0, 563.762] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 29.83% complete, ETA 20:24:07
# Fork: 1 of 1
# Warmup Iteration   1: 181.433 ms/op
# Warmup Iteration   2: 169.213 ms/op
# Warmup Iteration   3: 170.100 ms/op
# Warmup Iteration   4: 165.882 ms/op
# Warmup Iteration   5: 168.371 ms/op
Iteration   1: 164.473 ms/op
Iteration   2: 164.748 ms/op
Iteration   3: 286.629 ms/op
Iteration   4: 308.544 ms/op
Iteration   5: 266.657 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  238.210 ±(99.9%) 264.928 ms/op [Average]
  (min, avg, max) = (164.473, 238.210, 308.544), stdev = 68.801
  CI (99.9%): [? 0, 503.138] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 29.92% complete, ETA 20:19:02
# Fork: 1 of 1
# Warmup Iteration   1: 37902.520 ms/op
# Warmup Iteration   2: 44816.244 ms/op
# Warmup Iteration   3: 44323.750 ms/op
# Warmup Iteration   4: 43966.724 ms/op
# Warmup Iteration   5: 41594.196 ms/op
Iteration   1: 42841.694 ms/op
Iteration   2: 41661.420 ms/op
Iteration   3: 41588.793 ms/op
Iteration   4: 41789.620 ms/op
Iteration   5: 40641.634 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  41704.632 ±(99.9%) 3010.766 ms/op [Average]
  (min, avg, max) = (40641.634, 41704.632, 42841.694), stdev = 781.886
  CI (99.9%): [38693.867, 44715.398] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 30.02% complete, ETA 20:29:56
# Fork: 1 of 1
# Warmup Iteration   1: 37335.955 ms/op
# Warmup Iteration   2: 40992.812 ms/op
# Warmup Iteration   3: 47822.041 ms/op
# Warmup Iteration   4: 51669.429 ms/op
# Warmup Iteration   5: 47340.014 ms/op
Iteration   1: 50109.876 ms/op
Iteration   2: 45147.636 ms/op
Iteration   3: 44136.439 ms/op
Iteration   4: 40656.885 ms/op
Iteration   5: 40597.585 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  44129.684 ±(99.9%) 15078.483 ms/op [Average]
  (min, avg, max) = (40597.585, 44129.684, 50109.876), stdev = 3915.834
  CI (99.9%): [29051.201, 59208.166] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 30.11% complete, ETA 20:41:41
# Fork: 1 of 1
# Warmup Iteration   1: 12.306 ms/op
# Warmup Iteration   2: 11.417 ms/op
# Warmup Iteration   3: 11.468 ms/op
# Warmup Iteration   4: 11.389 ms/op
# Warmup Iteration   5: 11.419 ms/op
Iteration   1: 11.402 ms/op
Iteration   2: 11.355 ms/op
Iteration   3: 14.983 ms/op
Iteration   4: 21.202 ms/op
Iteration   5: 21.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  15.990 ±(99.9%) 18.855 ms/op [Average]
  (min, avg, max) = (11.355, 15.990, 21.202), stdev = 4.897
  CI (99.9%): [? 0, 34.846] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 30.21% complete, ETA 20:36:31
# Fork: 1 of 1
# Warmup Iteration   1: 12.797 ms/op
# Warmup Iteration   2: 11.429 ms/op
# Warmup Iteration   3: 11.399 ms/op
# Warmup Iteration   4: 11.362 ms/op
# Warmup Iteration   5: 11.582 ms/op
Iteration   1: 11.419 ms/op
Iteration   2: 11.505 ms/op
Iteration   3: 14.141 ms/op
Iteration   4: 21.739 ms/op
Iteration   5: 20.680 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  15.897 ±(99.9%) 19.198 ms/op [Average]
  (min, avg, max) = (11.419, 15.897, 21.739), stdev = 4.986
  CI (99.9%): [? 0, 35.095] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 30.30% complete, ETA 20:31:23
# Fork: 1 of 1
# Warmup Iteration   1: 362.322 ms/op
# Warmup Iteration   2: 335.883 ms/op
# Warmup Iteration   3: 338.214 ms/op
# Warmup Iteration   4: 329.909 ms/op
# Warmup Iteration   5: 347.807 ms/op
Iteration   1: 360.107 ms/op
Iteration   2: 408.800 ms/op
Iteration   3: 615.271 ms/op
Iteration   4: 559.526 ms/op
Iteration   5: 540.623 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  496.865 ±(99.9%) 414.367 ms/op [Average]
  (min, avg, max) = (360.107, 496.865, 615.271), stdev = 107.610
  CI (99.9%): [82.498, 911.232] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 30.40% complete, ETA 20:26:20
# Fork: 1 of 1
# Warmup Iteration   1: 393.465 ms/op
# Warmup Iteration   2: 357.931 ms/op
# Warmup Iteration   3: 354.244 ms/op
# Warmup Iteration   4: 346.191 ms/op
# Warmup Iteration   5: 338.542 ms/op
Iteration   1: 342.433 ms/op
Iteration   2: 347.910 ms/op
Iteration   3: 533.623 ms/op
Iteration   4: 573.423 ms/op
Iteration   5: 572.319 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  473.942 ±(99.9%) 456.893 ms/op [Average]
  (min, avg, max) = (342.433, 473.942, 573.423), stdev = 118.654
  CI (99.9%): [17.049, 930.835] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 30.49% complete, ETA 20:21:18
# Fork: 1 of 1
# Warmup Iteration   1: 84396.743 ms/op
# Warmup Iteration   2: 89933.150 ms/op
# Warmup Iteration   3: 90605.599 ms/op
# Warmup Iteration   4: 86089.399 ms/op
# Warmup Iteration   5: 85207.507 ms/op
Iteration   1: 84292.641 ms/op
Iteration   2: 84950.926 ms/op
Iteration   3: 86492.435 ms/op
Iteration   4: 83305.805 ms/op
Iteration   5: 85232.817 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  84854.925 ±(99.9%) 4535.510 ms/op [Average]
  (min, avg, max) = (83305.805, 84854.925, 86492.435), stdev = 1177.858
  CI (99.9%): [80319.415, 89390.435] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 30.59% complete, ETA 20:48:26
# Fork: 1 of 1
# Warmup Iteration   1: 81063.595 ms/op
# Warmup Iteration   2: 81681.505 ms/op
# Warmup Iteration   3: 82340.165 ms/op
# Warmup Iteration   4: 83291.656 ms/op
# Warmup Iteration   5: 82558.793 ms/op
Iteration   1: 81932.799 ms/op
Iteration   2: 84019.542 ms/op
Iteration   3: 66266.157 ms/op
Iteration   4: 54880.685 ms/op
Iteration   5: 59237.509 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  69267.338 ±(99.9%) 50743.166 ms/op [Average]
  (min, avg, max) = (54880.685, 69267.338, 84019.542), stdev = 13177.839
  CI (99.9%): [18524.173, 120010.504] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 30.68% complete, ETA 21:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 28.627 ms/op
# Warmup Iteration   2: 24.023 ms/op
# Warmup Iteration   3: 23.648 ms/op
# Warmup Iteration   4: 24.168 ms/op
# Warmup Iteration   5: 23.983 ms/op
Iteration   1: 24.217 ms/op
Iteration   2: 23.783 ms/op
Iteration   3: 23.826 ms/op
Iteration   4: 23.707 ms/op
Iteration   5: 23.796 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  23.866 ±(99.9%) 0.775 ms/op [Average]
  (min, avg, max) = (23.707, 23.866, 24.217), stdev = 0.201
  CI (99.9%): [23.091, 24.641] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 30.78% complete, ETA 21:06:11
# Fork: 1 of 1
# Warmup Iteration   1: 26.074 ms/op
# Warmup Iteration   2: 23.821 ms/op
# Warmup Iteration   3: 23.816 ms/op
# Warmup Iteration   4: 23.880 ms/op
# Warmup Iteration   5: 23.702 ms/op
Iteration   1: 24.244 ms/op
Iteration   2: 23.916 ms/op
Iteration   3: 23.578 ms/op
Iteration   4: 23.745 ms/op
Iteration   5: 23.584 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  23.813 ±(99.9%) 1.069 ms/op [Average]
  (min, avg, max) = (23.578, 23.813, 24.244), stdev = 0.278
  CI (99.9%): [22.744, 24.883] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 30.87% complete, ETA 21:00:58
# Fork: 1 of 1
# Warmup Iteration   1: 733.874 ms/op
# Warmup Iteration   2: 683.426 ms/op
# Warmup Iteration   3: 678.008 ms/op
# Warmup Iteration   4: 679.881 ms/op
# Warmup Iteration   5: 671.475 ms/op
Iteration   1: 685.097 ms/op
Iteration   2: 686.321 ms/op
Iteration   3: 677.860 ms/op
Iteration   4: 675.487 ms/op
Iteration   5: 669.964 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  678.946 ±(99.9%) 26.261 ms/op [Average]
  (min, avg, max) = (669.964, 678.946, 686.321), stdev = 6.820
  CI (99.9%): [652.685, 705.207] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 30.97% complete, ETA 20:55:54
# Fork: 1 of 1
# Warmup Iteration   1: 719.505 ms/op
# Warmup Iteration   2: 674.711 ms/op
# Warmup Iteration   3: 669.025 ms/op
# Warmup Iteration   4: 687.408 ms/op
# Warmup Iteration   5: 674.512 ms/op
Iteration   1: 670.316 ms/op
Iteration   2: 678.641 ms/op
Iteration   3: 666.243 ms/op
Iteration   4: 672.835 ms/op
Iteration   5: 670.038 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  671.614 ±(99.9%) 17.633 ms/op [Average]
  (min, avg, max) = (666.243, 671.614, 678.641), stdev = 4.579
  CI (99.9%): [653.981, 689.247] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 31.06% complete, ETA 20:50:52
# Fork: 1 of 1
# Warmup Iteration   1: 112966.075 ms/op
# Warmup Iteration   2: 109705.590 ms/op
# Warmup Iteration   3: 106784.903 ms/op
# Warmup Iteration   4: 108113.612 ms/op
# Warmup Iteration   5: 111879.019 ms/op
Iteration   1: 118965.000 ms/op
Iteration   2: 133513.525 ms/op
Iteration   3: 148439.987 ms/op
Iteration   4: 150105.530 ms/op
Iteration   5: 151320.376 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  140468.884 ±(99.9%) 53941.747 ms/op [Average]
  (min, avg, max) = (118965.000, 140468.884, 151320.376), stdev = 14008.500
  CI (99.9%): [86527.137, 194410.630] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 31.16% complete, ETA 21:31:29
# Fork: 1 of 1
# Warmup Iteration   1: 149927.701 ms/op
# Warmup Iteration   2: 154491.314 ms/op
# Warmup Iteration   3: 148593.522 ms/op
# Warmup Iteration   4: 155372.890 ms/op
# Warmup Iteration   5: 144557.325 ms/op
Iteration   1: 124525.715 ms/op
Iteration   2: 124525.113 ms/op
Iteration   3: 126353.635 ms/op
Iteration   4: 123854.805 ms/op
Iteration   5: 140482.880 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  127948.430 ±(99.9%) 27217.792 ms/op [Average]
  (min, avg, max) = (123854.805, 127948.430, 140482.880), stdev = 7068.374
  CI (99.9%): [100730.638, 155166.222] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 31.25% complete, ETA 22:16:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.035 ms/op
# Warmup Iteration   2: 0.033 ms/op
# Warmup Iteration   3: 0.034 ms/op
# Warmup Iteration   4: 0.032 ms/op
# Warmup Iteration   5: 0.033 ms/op
Iteration   1: 0.036 ms/op
Iteration   2: 0.035 ms/op
Iteration   3: 0.035 ms/op
Iteration   4: 0.039 ms/op
Iteration   5: 0.052 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.039 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.035, 0.039, 0.052), stdev = 0.007
  CI (99.9%): [0.012, 0.067] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 31.34% complete, ETA 22:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.042 ms/op
# Warmup Iteration   2: 0.049 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.034 ms/op
# Warmup Iteration   5: 0.034 ms/op
Iteration   1: 0.062 ms/op
Iteration   2: 0.060 ms/op
Iteration   3: 0.044 ms/op
Iteration   4: 0.044 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.049 ±(99.9%) 0.044 ms/op [Average]
  (min, avg, max) = (0.035, 0.049, 0.062), stdev = 0.012
  CI (99.9%): [0.005, 0.093] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 31.44% complete, ETA 22:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 1.334 ms/op
# Warmup Iteration   2: 1.070 ms/op
# Warmup Iteration   3: 1.064 ms/op
# Warmup Iteration   4: 1.065 ms/op
# Warmup Iteration   5: 1.047 ms/op
Iteration   1: 1.042 ms/op
Iteration   2: 1.057 ms/op
Iteration   3: 1.043 ms/op
Iteration   4: 1.046 ms/op
Iteration   5: 1.054 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.048 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (1.042, 1.048, 1.057), stdev = 0.007
  CI (99.9%): [1.022, 1.075] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 31.53% complete, ETA 22:00:32
# Fork: 1 of 1
# Warmup Iteration   1: 1.390 ms/op
# Warmup Iteration   2: 1.334 ms/op
# Warmup Iteration   3: 1.645 ms/op
# Warmup Iteration   4: 1.681 ms/op
# Warmup Iteration   5: 1.596 ms/op
Iteration   1: 1.426 ms/op
Iteration   2: 1.692 ms/op
Iteration   3: 1.244 ms/op
Iteration   4: 1.152 ms/op
Iteration   5: 1.120 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.327 ±(99.9%) 0.910 ms/op [Average]
  (min, avg, max) = (1.120, 1.327, 1.692), stdev = 0.236
  CI (99.9%): [0.417, 2.236] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 31.63% complete, ETA 21:55:09
# Fork: 1 of 1
# Warmup Iteration   1: 373.096 ms/op
# Warmup Iteration   2: 369.742 ms/op
# Warmup Iteration   3: 455.058 ms/op
# Warmup Iteration   4: 256.898 ms/op
# Warmup Iteration   5: 208.446 ms/op
Iteration   1: 344.148 ms/op
Iteration   2: 279.401 ms/op
Iteration   3: 363.257 ms/op
Iteration   4: 468.229 ms/op
Iteration   5: 408.572 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  372.721 ±(99.9%) 272.429 ms/op [Average]
  (min, avg, max) = (279.401, 372.721, 468.229), stdev = 70.749
  CI (99.9%): [100.292, 645.151] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 31.72% complete, ETA 21:49:57
# Fork: 1 of 1
# Warmup Iteration   1: 633.626 ms/op
# Warmup Iteration   2: 868.998 ms/op
# Warmup Iteration   3: 587.252 ms/op
# Warmup Iteration   4: 1118.722 ms/op
# Warmup Iteration   5: 768.937 ms/op
Iteration   1: 455.812 ms/op
Iteration   2: 417.299 ms/op
Iteration   3: 817.146 ms/op
Iteration   4: 452.991 ms/op
Iteration   5: 568.201 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  542.290 ±(99.9%) 630.650 ms/op [Average]
  (min, avg, max) = (417.299, 542.290, 817.146), stdev = 163.778
  CI (99.9%): [? 0, 1172.940] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 31.82% complete, ETA 21:44:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.211 ms/op
# Warmup Iteration   2: 0.125 ms/op
# Warmup Iteration   3: 0.122 ms/op
# Warmup Iteration   4: 0.117 ms/op
# Warmup Iteration   5: 0.118 ms/op
Iteration   1: 0.118 ms/op
Iteration   2: 0.119 ms/op
Iteration   3: 0.141 ms/op
Iteration   4: 0.171 ms/op
Iteration   5: 0.141 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.138 ±(99.9%) 0.084 ms/op [Average]
  (min, avg, max) = (0.118, 0.138, 0.171), stdev = 0.022
  CI (99.9%): [0.054, 0.222] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 31.91% complete, ETA 21:39:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.221 ms/op
# Warmup Iteration   2: 0.139 ms/op
# Warmup Iteration   3: 0.133 ms/op
# Warmup Iteration   4: 0.106 ms/op
# Warmup Iteration   5: 0.115 ms/op
Iteration   1: 0.158 ms/op
Iteration   2: 0.256 ms/op
Iteration   3: 0.319 ms/op
Iteration   4: 0.175 ms/op
Iteration   5: 0.136 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.209 ±(99.9%) 0.295 ms/op [Average]
  (min, avg, max) = (0.136, 0.209, 0.319), stdev = 0.076
  CI (99.9%): [? 0, 0.503] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 32.01% complete, ETA 21:34:27
# Fork: 1 of 1
# Warmup Iteration   1: 3.150 ms/op
# Warmup Iteration   2: 4.131 ms/op
# Warmup Iteration   3: 3.034 ms/op
# Warmup Iteration   4: 2.818 ms/op
# Warmup Iteration   5: 2.476 ms/op
Iteration   1: 2.653 ms/op
Iteration   2: 2.735 ms/op
Iteration   3: 2.794 ms/op
Iteration   4: 2.735 ms/op
Iteration   5: 2.683 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2.720 ±(99.9%) 0.210 ms/op [Average]
  (min, avg, max) = (2.653, 2.720, 2.794), stdev = 0.054
  CI (99.9%): [2.511, 2.930] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 32.10% complete, ETA 21:29:13
# Fork: 1 of 1
# Warmup Iteration   1: 3.676 ms/op
# Warmup Iteration   2: 2.669 ms/op
# Warmup Iteration   3: 2.630 ms/op
# Warmup Iteration   4: 2.753 ms/op
# Warmup Iteration   5: 2.696 ms/op
Iteration   1: 2.610 ms/op
Iteration   2: 2.542 ms/op
Iteration   3: 2.791 ms/op
Iteration   4: 3.323 ms/op
Iteration   5: 3.262 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2.905 ±(99.9%) 1.406 ms/op [Average]
  (min, avg, max) = (2.542, 2.905, 3.323), stdev = 0.365
  CI (99.9%): [1.499, 4.312] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 32.20% complete, ETA 21:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 612.752 ms/op
# Warmup Iteration   2: 576.273 ms/op
# Warmup Iteration   3: 457.593 ms/op
# Warmup Iteration   4: 473.039 ms/op
# Warmup Iteration   5: 376.563 ms/op
Iteration   1: 444.032 ms/op
Iteration   2: 371.719 ms/op
Iteration   3: 387.165 ms/op
Iteration   4: 401.297 ms/op
Iteration   5: 296.076 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  380.058 ±(99.9%) 208.404 ms/op [Average]
  (min, avg, max) = (296.076, 380.058, 444.032), stdev = 54.122
  CI (99.9%): [171.654, 588.462] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 32.29% complete, ETA 21:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 415.945 ms/op
# Warmup Iteration   2: 360.990 ms/op
# Warmup Iteration   3: 342.274 ms/op
# Warmup Iteration   4: 354.892 ms/op
# Warmup Iteration   5: 385.701 ms/op
Iteration   1: 282.402 ms/op
Iteration   2: 387.286 ms/op
Iteration   3: 315.624 ms/op
Iteration   4: 397.864 ms/op
Iteration   5: 278.427 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  332.320 ±(99.9%) 219.455 ms/op [Average]
  (min, avg, max) = (278.427, 332.320, 397.864), stdev = 56.992
  CI (99.9%): [112.865, 551.775] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 32.39% complete, ETA 21:13:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.159 ms/op
# Warmup Iteration   2: 0.127 ms/op
# Warmup Iteration   3: 0.126 ms/op
# Warmup Iteration   4: 0.124 ms/op
# Warmup Iteration   5: 0.128 ms/op
Iteration   1: 0.127 ms/op
Iteration   2: 0.113 ms/op
Iteration   3: 0.114 ms/op
Iteration   4: 0.109 ms/op
Iteration   5: 0.110 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.114 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.109, 0.114, 0.127), stdev = 0.007
  CI (99.9%): [0.086, 0.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 32.48% complete, ETA 21:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.114 ms/op
# Warmup Iteration   2: 0.109 ms/op
# Warmup Iteration   3: 0.106 ms/op
# Warmup Iteration   4: 0.107 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.107 ms/op
Iteration   2: 0.108 ms/op
Iteration   3: 0.108 ms/op
Iteration   4: 0.106 ms/op
Iteration   5: 0.106 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.107 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.106, 0.107, 0.108), stdev = 0.001
  CI (99.9%): [0.103, 0.110] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 32.58% complete, ETA 21:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 3.628 ms/op
# Warmup Iteration   2: 3.458 ms/op
# Warmup Iteration   3: 3.408 ms/op
# Warmup Iteration   4: 3.389 ms/op
# Warmup Iteration   5: 3.351 ms/op
Iteration   1: 3.399 ms/op
Iteration   2: 3.388 ms/op
Iteration   3: 3.386 ms/op
Iteration   4: 3.380 ms/op
Iteration   5: 3.390 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.389 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (3.380, 3.389, 3.399), stdev = 0.007
  CI (99.9%): [3.361, 3.416] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 32.67% complete, ETA 20:58:41
# Fork: 1 of 1
# Warmup Iteration   1: 3.680 ms/op
# Warmup Iteration   2: 3.636 ms/op
# Warmup Iteration   3: 3.308 ms/op
# Warmup Iteration   4: 3.288 ms/op
# Warmup Iteration   5: 3.371 ms/op
Iteration   1: 3.346 ms/op
Iteration   2: 3.335 ms/op
Iteration   3: 3.313 ms/op
Iteration   4: 3.315 ms/op
Iteration   5: 3.312 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.324 ±(99.9%) 0.059 ms/op [Average]
  (min, avg, max) = (3.312, 3.324, 3.346), stdev = 0.015
  CI (99.9%): [3.265, 3.383] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 32.77% complete, ETA 20:53:39
# Fork: 1 of 1
# Warmup Iteration   1: 584.041 ms/op
# Warmup Iteration   2: 524.998 ms/op
# Warmup Iteration   3: 548.255 ms/op
# Warmup Iteration   4: 482.961 ms/op
# Warmup Iteration   5: 519.425 ms/op
Iteration   1: 519.638 ms/op
Iteration   2: 517.280 ms/op
Iteration   3: 480.325 ms/op
Iteration   4: 486.026 ms/op
Iteration   5: 525.536 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  505.761 ±(99.9%) 80.605 ms/op [Average]
  (min, avg, max) = (480.325, 505.761, 525.536), stdev = 20.933
  CI (99.9%): [425.156, 586.366] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 32.86% complete, ETA 20:48:43
# Fork: 1 of 1
# Warmup Iteration   1: 1119.520 ms/op
# Warmup Iteration   2: 650.247 ms/op
# Warmup Iteration   3: 637.409 ms/op
# Warmup Iteration   4: 744.221 ms/op
# Warmup Iteration   5: 551.990 ms/op
Iteration   1: 512.617 ms/op
Iteration   2: 502.737 ms/op
Iteration   3: 512.855 ms/op
Iteration   4: 520.555 ms/op
Iteration   5: 515.569 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  512.867 ±(99.9%) 25.036 ms/op [Average]
  (min, avg, max) = (502.737, 512.867, 520.555), stdev = 6.502
  CI (99.9%): [487.830, 537.903] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 32.95% complete, ETA 20:43:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.219 ms/op
# Warmup Iteration   2: 0.215 ms/op
# Warmup Iteration   3: 0.207 ms/op
# Warmup Iteration   4: 0.201 ms/op
# Warmup Iteration   5: 0.195 ms/op
Iteration   1: 0.197 ms/op
Iteration   2: 0.195 ms/op
Iteration   3: 0.204 ms/op
Iteration   4: 0.208 ms/op
Iteration   5: 0.216 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.204 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (0.195, 0.204, 0.216), stdev = 0.008
  CI (99.9%): [0.172, 0.236] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 33.05% complete, ETA 20:38:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.227 ms/op
# Warmup Iteration   2: 0.211 ms/op
# Warmup Iteration   3: 0.212 ms/op
# Warmup Iteration   4: 0.212 ms/op
# Warmup Iteration   5: 0.215 ms/op
Iteration   1: 0.212 ms/op
Iteration   2: 0.212 ms/op
Iteration   3: 0.208 ms/op
Iteration   4: 0.213 ms/op
Iteration   5: 0.211 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.211 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.208, 0.211, 0.213), stdev = 0.002
  CI (99.9%): [0.204, 0.219] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 33.14% complete, ETA 20:33:59
# Fork: 1 of 1
# Warmup Iteration   1: 7.362 ms/op
# Warmup Iteration   2: 6.588 ms/op
# Warmup Iteration   3: 6.629 ms/op
# Warmup Iteration   4: 6.599 ms/op
# Warmup Iteration   5: 6.837 ms/op
Iteration   1: 6.730 ms/op
Iteration   2: 6.543 ms/op
Iteration   3: 6.957 ms/op
Iteration   4: 7.366 ms/op
Iteration   5: 7.047 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  6.928 ±(99.9%) 1.209 ms/op [Average]
  (min, avg, max) = (6.543, 6.928, 7.366), stdev = 0.314
  CI (99.9%): [5.719, 8.138] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 33.24% complete, ETA 20:29:04
# Fork: 1 of 1
# Warmup Iteration   1: 7.629 ms/op
# Warmup Iteration   2: 7.391 ms/op
# Warmup Iteration   3: 6.987 ms/op
# Warmup Iteration   4: 6.591 ms/op
# Warmup Iteration   5: 6.652 ms/op
Iteration   1: 6.624 ms/op
Iteration   2: 6.770 ms/op
Iteration   3: 6.662 ms/op
Iteration   4: 6.657 ms/op
Iteration   5: 6.729 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  6.688 ±(99.9%) 0.229 ms/op [Average]
  (min, avg, max) = (6.624, 6.688, 6.770), stdev = 0.060
  CI (99.9%): [6.459, 6.918] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 33.33% complete, ETA 20:24:12
# Fork: 1 of 1
# Warmup Iteration   1: 1206.688 ms/op
# Warmup Iteration   2: 1112.739 ms/op
# Warmup Iteration   3: 1179.163 ms/op
# Warmup Iteration   4: 1196.924 ms/op
# Warmup Iteration   5: 1129.812 ms/op
Iteration   1: 1176.237 ms/op
Iteration   2: 1081.194 ms/op
Iteration   3: 1015.698 ms/op
Iteration   4: 1128.915 ms/op
Iteration   5: 1021.866 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1084.782 ±(99.9%) 265.776 ms/op [Average]
  (min, avg, max) = (1015.698, 1084.782, 1176.237), stdev = 69.021
  CI (99.9%): [819.006, 1350.558] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 33.43% complete, ETA 20:19:31
# Fork: 1 of 1
# Warmup Iteration   1: 1204.198 ms/op
# Warmup Iteration   2: 1032.336 ms/op
# Warmup Iteration   3: 1082.183 ms/op
# Warmup Iteration   4: 982.682 ms/op
# Warmup Iteration   5: 1312.794 ms/op
Iteration   1: 1378.314 ms/op
Iteration   2: 1030.217 ms/op
Iteration   3: 1150.823 ms/op
Iteration   4: 1092.807 ms/op
Iteration   5: 1051.207 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1140.674 ±(99.9%) 541.396 ms/op [Average]
  (min, avg, max) = (1030.217, 1140.674, 1378.314), stdev = 140.599
  CI (99.9%): [599.278, 1682.069] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 33.52% complete, ETA 20:14:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.428 ms/op
# Warmup Iteration   2: 0.402 ms/op
# Warmup Iteration   3: 0.420 ms/op
# Warmup Iteration   4: 0.430 ms/op
# Warmup Iteration   5: 0.446 ms/op
Iteration   1: 0.445 ms/op
Iteration   2: 0.433 ms/op
Iteration   3: 0.431 ms/op
Iteration   4: 0.412 ms/op
Iteration   5: 0.426 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.429 ±(99.9%) 0.046 ms/op [Average]
  (min, avg, max) = (0.412, 0.429, 0.445), stdev = 0.012
  CI (99.9%): [0.383, 0.476] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 33.62% complete, ETA 20:10:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.450 ms/op
# Warmup Iteration   2: 0.444 ms/op
# Warmup Iteration   3: 0.428 ms/op
# Warmup Iteration   4: 0.402 ms/op
# Warmup Iteration   5: 0.409 ms/op
Iteration   1: 0.431 ms/op
Iteration   2: 0.434 ms/op
Iteration   3: 0.409 ms/op
Iteration   4: 0.407 ms/op
Iteration   5: 0.424 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.421 ±(99.9%) 0.047 ms/op [Average]
  (min, avg, max) = (0.407, 0.421, 0.434), stdev = 0.012
  CI (99.9%): [0.374, 0.468] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 33.71% complete, ETA 20:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 13.488 ms/op
# Warmup Iteration   2: 12.726 ms/op
# Warmup Iteration   3: 12.434 ms/op
# Warmup Iteration   4: 12.375 ms/op
# Warmup Iteration   5: 12.295 ms/op
Iteration   1: 12.380 ms/op
Iteration   2: 12.286 ms/op
Iteration   3: 12.260 ms/op
Iteration   4: 12.403 ms/op
Iteration   5: 12.346 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  12.335 ±(99.9%) 0.234 ms/op [Average]
  (min, avg, max) = (12.260, 12.335, 12.403), stdev = 0.061
  CI (99.9%): [12.101, 12.569] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 33.81% complete, ETA 20:00:32
# Fork: 1 of 1
# Warmup Iteration   1: 14.119 ms/op
# Warmup Iteration   2: 12.793 ms/op
# Warmup Iteration   3: 12.476 ms/op
# Warmup Iteration   4: 12.543 ms/op
# Warmup Iteration   5: 12.437 ms/op
Iteration   1: 12.529 ms/op
Iteration   2: 12.435 ms/op
Iteration   3: 12.527 ms/op
Iteration   4: 12.496 ms/op
Iteration   5: 12.482 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  12.494 ±(99.9%) 0.148 ms/op [Average]
  (min, avg, max) = (12.435, 12.494, 12.529), stdev = 0.039
  CI (99.9%): [12.345, 12.642] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 33.90% complete, ETA 19:55:49
# Fork: 1 of 1
# Warmup Iteration   1: 2204.085 ms/op
# Warmup Iteration   2: 1991.008 ms/op
# Warmup Iteration   3: 2002.041 ms/op
# Warmup Iteration   4: 1990.968 ms/op
# Warmup Iteration   5: 1913.855 ms/op
Iteration   1: 1919.235 ms/op
Iteration   2: 1895.155 ms/op
Iteration   3: 1892.871 ms/op
Iteration   4: 2165.845 ms/op
Iteration   5: 2414.146 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2057.450 ±(99.9%) 885.462 ms/op [Average]
  (min, avg, max) = (1892.871, 2057.450, 2414.146), stdev = 229.952
  CI (99.9%): [1171.989, 2942.912] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 34.00% complete, ETA 19:51:29
# Fork: 1 of 1
# Warmup Iteration   1: 2342.590 ms/op
# Warmup Iteration   2: 2210.006 ms/op
# Warmup Iteration   3: 1984.603 ms/op
# Warmup Iteration   4: 2086.934 ms/op
# Warmup Iteration   5: 1997.908 ms/op
Iteration   1: 2046.979 ms/op
Iteration   2: 2017.135 ms/op
Iteration   3: 1958.977 ms/op
Iteration   4: 1965.231 ms/op
Iteration   5: 2413.006 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2080.266 ±(99.9%) 729.982 ms/op [Average]
  (min, avg, max) = (1958.977, 2080.266, 2413.006), stdev = 189.574
  CI (99.9%): [1350.284, 2810.247] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 34.09% complete, ETA 19:47:12
# Fork: 1 of 1
# Warmup Iteration   1: 1.179 ms/op
# Warmup Iteration   2: 0.963 ms/op
# Warmup Iteration   3: 0.990 ms/op
# Warmup Iteration   4: 1.154 ms/op
# Warmup Iteration   5: 0.978 ms/op
Iteration   1: 0.865 ms/op
Iteration   2: 0.860 ms/op
Iteration   3: 0.883 ms/op
Iteration   4: 0.929 ms/op
Iteration   5: 0.951 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.898 ±(99.9%) 0.155 ms/op [Average]
  (min, avg, max) = (0.860, 0.898, 0.951), stdev = 0.040
  CI (99.9%): [0.743, 1.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 34.19% complete, ETA 19:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.903 ms/op
# Warmup Iteration   2: 0.882 ms/op
# Warmup Iteration   3: 0.864 ms/op
# Warmup Iteration   4: 0.842 ms/op
# Warmup Iteration   5: 0.867 ms/op
Iteration   1: 1.035 ms/op
Iteration   2: 0.931 ms/op
Iteration   3: 0.806 ms/op
Iteration   4: 0.869 ms/op
Iteration   5: 0.850 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  0.898 ±(99.9%) 0.341 ms/op [Average]
  (min, avg, max) = (0.806, 0.898, 1.035), stdev = 0.089
  CI (99.9%): [0.557, 1.239] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 34.28% complete, ETA 19:37:56
# Fork: 1 of 1
# Warmup Iteration   1: 29.455 ms/op
# Warmup Iteration   2: 28.592 ms/op
# Warmup Iteration   3: 25.964 ms/op
# Warmup Iteration   4: 26.603 ms/op
# Warmup Iteration   5: 27.109 ms/op
Iteration   1: 26.660 ms/op
Iteration   2: 26.250 ms/op
Iteration   3: 26.691 ms/op
Iteration   4: 28.924 ms/op
Iteration   5: 29.685 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  27.642 ±(99.9%) 5.973 ms/op [Average]
  (min, avg, max) = (26.250, 27.642, 29.685), stdev = 1.551
  CI (99.9%): [21.669, 33.615] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 34.38% complete, ETA 19:33:20
# Fork: 1 of 1
# Warmup Iteration   1: 29.503 ms/op
# Warmup Iteration   2: 31.353 ms/op
# Warmup Iteration   3: 27.817 ms/op
# Warmup Iteration   4: 26.108 ms/op
# Warmup Iteration   5: 26.559 ms/op
Iteration   1: 26.172 ms/op
Iteration   2: 25.456 ms/op
Iteration   3: 25.415 ms/op
Iteration   4: 25.565 ms/op
Iteration   5: 28.752 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  26.272 ±(99.9%) 5.467 ms/op [Average]
  (min, avg, max) = (25.415, 26.272, 28.752), stdev = 1.420
  CI (99.9%): [20.805, 31.739] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 34.47% complete, ETA 19:28:45
# Fork: 1 of 1
# Warmup Iteration   1: 4428.850 ms/op
# Warmup Iteration   2: 3987.353 ms/op
# Warmup Iteration   3: 4693.480 ms/op
# Warmup Iteration   4: 4196.274 ms/op
# Warmup Iteration   5: 6511.083 ms/op
Iteration   1: 6291.492 ms/op
Iteration   2: 6710.537 ms/op
Iteration   3: 6714.330 ms/op
Iteration   4: 7006.788 ms/op
Iteration   5: 5941.089 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  6532.847 ±(99.9%) 1608.029 ms/op [Average]
  (min, avg, max) = (5941.089, 6532.847, 7006.788), stdev = 417.600
  CI (99.9%): [4924.818, 8140.877] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 34.56% complete, ETA 19:25:42
# Fork: 1 of 1
# Warmup Iteration   1: 4886.156 ms/op
# Warmup Iteration   2: 4704.438 ms/op
# Warmup Iteration   3: 4985.305 ms/op
# Warmup Iteration   4: 4859.143 ms/op
# Warmup Iteration   5: 5032.174 ms/op
Iteration   1: 4514.874 ms/op
Iteration   2: 6436.116 ms/op
Iteration   3: 6534.198 ms/op
Iteration   4: 6509.295 ms/op
Iteration   5: 7218.288 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  6242.554 ±(99.9%) 3913.005 ms/op [Average]
  (min, avg, max) = (4514.874, 6242.554, 7218.288), stdev = 1016.195
  CI (99.9%): [2329.549, 10155.560] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 34.66% complete, ETA 19:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 2.227 ms/op
# Warmup Iteration   2: 1.802 ms/op
# Warmup Iteration   3: 2.022 ms/op
# Warmup Iteration   4: 1.752 ms/op
# Warmup Iteration   5: 1.707 ms/op
Iteration   1: 1.699 ms/op
Iteration   2: 1.682 ms/op
Iteration   3: 1.692 ms/op
Iteration   4: 1.870 ms/op
Iteration   5: 2.766 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  1.942 ±(99.9%) 1.798 ms/op [Average]
  (min, avg, max) = (1.682, 1.942, 2.766), stdev = 0.467
  CI (99.9%): [0.143, 3.740] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 34.75% complete, ETA 19:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 2.806 ms/op
# Warmup Iteration   2: 2.052 ms/op
# Warmup Iteration   3: 2.115 ms/op
# Warmup Iteration   4: 2.127 ms/op
# Warmup Iteration   5: 1.984 ms/op
Iteration   1: 1.947 ms/op
Iteration   2: 2.144 ms/op
Iteration   3: 2.238 ms/op
Iteration   4: 1.891 ms/op
Iteration   5: 1.842 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  2.012 ±(99.9%) 0.656 ms/op [Average]
  (min, avg, max) = (1.842, 2.012, 2.238), stdev = 0.170
  CI (99.9%): [1.356, 2.669] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 34.85% complete, ETA 19:13:38
# Fork: 1 of 1
# Warmup Iteration   1: 64.748 ms/op
# Warmup Iteration   2: 56.318 ms/op
# Warmup Iteration   3: 58.835 ms/op
# Warmup Iteration   4: 61.873 ms/op
# Warmup Iteration   5: 59.303 ms/op
Iteration   1: 58.913 ms/op
Iteration   2: 58.758 ms/op
Iteration   3: 58.681 ms/op
Iteration   4: 58.185 ms/op
Iteration   5: 58.243 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  58.556 ±(99.9%) 1.247 ms/op [Average]
  (min, avg, max) = (58.185, 58.556, 58.913), stdev = 0.324
  CI (99.9%): [57.308, 59.803] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 34.94% complete, ETA 19:09:10
# Fork: 1 of 1
# Warmup Iteration   1: 72.495 ms/op
# Warmup Iteration   2: 63.723 ms/op
# Warmup Iteration   3: 64.345 ms/op
# Warmup Iteration   4: 60.334 ms/op
# Warmup Iteration   5: 59.153 ms/op
Iteration   1: 58.911 ms/op
Iteration   2: 62.642 ms/op
Iteration   3: 64.294 ms/op
Iteration   4: 63.530 ms/op
Iteration   5: 63.248 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  62.525 ±(99.9%) 8.109 ms/op [Average]
  (min, avg, max) = (58.911, 62.525, 64.294), stdev = 2.106
  CI (99.9%): [54.416, 70.634] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 35.04% complete, ETA 19:04:44
# Fork: 1 of 1
# Warmup Iteration   1: 12394.833 ms/op
# Warmup Iteration   2: 14257.887 ms/op
# Warmup Iteration   3: 22767.680 ms/op
# Warmup Iteration   4: 28742.557 ms/op
# Warmup Iteration   5: 23673.182 ms/op
Iteration   1: 24704.835 ms/op
Iteration   2: 15873.995 ms/op
Iteration   3: 14274.193 ms/op
Iteration   4: 13032.789 ms/op
Iteration   5: 13493.760 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  16275.914 ±(99.9%) 18614.326 ms/op [Average]
  (min, avg, max) = (13032.789, 16275.914, 24704.835), stdev = 4834.081
  CI (99.9%): [? 0, 34890.241] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 35.13% complete, ETA 19:05:41
# Fork: 1 of 1
# Warmup Iteration   1: 9299.312 ms/op
# Warmup Iteration   2: 9487.483 ms/op
# Warmup Iteration   3: 10073.207 ms/op
# Warmup Iteration   4: 11758.458 ms/op
# Warmup Iteration   5: 15292.104 ms/op
Iteration   1: 23838.614 ms/op
Iteration   2: 25010.817 ms/op
Iteration   3: 15479.198 ms/op
Iteration   4: 11763.144 ms/op
Iteration   5: 11475.310 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  17513.417 ±(99.9%) 25094.380 ms/op [Average]
  (min, avg, max) = (11475.310, 17513.417, 25010.817), stdev = 6516.931
  CI (99.9%): [? 0, 42607.796] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 35.23% complete, ETA 19:05:24
# Fork: 1 of 1
# Warmup Iteration   1: 3.986 ms/op
# Warmup Iteration   2: 3.671 ms/op
# Warmup Iteration   3: 3.611 ms/op
# Warmup Iteration   4: 3.637 ms/op
# Warmup Iteration   5: 3.603 ms/op
Iteration   1: 3.587 ms/op
Iteration   2: 3.589 ms/op
Iteration   3: 3.646 ms/op
Iteration   4: 3.642 ms/op
Iteration   5: 3.591 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.611 ±(99.9%) 0.117 ms/op [Average]
  (min, avg, max) = (3.587, 3.611, 3.646), stdev = 0.030
  CI (99.9%): [3.494, 3.728] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 35.32% complete, ETA 19:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 4.038 ms/op
# Warmup Iteration   2: 3.687 ms/op
# Warmup Iteration   3: 3.688 ms/op
# Warmup Iteration   4: 3.740 ms/op
# Warmup Iteration   5: 3.688 ms/op
Iteration   1: 3.714 ms/op
Iteration   2: 3.757 ms/op
Iteration   3: 3.654 ms/op
Iteration   4: 3.687 ms/op
Iteration   5: 3.687 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  3.700 ±(99.9%) 0.147 ms/op [Average]
  (min, avg, max) = (3.654, 3.700, 3.757), stdev = 0.038
  CI (99.9%): [3.553, 3.847] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 35.42% complete, ETA 18:56:36
# Fork: 1 of 1
# Warmup Iteration   1: 129.922 ms/op
# Warmup Iteration   2: 120.727 ms/op
# Warmup Iteration   3: 120.614 ms/op
# Warmup Iteration   4: 120.717 ms/op
# Warmup Iteration   5: 118.725 ms/op
Iteration   1: 118.116 ms/op
Iteration   2: 118.340 ms/op
Iteration   3: 118.393 ms/op
Iteration   4: 117.468 ms/op
Iteration   5: 118.508 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  118.165 ±(99.9%) 1.597 ms/op [Average]
  (min, avg, max) = (117.468, 118.165, 118.508), stdev = 0.415
  CI (99.9%): [116.568, 119.762] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 35.51% complete, ETA 18:52:14
# Fork: 1 of 1
# Warmup Iteration   1: 127.637 ms/op
# Warmup Iteration   2: 126.311 ms/op
# Warmup Iteration   3: 126.173 ms/op
# Warmup Iteration   4: 123.281 ms/op
# Warmup Iteration   5: 139.806 ms/op
Iteration   1: 169.075 ms/op
Iteration   2: 146.533 ms/op
Iteration   3: 117.683 ms/op
Iteration   4: 103.536 ms/op
Iteration   5: 101.082 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  127.582 ±(99.9%) 113.238 ms/op [Average]
  (min, avg, max) = (101.082, 127.582, 169.075), stdev = 29.407
  CI (99.9%): [14.344, 240.820] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 35.61% complete, ETA 18:47:54
# Fork: 1 of 1
# Warmup Iteration   1: 15629.040 ms/op
# Warmup Iteration   2: 20174.311 ms/op
# Warmup Iteration   3: 22088.816 ms/op
# Warmup Iteration   4: 23118.406 ms/op
# Warmup Iteration   5: 23787.097 ms/op
Iteration   1: 24847.293 ms/op
Iteration   2: 28725.160 ms/op
Iteration   3: 32171.512 ms/op
Iteration   4: 44045.726 ms/op
Iteration   5: 27488.215 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  31455.581 ±(99.9%) 28936.825 ms/op [Average]
  (min, avg, max) = (24847.293, 31455.581, 44045.726), stdev = 7514.802
  CI (99.9%): [2518.756, 60392.406] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 35.70% complete, ETA 18:51:10
# Fork: 1 of 1
# Warmup Iteration   1: 24256.603 ms/op
# Warmup Iteration   2: 32601.264 ms/op
# Warmup Iteration   3: 28063.305 ms/op
# Warmup Iteration   4: 32057.073 ms/op
# Warmup Iteration   5: 43093.397 ms/op
Iteration   1: 33670.767 ms/op
Iteration   2: 29561.007 ms/op
Iteration   3: 28292.149 ms/op
Iteration   4: 27806.335 ms/op
Iteration   5: 31693.042 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  30204.660 ±(99.9%) 9442.546 ms/op [Average]
  (min, avg, max) = (27806.335, 30204.660, 33670.767), stdev = 2452.199
  CI (99.9%): [20762.113, 39647.206] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 35.80% complete, ETA 18:55:52
# Fork: 1 of 1
# Warmup Iteration   1: 22.571 ms/op
# Warmup Iteration   2: 11.566 ms/op
# Warmup Iteration   3: 12.005 ms/op
# Warmup Iteration   4: 9.586 ms/op
# Warmup Iteration   5: 9.101 ms/op
Iteration   1: 9.576 ms/op
Iteration   2: 10.163 ms/op
Iteration   3: 10.210 ms/op
Iteration   4: 10.228 ms/op
Iteration   5: 10.294 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  10.094 ±(99.9%) 1.130 ms/op [Average]
  (min, avg, max) = (9.576, 10.094, 10.294), stdev = 0.293
  CI (99.9%): [8.964, 11.224] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 35.89% complete, ETA 18:51:32
# Fork: 1 of 1
# Warmup Iteration   1: 12.732 ms/op
# Warmup Iteration   2: 10.493 ms/op
# Warmup Iteration   3: 10.389 ms/op
# Warmup Iteration   4: 10.215 ms/op
# Warmup Iteration   5: 10.309 ms/op
Iteration   1: 10.377 ms/op
Iteration   2: 10.308 ms/op
Iteration   3: 10.356 ms/op
Iteration   4: 10.621 ms/op
Iteration   5: 9.725 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  10.277 ±(99.9%) 1.277 ms/op [Average]
  (min, avg, max) = (9.725, 10.277, 10.621), stdev = 0.332
  CI (99.9%): [9.000, 11.554] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 35.98% complete, ETA 18:47:13
# Fork: 1 of 1
# Warmup Iteration   1: 310.400 ms/op
# Warmup Iteration   2: 267.868 ms/op
# Warmup Iteration   3: 264.932 ms/op
# Warmup Iteration   4: 269.275 ms/op
# Warmup Iteration   5: 263.786 ms/op
Iteration   1: 266.500 ms/op
Iteration   2: 268.759 ms/op
Iteration   3: 219.314 ms/op
Iteration   4: 221.662 ms/op
Iteration   5: 219.569 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  239.161 ±(99.9%) 100.180 ms/op [Average]
  (min, avg, max) = (219.314, 239.161, 268.759), stdev = 26.016
  CI (99.9%): [138.981, 339.341] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 36.08% complete, ETA 18:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 240.581 ms/op
# Warmup Iteration   2: 227.522 ms/op
# Warmup Iteration   3: 221.117 ms/op
# Warmup Iteration   4: 221.172 ms/op
# Warmup Iteration   5: 220.316 ms/op
Iteration   1: 222.142 ms/op
Iteration   2: 223.381 ms/op
Iteration   3: 221.850 ms/op
Iteration   4: 221.553 ms/op
Iteration   5: 219.423 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  221.670 ±(99.9%) 5.529 ms/op [Average]
  (min, avg, max) = (219.423, 221.670, 223.381), stdev = 1.436
  CI (99.9%): [216.141, 227.198] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 36.17% complete, ETA 18:38:40
# Fork: 1 of 1
# Warmup Iteration   1: 39038.643 ms/op
# Warmup Iteration   2: 45139.380 ms/op
# Warmup Iteration   3: 45295.678 ms/op
# Warmup Iteration   4: 44734.562 ms/op
# Warmup Iteration   5: 47893.293 ms/op
Iteration   1: 51984.497 ms/op
Iteration   2: 46973.032 ms/op
Iteration   3: 43977.961 ms/op
Iteration   4: 50625.476 ms/op
Iteration   5: 50209.106 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  48754.014 ±(99.9%) 12483.194 ms/op [Average]
  (min, avg, max) = (43977.961, 48754.014, 51984.497), stdev = 3241.846
  CI (99.9%): [36270.820, 61237.209] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 36.27% complete, ETA 18:47:47
# Fork: 1 of 1
# Warmup Iteration   1: 35315.455 ms/op
# Warmup Iteration   2: 47286.213 ms/op
# Warmup Iteration   3: 47790.009 ms/op
# Warmup Iteration   4: 47415.918 ms/op
# Warmup Iteration   5: 48886.735 ms/op
Iteration   1: 49510.148 ms/op
Iteration   2: 47911.264 ms/op
Iteration   3: 46415.345 ms/op
Iteration   4: 47096.385 ms/op
Iteration   5: 50405.552 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  48267.739 ±(99.9%) 6398.424 ms/op [Average]
  (min, avg, max) = (46415.345, 48267.739, 50405.552), stdev = 1661.650
  CI (99.9%): [41869.315, 54666.163] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 36.36% complete, ETA 18:56:53
# Fork: 1 of 1
# Warmup Iteration   1: 14.760 ms/op
# Warmup Iteration   2: 13.880 ms/op
# Warmup Iteration   3: 13.750 ms/op
# Warmup Iteration   4: 13.269 ms/op
# Warmup Iteration   5: 13.583 ms/op
Iteration   1: 14.181 ms/op
Iteration   2: 14.901 ms/op
Iteration   3: 13.536 ms/op
Iteration   4: 13.526 ms/op
Iteration   5: 13.400 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  13.909 ±(99.9%) 2.438 ms/op [Average]
  (min, avg, max) = (13.400, 13.909, 14.901), stdev = 0.633
  CI (99.9%): [11.471, 16.347] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 36.46% complete, ETA 18:52:33
# Fork: 1 of 1
# Warmup Iteration   1: 15.936 ms/op
# Warmup Iteration   2: 15.340 ms/op
# Warmup Iteration   3: 14.152 ms/op
# Warmup Iteration   4: 14.646 ms/op
# Warmup Iteration   5: 13.365 ms/op
Iteration   1: 13.860 ms/op
Iteration   2: 13.576 ms/op
Iteration   3: 13.604 ms/op
Iteration   4: 13.872 ms/op
Iteration   5: 13.444 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  13.671 ±(99.9%) 0.724 ms/op [Average]
  (min, avg, max) = (13.444, 13.671, 13.872), stdev = 0.188
  CI (99.9%): [12.947, 14.395] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 36.55% complete, ETA 18:48:14
# Fork: 1 of 1
# Warmup Iteration   1: 538.051 ms/op
# Warmup Iteration   2: 435.615 ms/op
# Warmup Iteration   3: 448.351 ms/op
# Warmup Iteration   4: 451.334 ms/op
# Warmup Iteration   5: 438.426 ms/op
Iteration   1: 433.636 ms/op
Iteration   2: 422.370 ms/op
Iteration   3: 436.240 ms/op
Iteration   4: 440.543 ms/op
Iteration   5: 551.695 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  456.897 ±(99.9%) 205.695 ms/op [Average]
  (min, avg, max) = (422.370, 456.897, 551.695), stdev = 53.418
  CI (99.9%): [251.202, 662.591] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 36.65% complete, ETA 18:44:02
# Fork: 1 of 1
# Warmup Iteration   1: 473.554 ms/op
# Warmup Iteration   2: 424.771 ms/op
# Warmup Iteration   3: 473.406 ms/op
# Warmup Iteration   4: 418.965 ms/op
# Warmup Iteration   5: 514.224 ms/op
Iteration   1: 581.269 ms/op
Iteration   2: 584.948 ms/op
Iteration   3: 446.943 ms/op
Iteration   4: 420.412 ms/op
Iteration   5: 431.791 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  493.073 ±(99.9%) 318.596 ms/op [Average]
  (min, avg, max) = (420.412, 493.073, 584.948), stdev = 82.738
  CI (99.9%): [174.476, 811.669] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 36.74% complete, ETA 18:39:52
# Fork: 1 of 1
# Warmup Iteration   1: 89812.119 ms/op
# Warmup Iteration   2: 100599.695 ms/op
# Warmup Iteration   3: 103183.888 ms/op
# Warmup Iteration   4: 118812.844 ms/op
# Warmup Iteration   5: 95522.869 ms/op
Iteration   1: 98358.217 ms/op
Iteration   2: 132169.406 ms/op
Iteration   3: 158376.710 ms/op
Iteration   4: 116953.294 ms/op
Iteration   5: 85553.284 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  118282.182 ±(99.9%) 110103.123 ms/op [Average]
  (min, avg, max) = (85553.284, 118282.182, 158376.710), stdev = 28593.431
  CI (99.9%): [8179.059, 228385.305] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 36.84% complete, ETA 19:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 85179.934 ms/op
# Warmup Iteration   2: 114916.263 ms/op
# Warmup Iteration   3: 85799.105 ms/op
# Warmup Iteration   4: 118057.302 ms/op
# Warmup Iteration   5: 142006.818 ms/op
Iteration   1: 117431.375 ms/op
Iteration   2: 121704.013 ms/op
Iteration   3: 115585.910 ms/op
Iteration   4: 94534.703 ms/op
Iteration   5: 122845.247 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  114420.250 ±(99.9%) 44319.823 ms/op [Average]
  (min, avg, max) = (94534.703, 114420.250, 122845.247), stdev = 11509.717
  CI (99.9%): [70100.426, 158740.073] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 36.93% complete, ETA 19:34:00
# Fork: 1 of 1
# Warmup Iteration   1: 36.446 ms/op
# Warmup Iteration   2: 29.561 ms/op
# Warmup Iteration   3: 28.840 ms/op
# Warmup Iteration   4: 29.648 ms/op
# Warmup Iteration   5: 30.612 ms/op
Iteration   1: 29.113 ms/op
Iteration   2: 29.120 ms/op
Iteration   3: 30.249 ms/op
Iteration   4: 28.825 ms/op
Iteration   5: 28.352 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  29.131 ±(99.9%) 2.689 ms/op [Average]
  (min, avg, max) = (28.352, 29.131, 30.249), stdev = 0.698
  CI (99.9%): [26.442, 31.821] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 37.03% complete, ETA 19:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 34.728 ms/op
# Warmup Iteration   2: 30.455 ms/op
# Warmup Iteration   3: 29.826 ms/op
# Warmup Iteration   4: 30.295 ms/op
# Warmup Iteration   5: 31.461 ms/op
Iteration   1: 31.849 ms/op
Iteration   2: 32.564 ms/op
Iteration   3: 31.188 ms/op
Iteration   4: 32.401 ms/op
Iteration   5: 31.434 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  31.887 ±(99.9%) 2.293 ms/op [Average]
  (min, avg, max) = (31.188, 31.887, 32.564), stdev = 0.595
  CI (99.9%): [29.595, 34.180] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 37.12% complete, ETA 19:25:06
# Fork: 1 of 1
# Warmup Iteration   1: 1132.389 ms/op
# Warmup Iteration   2: 950.095 ms/op
# Warmup Iteration   3: 1037.435 ms/op
# Warmup Iteration   4: 999.065 ms/op
# Warmup Iteration   5: 1049.725 ms/op
Iteration   1: 934.132 ms/op
Iteration   2: 904.253 ms/op
Iteration   3: 925.694 ms/op
Iteration   4: 874.808 ms/op
Iteration   5: 847.477 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  897.273 ±(99.9%) 138.829 ms/op [Average]
  (min, avg, max) = (847.477, 897.273, 934.132), stdev = 36.053
  CI (99.9%): [758.444, 1036.101] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 37.22% complete, ETA 19:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 915.937 ms/op
# Warmup Iteration   2: 851.603 ms/op
# Warmup Iteration   3: 900.407 ms/op
# Warmup Iteration   4: 898.185 ms/op
# Warmup Iteration   5: 923.176 ms/op
Iteration   1: 929.284 ms/op
Iteration   2: 1050.009 ms/op
Iteration   3: 1066.473 ms/op
Iteration   4: 857.996 ms/op
Iteration   5: 865.973 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  953.947 ±(99.9%) 382.380 ms/op [Average]
  (min, avg, max) = (857.996, 953.947, 1066.473), stdev = 99.303
  CI (99.9%): [571.567, 1336.327] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 37.31% complete, ETA 19:16:40
# Fork: 1 of 1
# Warmup Iteration   1: 233445.189 ms/op
# Warmup Iteration   2: 243023.608 ms/op
# Warmup Iteration   3: 180824.849 ms/op
# Warmup Iteration   4: 185200.726 ms/op
# Warmup Iteration   5: 189757.203 ms/op
Iteration   1: 241482.693 ms/op
Iteration   2: 257262.814 ms/op
Iteration   3: 225717.151 ms/op
Iteration   4: 178614.792 ms/op
Iteration   5: 140144.170 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  208644.324 ±(99.9%) 185947.046 ms/op [Average]
  (min, avg, max) = (140144.170, 208644.324, 257262.814), stdev = 48289.857
  CI (99.9%): [22697.278, 394591.370] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 37.41% complete, ETA 20:09:55
# Fork: 1 of 1
# Warmup Iteration   1: 135063.875 ms/op
# Warmup Iteration   2: 140350.620 ms/op
# Warmup Iteration   3: 141296.389 ms/op
# Warmup Iteration   4: 138905.420 ms/op
# Warmup Iteration   5: 139671.799 ms/op
Iteration   1: 139967.751 ms/op
Iteration   2: 141405.050 ms/op
Iteration   3: 139522.346 ms/op
Iteration   4: 139823.430 ms/op
Iteration   5: 139825.102 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark":
  140108.735 ±(99.9%) 2859.611 ms/op [Average]
  (min, avg, max) = (139522.346, 140108.735, 141405.050), stdev = 742.632
  CI (99.9%): [137249.125, 142968.346] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 37.50% complete, ETA 20:43:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.020 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.020, 0.020, 0.021), stdev = 0.001
  CI (99.9%): [0.019, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 37.59% complete, ETA 20:39:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.020 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.020, 0.020, 0.020), stdev = 0.001
  CI (99.9%): [0.019, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 37.69% complete, ETA 20:34:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.700 ms/op
# Warmup Iteration   2: 0.635 ms/op
# Warmup Iteration   3: 0.641 ms/op
# Warmup Iteration   4: 0.646 ms/op
# Warmup Iteration   5: 0.638 ms/op
Iteration   1: 0.639 ms/op
Iteration   2: 0.648 ms/op
Iteration   3: 0.643 ms/op
Iteration   4: 0.643 ms/op
Iteration   5: 0.637 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.642 ±(99.9%) 0.018 ms/op [Average]
  (min, avg, max) = (0.637, 0.642, 0.648), stdev = 0.005
  CI (99.9%): [0.624, 0.659] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 37.78% complete, ETA 20:29:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.696 ms/op
# Warmup Iteration   2: 0.636 ms/op
# Warmup Iteration   3: 0.636 ms/op
# Warmup Iteration   4: 0.644 ms/op
# Warmup Iteration   5: 0.650 ms/op
Iteration   1: 0.641 ms/op
Iteration   2: 0.644 ms/op
Iteration   3: 0.644 ms/op
Iteration   4: 0.646 ms/op
Iteration   5: 0.643 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.644 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.641, 0.644, 0.646), stdev = 0.002
  CI (99.9%): [0.637, 0.651] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 37.88% complete, ETA 20:25:05
# Fork: 1 of 1
# Warmup Iteration   1: 109.666 ms/op
# Warmup Iteration   2: 101.799 ms/op
# Warmup Iteration   3: 103.953 ms/op
# Warmup Iteration   4: 102.069 ms/op
# Warmup Iteration   5: 101.186 ms/op
Iteration   1: 101.140 ms/op
Iteration   2: 100.734 ms/op
Iteration   3: 97.901 ms/op
Iteration   4: 103.085 ms/op
Iteration   5: 100.979 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  100.768 ±(99.9%) 7.146 ms/op [Average]
  (min, avg, max) = (97.901, 100.768, 103.085), stdev = 1.856
  CI (99.9%): [93.622, 107.914] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 37.97% complete, ETA 20:20:29
# Fork: 1 of 1
# Warmup Iteration   1: 109.783 ms/op
# Warmup Iteration   2: 116.086 ms/op
# Warmup Iteration   3: 108.491 ms/op
# Warmup Iteration   4: 112.236 ms/op
# Warmup Iteration   5: 107.118 ms/op
Iteration   1: 105.864 ms/op
Iteration   2: 105.963 ms/op
Iteration   3: 105.950 ms/op
Iteration   4: 109.347 ms/op
Iteration   5: 110.958 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  107.616 ±(99.9%) 9.182 ms/op [Average]
  (min, avg, max) = (105.864, 107.616, 110.958), stdev = 2.384
  CI (99.9%): [98.434, 116.798] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 38.07% complete, ETA 20:15:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.050 ms/op
# Warmup Iteration   2: 0.047 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.046 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.045 ms/op
Iteration   5: 0.045 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.045 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.045, 0.045, 0.045), stdev = 0.001
  CI (99.9%): [0.044, 0.046] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 38.16% complete, ETA 20:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.044 ms/op
# Warmup Iteration   4: 0.045 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.045 ms/op
Iteration   5: 0.045 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.045 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.045, 0.045, 0.045), stdev = 0.001
  CI (99.9%): [0.044, 0.046] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 38.26% complete, ETA 20:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 1.436 ms/op
# Warmup Iteration   2: 1.301 ms/op
# Warmup Iteration   3: 1.291 ms/op
# Warmup Iteration   4: 1.278 ms/op
# Warmup Iteration   5: 1.299 ms/op
Iteration   1: 1.304 ms/op
Iteration   2: 1.287 ms/op
Iteration   3: 1.284 ms/op
Iteration   4: 1.289 ms/op
Iteration   5: 1.282 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.289 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (1.282, 1.289, 1.304), stdev = 0.009
  CI (99.9%): [1.255, 1.324] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 38.35% complete, ETA 20:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 1.409 ms/op
# Warmup Iteration   2: 1.295 ms/op
# Warmup Iteration   3: 1.273 ms/op
# Warmup Iteration   4: 1.287 ms/op
# Warmup Iteration   5: 1.278 ms/op
Iteration   1: 1.279 ms/op
Iteration   2: 1.278 ms/op
Iteration   3: 1.291 ms/op
Iteration   4: 1.300 ms/op
Iteration   5: 1.275 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.285 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (1.275, 1.285, 1.300), stdev = 0.011
  CI (99.9%): [1.244, 1.325] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 38.45% complete, ETA 19:57:39
# Fork: 1 of 1
# Warmup Iteration   1: 221.356 ms/op
# Warmup Iteration   2: 208.043 ms/op
# Warmup Iteration   3: 206.432 ms/op
# Warmup Iteration   4: 199.611 ms/op
# Warmup Iteration   5: 204.070 ms/op
Iteration   1: 194.724 ms/op
Iteration   2: 201.759 ms/op
Iteration   3: 206.551 ms/op
Iteration   4: 199.322 ms/op
Iteration   5: 195.666 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  199.604 ±(99.9%) 18.497 ms/op [Average]
  (min, avg, max) = (194.724, 199.604, 206.551), stdev = 4.804
  CI (99.9%): [181.107, 218.102] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 38.54% complete, ETA 19:53:11
# Fork: 1 of 1
# Warmup Iteration   1: 223.498 ms/op
# Warmup Iteration   2: 207.729 ms/op
# Warmup Iteration   3: 208.686 ms/op
# Warmup Iteration   4: 206.254 ms/op
# Warmup Iteration   5: 201.892 ms/op
Iteration   1: 192.622 ms/op
Iteration   2: 196.848 ms/op
Iteration   3: 193.148 ms/op
Iteration   4: 197.628 ms/op
Iteration   5: 191.510 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  194.351 ±(99.9%) 10.454 ms/op [Average]
  (min, avg, max) = (191.510, 194.351, 197.628), stdev = 2.715
  CI (99.9%): [183.897, 204.806] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 38.64% complete, ETA 19:48:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.095 ms/op
# Warmup Iteration   2: 0.092 ms/op
# Warmup Iteration   3: 0.091 ms/op
# Warmup Iteration   4: 0.091 ms/op
# Warmup Iteration   5: 0.091 ms/op
Iteration   1: 0.091 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.092 ms/op
Iteration   4: 0.089 ms/op
Iteration   5: 0.093 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.091 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.088, 0.091, 0.093), stdev = 0.002
  CI (99.9%): [0.082, 0.099] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 38.73% complete, ETA 19:44:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.100 ms/op
# Warmup Iteration   2: 0.090 ms/op
# Warmup Iteration   3: 0.089 ms/op
# Warmup Iteration   4: 0.089 ms/op
# Warmup Iteration   5: 0.089 ms/op
Iteration   1: 0.090 ms/op
Iteration   2: 0.090 ms/op
Iteration   3: 0.090 ms/op
Iteration   4: 0.090 ms/op
Iteration   5: 0.090 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.090 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.090, 0.090, 0.090), stdev = 0.001
  CI (99.9%): [0.088, 0.092] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 38.83% complete, ETA 19:39:50
# Fork: 1 of 1
# Warmup Iteration   1: 2.859 ms/op
# Warmup Iteration   2: 2.611 ms/op
# Warmup Iteration   3: 2.606 ms/op
# Warmup Iteration   4: 2.561 ms/op
# Warmup Iteration   5: 2.555 ms/op
Iteration   1: 2.586 ms/op
Iteration   2: 2.546 ms/op
Iteration   3: 2.549 ms/op
Iteration   4: 2.553 ms/op
Iteration   5: 2.582 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  2.563 ±(99.9%) 0.074 ms/op [Average]
  (min, avg, max) = (2.546, 2.563, 2.586), stdev = 0.019
  CI (99.9%): [2.489, 2.637] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 38.92% complete, ETA 19:35:25
# Fork: 1 of 1
# Warmup Iteration   1: 2.872 ms/op
# Warmup Iteration   2: 2.578 ms/op
# Warmup Iteration   3: 2.557 ms/op
# Warmup Iteration   4: 2.597 ms/op
# Warmup Iteration   5: 2.544 ms/op
Iteration   1: 2.597 ms/op
Iteration   2: 2.578 ms/op
Iteration   3: 2.564 ms/op
Iteration   4: 2.565 ms/op
Iteration   5: 2.580 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  2.577 ±(99.9%) 0.051 ms/op [Average]
  (min, avg, max) = (2.564, 2.577, 2.597), stdev = 0.013
  CI (99.9%): [2.526, 2.628] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 39.02% complete, ETA 19:31:01
# Fork: 1 of 1
# Warmup Iteration   1: 443.798 ms/op
# Warmup Iteration   2: 433.853 ms/op
# Warmup Iteration   3: 411.576 ms/op
# Warmup Iteration   4: 410.058 ms/op
# Warmup Iteration   5: 408.491 ms/op
Iteration   1: 410.433 ms/op
Iteration   2: 404.035 ms/op
Iteration   3: 386.344 ms/op
Iteration   4: 392.403 ms/op
Iteration   5: 387.215 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  396.086 ±(99.9%) 41.122 ms/op [Average]
  (min, avg, max) = (386.344, 396.086, 410.433), stdev = 10.679
  CI (99.9%): [354.964, 437.208] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 39.11% complete, ETA 19:26:42
# Fork: 1 of 1
# Warmup Iteration   1: 434.463 ms/op
# Warmup Iteration   2: 410.986 ms/op
# Warmup Iteration   3: 395.670 ms/op
# Warmup Iteration   4: 397.009 ms/op
# Warmup Iteration   5: 413.050 ms/op
Iteration   1: 403.616 ms/op
Iteration   2: 378.695 ms/op
Iteration   3: 387.263 ms/op
Iteration   4: 373.093 ms/op
Iteration   5: 370.045 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  382.542 ±(99.9%) 51.899 ms/op [Average]
  (min, avg, max) = (370.045, 382.542, 403.616), stdev = 13.478
  CI (99.9%): [330.643, 434.442] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 39.20% complete, ETA 19:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.189 ms/op
# Warmup Iteration   2: 0.177 ms/op
# Warmup Iteration   3: 0.178 ms/op
# Warmup Iteration   4: 0.178 ms/op
# Warmup Iteration   5: 0.177 ms/op
Iteration   1: 0.174 ms/op
Iteration   2: 0.173 ms/op
Iteration   3: 0.175 ms/op
Iteration   4: 0.176 ms/op
Iteration   5: 0.175 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.175 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.173, 0.175, 0.176), stdev = 0.001
  CI (99.9%): [0.169, 0.180] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 39.30% complete, ETA 19:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.195 ms/op
# Warmup Iteration   2: 0.176 ms/op
# Warmup Iteration   3: 0.177 ms/op
# Warmup Iteration   4: 0.179 ms/op
# Warmup Iteration   5: 0.178 ms/op
Iteration   1: 0.180 ms/op
Iteration   2: 0.180 ms/op
Iteration   3: 0.180 ms/op
Iteration   4: 0.177 ms/op
Iteration   5: 0.177 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.179 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.177, 0.179, 0.180), stdev = 0.001
  CI (99.9%): [0.173, 0.184] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 39.39% complete, ETA 19:13:44
# Fork: 1 of 1
# Warmup Iteration   1: 5.688 ms/op
# Warmup Iteration   2: 5.156 ms/op
# Warmup Iteration   3: 5.169 ms/op
# Warmup Iteration   4: 5.152 ms/op
# Warmup Iteration   5: 5.184 ms/op
Iteration   1: 5.163 ms/op
Iteration   2: 5.211 ms/op
Iteration   3: 5.134 ms/op
Iteration   4: 5.111 ms/op
Iteration   5: 5.182 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  5.160 ±(99.9%) 0.152 ms/op [Average]
  (min, avg, max) = (5.111, 5.160, 5.211), stdev = 0.039
  CI (99.9%): [5.008, 5.312] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 39.49% complete, ETA 19:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 5.628 ms/op
# Warmup Iteration   2: 5.093 ms/op
# Warmup Iteration   3: 5.197 ms/op
# Warmup Iteration   4: 5.143 ms/op
# Warmup Iteration   5: 5.135 ms/op
Iteration   1: 5.128 ms/op
Iteration   2: 5.133 ms/op
Iteration   3: 5.090 ms/op
Iteration   4: 5.118 ms/op
Iteration   5: 5.124 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  5.119 ±(99.9%) 0.064 ms/op [Average]
  (min, avg, max) = (5.090, 5.119, 5.133), stdev = 0.017
  CI (99.9%): [5.054, 5.183] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 39.58% complete, ETA 19:05:10
# Fork: 1 of 1
# Warmup Iteration   1: 864.593 ms/op
# Warmup Iteration   2: 818.767 ms/op
# Warmup Iteration   3: 827.882 ms/op
# Warmup Iteration   4: 786.577 ms/op
# Warmup Iteration   5: 795.437 ms/op
Iteration   1: 784.721 ms/op
Iteration   2: 808.986 ms/op
Iteration   3: 788.100 ms/op
Iteration   4: 775.805 ms/op
Iteration   5: 786.883 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  788.899 ±(99.9%) 47.047 ms/op [Average]
  (min, avg, max) = (775.805, 788.899, 808.986), stdev = 12.218
  CI (99.9%): [741.852, 835.946] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 39.68% complete, ETA 19:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 845.401 ms/op
# Warmup Iteration   2: 795.585 ms/op
# Warmup Iteration   3: 767.253 ms/op
# Warmup Iteration   4: 799.342 ms/op
# Warmup Iteration   5: 802.895 ms/op
Iteration   1: 813.208 ms/op
Iteration   2: 802.821 ms/op
Iteration   3: 776.178 ms/op
Iteration   4: 786.029 ms/op
Iteration   5: 793.632 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  794.373 ±(99.9%) 55.380 ms/op [Average]
  (min, avg, max) = (776.178, 794.373, 813.208), stdev = 14.382
  CI (99.9%): [738.993, 849.753] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 39.77% complete, ETA 18:56:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.380 ms/op
# Warmup Iteration   2: 0.351 ms/op
# Warmup Iteration   3: 0.354 ms/op
# Warmup Iteration   4: 0.351 ms/op
# Warmup Iteration   5: 0.351 ms/op
Iteration   1: 0.353 ms/op
Iteration   2: 0.357 ms/op
Iteration   3: 0.349 ms/op
Iteration   4: 0.348 ms/op
Iteration   5: 0.351 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.352 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.348, 0.352, 0.357), stdev = 0.004
  CI (99.9%): [0.338, 0.365] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 39.87% complete, ETA 18:52:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.381 ms/op
# Warmup Iteration   2: 0.354 ms/op
# Warmup Iteration   3: 0.352 ms/op
# Warmup Iteration   4: 0.353 ms/op
# Warmup Iteration   5: 0.353 ms/op
Iteration   1: 0.354 ms/op
Iteration   2: 0.353 ms/op
Iteration   3: 0.352 ms/op
Iteration   4: 0.361 ms/op
Iteration   5: 0.355 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.355 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.352, 0.355, 0.361), stdev = 0.004
  CI (99.9%): [0.341, 0.369] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 39.96% complete, ETA 18:48:33
# Fork: 1 of 1
# Warmup Iteration   1: 11.280 ms/op
# Warmup Iteration   2: 10.343 ms/op
# Warmup Iteration   3: 10.254 ms/op
# Warmup Iteration   4: 10.137 ms/op
# Warmup Iteration   5: 10.165 ms/op
Iteration   1: 10.115 ms/op
Iteration   2: 10.159 ms/op
Iteration   3: 10.218 ms/op
Iteration   4: 10.311 ms/op
Iteration   5: 10.165 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  10.194 ±(99.9%) 0.289 ms/op [Average]
  (min, avg, max) = (10.115, 10.194, 10.311), stdev = 0.075
  CI (99.9%): [9.905, 10.483] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 40.06% complete, ETA 18:44:22
# Fork: 1 of 1
# Warmup Iteration   1: 11.276 ms/op
# Warmup Iteration   2: 10.252 ms/op
# Warmup Iteration   3: 10.272 ms/op
# Warmup Iteration   4: 10.275 ms/op
# Warmup Iteration   5: 10.248 ms/op
Iteration   1: 10.124 ms/op
Iteration   2: 10.176 ms/op
Iteration   3: 10.151 ms/op
Iteration   4: 10.249 ms/op
Iteration   5: 10.159 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  10.172 ±(99.9%) 0.181 ms/op [Average]
  (min, avg, max) = (10.124, 10.172, 10.249), stdev = 0.047
  CI (99.9%): [9.990, 10.353] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 40.15% complete, ETA 18:40:12
# Fork: 1 of 1
# Warmup Iteration   1: 1737.410 ms/op
# Warmup Iteration   2: 1627.931 ms/op
# Warmup Iteration   3: 1655.056 ms/op
# Warmup Iteration   4: 1585.622 ms/op
# Warmup Iteration   5: 1581.991 ms/op
Iteration   1: 1589.302 ms/op
Iteration   2: 1553.060 ms/op
Iteration   3: 1630.499 ms/op
Iteration   4: 1604.780 ms/op
Iteration   5: 1571.734 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1589.875 ±(99.9%) 114.831 ms/op [Average]
  (min, avg, max) = (1553.060, 1589.875, 1630.499), stdev = 29.821
  CI (99.9%): [1475.044, 1704.706] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 40.25% complete, ETA 18:36:13
# Fork: 1 of 1
# Warmup Iteration   1: 1720.449 ms/op
# Warmup Iteration   2: 1558.880 ms/op
# Warmup Iteration   3: 1620.561 ms/op
# Warmup Iteration   4: 1621.783 ms/op
# Warmup Iteration   5: 1587.060 ms/op
Iteration   1: 1582.297 ms/op
Iteration   2: 1618.563 ms/op
Iteration   3: 1572.185 ms/op
Iteration   4: 1538.783 ms/op
Iteration   5: 1580.890 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1578.544 ±(99.9%) 109.632 ms/op [Average]
  (min, avg, max) = (1538.783, 1578.544, 1618.563), stdev = 28.471
  CI (99.9%): [1468.911, 1688.176] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 40.34% complete, ETA 18:32:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.761 ms/op
# Warmup Iteration   2: 0.697 ms/op
# Warmup Iteration   3: 0.696 ms/op
# Warmup Iteration   4: 0.697 ms/op
# Warmup Iteration   5: 0.695 ms/op
Iteration   1: 0.695 ms/op
Iteration   2: 0.704 ms/op
Iteration   3: 0.700 ms/op
Iteration   4: 0.710 ms/op
Iteration   5: 0.705 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.703 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (0.695, 0.703, 0.710), stdev = 0.005
  CI (99.9%): [0.682, 0.724] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 40.44% complete, ETA 18:28:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.772 ms/op
# Warmup Iteration   2: 0.712 ms/op
# Warmup Iteration   3: 0.717 ms/op
# Warmup Iteration   4: 0.723 ms/op
# Warmup Iteration   5: 0.716 ms/op
Iteration   1: 0.716 ms/op
Iteration   2: 0.718 ms/op
Iteration   3: 0.716 ms/op
Iteration   4: 0.714 ms/op
Iteration   5: 0.713 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.715 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.713, 0.715, 0.718), stdev = 0.002
  CI (99.9%): [0.708, 0.723] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 40.53% complete, ETA 18:24:02
# Fork: 1 of 1
# Warmup Iteration   1: 22.701 ms/op
# Warmup Iteration   2: 20.604 ms/op
# Warmup Iteration   3: 20.717 ms/op
# Warmup Iteration   4: 21.015 ms/op
# Warmup Iteration   5: 20.977 ms/op
Iteration   1: 20.537 ms/op
Iteration   2: 20.671 ms/op
Iteration   3: 20.696 ms/op
Iteration   4: 20.515 ms/op
Iteration   5: 20.450 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  20.574 ±(99.9%) 0.406 ms/op [Average]
  (min, avg, max) = (20.450, 20.574, 20.696), stdev = 0.105
  CI (99.9%): [20.168, 20.980] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 40.63% complete, ETA 18:19:58
# Fork: 1 of 1
# Warmup Iteration   1: 22.552 ms/op
# Warmup Iteration   2: 20.631 ms/op
# Warmup Iteration   3: 20.784 ms/op
# Warmup Iteration   4: 20.446 ms/op
# Warmup Iteration   5: 20.541 ms/op
Iteration   1: 20.712 ms/op
Iteration   2: 20.598 ms/op
Iteration   3: 20.693 ms/op
Iteration   4: 20.540 ms/op
Iteration   5: 20.510 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  20.611 ±(99.9%) 0.347 ms/op [Average]
  (min, avg, max) = (20.510, 20.611, 20.712), stdev = 0.090
  CI (99.9%): [20.264, 20.957] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 40.72% complete, ETA 18:15:55
# Fork: 1 of 1
# Warmup Iteration   1: 3325.165 ms/op
# Warmup Iteration   2: 3130.645 ms/op
# Warmup Iteration   3: 3144.699 ms/op
# Warmup Iteration   4: 3115.803 ms/op
# Warmup Iteration   5: 3080.231 ms/op
Iteration   1: 3143.839 ms/op
Iteration   2: 3145.794 ms/op
Iteration   3: 3042.611 ms/op
Iteration   4: 3135.530 ms/op
Iteration   5: 3114.913 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  3116.537 ±(99.9%) 165.955 ms/op [Average]
  (min, avg, max) = (3042.611, 3116.537, 3145.794), stdev = 43.098
  CI (99.9%): [2950.582, 3282.492] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 40.81% complete, ETA 18:12:23
# Fork: 1 of 1
# Warmup Iteration   1: 3398.486 ms/op
# Warmup Iteration   2: 3147.724 ms/op
# Warmup Iteration   3: 3047.751 ms/op
# Warmup Iteration   4: 3021.933 ms/op
# Warmup Iteration   5: 3031.353 ms/op
Iteration   1: 3066.823 ms/op
Iteration   2: 3138.920 ms/op
Iteration   3: 3021.727 ms/op
Iteration   4: 3047.879 ms/op
Iteration   5: 2991.064 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  3053.282 ±(99.9%) 214.509 ms/op [Average]
  (min, avg, max) = (2991.064, 3053.282, 3138.920), stdev = 55.707
  CI (99.9%): [2838.774, 3267.791] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 40.91% complete, ETA 18:08:53
# Fork: 1 of 1
# Warmup Iteration   1: 1.552 ms/op
# Warmup Iteration   2: 1.423 ms/op
# Warmup Iteration   3: 1.458 ms/op
# Warmup Iteration   4: 1.496 ms/op
# Warmup Iteration   5: 1.462 ms/op
Iteration   1: 1.442 ms/op
Iteration   2: 1.431 ms/op
Iteration   3: 1.430 ms/op
Iteration   4: 1.437 ms/op
Iteration   5: 1.432 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.434 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (1.430, 1.434, 1.442), stdev = 0.005
  CI (99.9%): [1.415, 1.453] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 41.00% complete, ETA 18:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 1.536 ms/op
# Warmup Iteration   2: 1.424 ms/op
# Warmup Iteration   3: 1.431 ms/op
# Warmup Iteration   4: 1.436 ms/op
# Warmup Iteration   5: 1.429 ms/op
Iteration   1: 1.433 ms/op
Iteration   2: 1.422 ms/op
Iteration   3: 1.408 ms/op
Iteration   4: 1.425 ms/op
Iteration   5: 1.427 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.423 ±(99.9%) 0.036 ms/op [Average]
  (min, avg, max) = (1.408, 1.423, 1.433), stdev = 0.009
  CI (99.9%): [1.387, 1.459] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 41.10% complete, ETA 18:00:53
# Fork: 1 of 1
# Warmup Iteration   1: 45.169 ms/op
# Warmup Iteration   2: 41.007 ms/op
# Warmup Iteration   3: 41.022 ms/op
# Warmup Iteration   4: 40.876 ms/op
# Warmup Iteration   5: 41.007 ms/op
Iteration   1: 40.787 ms/op
Iteration   2: 40.804 ms/op
Iteration   3: 40.998 ms/op
Iteration   4: 41.208 ms/op
Iteration   5: 41.378 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  41.035 ±(99.9%) 0.990 ms/op [Average]
  (min, avg, max) = (40.787, 41.035, 41.378), stdev = 0.257
  CI (99.9%): [40.044, 42.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 41.19% complete, ETA 17:56:55
# Fork: 1 of 1
# Warmup Iteration   1: 45.026 ms/op
# Warmup Iteration   2: 41.121 ms/op
# Warmup Iteration   3: 41.391 ms/op
# Warmup Iteration   4: 41.200 ms/op
# Warmup Iteration   5: 41.564 ms/op
Iteration   1: 40.732 ms/op
Iteration   2: 41.245 ms/op
Iteration   3: 41.362 ms/op
Iteration   4: 41.393 ms/op
Iteration   5: 41.149 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  41.176 ±(99.9%) 1.026 ms/op [Average]
  (min, avg, max) = (40.732, 41.176, 41.393), stdev = 0.267
  CI (99.9%): [40.149, 42.202] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 41.29% complete, ETA 17:52:58
# Fork: 1 of 1
# Warmup Iteration   1: 6620.594 ms/op
# Warmup Iteration   2: 7480.140 ms/op
# Warmup Iteration   3: 6759.270 ms/op
# Warmup Iteration   4: 6447.211 ms/op
# Warmup Iteration   5: 6516.662 ms/op
Iteration   1: 6497.963 ms/op
Iteration   2: 6419.008 ms/op
Iteration   3: 6455.631 ms/op
Iteration   4: 6462.334 ms/op
Iteration   5: 6518.083 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  6470.604 ±(99.9%) 148.606 ms/op [Average]
  (min, avg, max) = (6419.008, 6470.604, 6518.083), stdev = 38.593
  CI (99.9%): [6321.998, 6619.210] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 41.38% complete, ETA 17:50:22
# Fork: 1 of 1
# Warmup Iteration   1: 6422.123 ms/op
# Warmup Iteration   2: 6405.737 ms/op
# Warmup Iteration   3: 6374.745 ms/op
# Warmup Iteration   4: 6395.817 ms/op
# Warmup Iteration   5: 6297.555 ms/op
Iteration   1: 6470.583 ms/op
Iteration   2: 6203.930 ms/op
Iteration   3: 6286.469 ms/op
Iteration   4: 6277.927 ms/op
Iteration   5: 6227.439 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  6293.270 ±(99.9%) 404.029 ms/op [Average]
  (min, avg, max) = (6203.930, 6293.270, 6470.583), stdev = 104.925
  CI (99.9%): [5889.241, 6697.299] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 41.48% complete, ETA 17:47:42
# Fork: 1 of 1
# Warmup Iteration   1: 3.076 ms/op
# Warmup Iteration   2: 2.896 ms/op
# Warmup Iteration   3: 2.834 ms/op
# Warmup Iteration   4: 2.838 ms/op
# Warmup Iteration   5: 2.857 ms/op
Iteration   1: 2.855 ms/op
Iteration   2: 2.843 ms/op
Iteration   3: 2.850 ms/op
Iteration   4: 2.839 ms/op
Iteration   5: 2.833 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  2.844 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (2.833, 2.844, 2.855), stdev = 0.009
  CI (99.9%): [2.810, 2.877] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 41.57% complete, ETA 17:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 3.140 ms/op
# Warmup Iteration   2: 2.833 ms/op
# Warmup Iteration   3: 2.836 ms/op
# Warmup Iteration   4: 2.861 ms/op
# Warmup Iteration   5: 2.875 ms/op
Iteration   1: 2.836 ms/op
Iteration   2: 2.842 ms/op
Iteration   3: 2.868 ms/op
Iteration   4: 2.834 ms/op
Iteration   5: 2.894 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  2.855 ±(99.9%) 0.099 ms/op [Average]
  (min, avg, max) = (2.834, 2.855, 2.894), stdev = 0.026
  CI (99.9%): [2.756, 2.954] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 41.67% complete, ETA 17:39:54
# Fork: 1 of 1
# Warmup Iteration   1: 91.620 ms/op
# Warmup Iteration   2: 82.889 ms/op
# Warmup Iteration   3: 82.413 ms/op
# Warmup Iteration   4: 83.209 ms/op
# Warmup Iteration   5: 82.650 ms/op
Iteration   1: 84.009 ms/op
Iteration   2: 83.033 ms/op
Iteration   3: 82.686 ms/op
Iteration   4: 81.734 ms/op
Iteration   5: 81.574 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  82.607 ±(99.9%) 3.842 ms/op [Average]
  (min, avg, max) = (81.574, 82.607, 84.009), stdev = 0.998
  CI (99.9%): [78.766, 86.449] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 41.76% complete, ETA 17:36:02
# Fork: 1 of 1
# Warmup Iteration   1: 89.138 ms/op
# Warmup Iteration   2: 83.361 ms/op
# Warmup Iteration   3: 82.751 ms/op
# Warmup Iteration   4: 82.524 ms/op
# Warmup Iteration   5: 83.466 ms/op
Iteration   1: 82.082 ms/op
Iteration   2: 82.357 ms/op
Iteration   3: 82.058 ms/op
Iteration   4: 83.069 ms/op
Iteration   5: 82.947 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  82.503 ±(99.9%) 1.840 ms/op [Average]
  (min, avg, max) = (82.058, 82.503, 83.069), stdev = 0.478
  CI (99.9%): [80.662, 84.343] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 41.86% complete, ETA 17:32:11
# Fork: 1 of 1
# Warmup Iteration   1: 13018.594 ms/op
# Warmup Iteration   2: 12856.773 ms/op
# Warmup Iteration   3: 12886.369 ms/op
# Warmup Iteration   4: 12856.851 ms/op
# Warmup Iteration   5: 12820.081 ms/op
Iteration   1: 12805.583 ms/op
Iteration   2: 12813.479 ms/op
Iteration   3: 12890.956 ms/op
Iteration   4: 12817.972 ms/op
Iteration   5: 12926.928 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  12850.984 ±(99.9%) 210.230 ms/op [Average]
  (min, avg, max) = (12805.583, 12850.984, 12926.928), stdev = 54.596
  CI (99.9%): [12640.754, 13061.214] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 41.95% complete, ETA 17:31:05
# Fork: 1 of 1
# Warmup Iteration   1: 12539.328 ms/op
# Warmup Iteration   2: 11881.707 ms/op
# Warmup Iteration   3: 11933.356 ms/op
# Warmup Iteration   4: 11900.319 ms/op
# Warmup Iteration   5: 11886.220 ms/op
Iteration   1: 11834.505 ms/op
Iteration   2: 11855.575 ms/op
Iteration   3: 11857.726 ms/op
Iteration   4: 11875.640 ms/op
Iteration   5: 11805.256 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  11845.741 ±(99.9%) 103.674 ms/op [Average]
  (min, avg, max) = (11805.256, 11845.741, 11875.640), stdev = 26.924
  CI (99.9%): [11742.066, 11949.415] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 42.05% complete, ETA 17:29:45
# Fork: 1 of 1
# Warmup Iteration   1: 6.182 ms/op
# Warmup Iteration   2: 5.667 ms/op
# Warmup Iteration   3: 5.729 ms/op
# Warmup Iteration   4: 5.611 ms/op
# Warmup Iteration   5: 5.720 ms/op
Iteration   1: 5.640 ms/op
Iteration   2: 5.657 ms/op
Iteration   3: 5.663 ms/op
Iteration   4: 5.665 ms/op
Iteration   5: 5.712 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  5.667 ±(99.9%) 0.103 ms/op [Average]
  (min, avg, max) = (5.640, 5.667, 5.712), stdev = 0.027
  CI (99.9%): [5.565, 5.770] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 42.14% complete, ETA 17:25:55
# Fork: 1 of 1
# Warmup Iteration   1: 6.039 ms/op
# Warmup Iteration   2: 5.618 ms/op
# Warmup Iteration   3: 5.583 ms/op
# Warmup Iteration   4: 5.603 ms/op
# Warmup Iteration   5: 5.679 ms/op
Iteration   1: 5.671 ms/op
Iteration   2: 5.723 ms/op
Iteration   3: 5.591 ms/op
Iteration   4: 5.569 ms/op
Iteration   5: 5.640 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  5.639 ±(99.9%) 0.237 ms/op [Average]
  (min, avg, max) = (5.569, 5.639, 5.723), stdev = 0.062
  CI (99.9%): [5.402, 5.876] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 42.23% complete, ETA 17:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 180.968 ms/op
# Warmup Iteration   2: 164.882 ms/op
# Warmup Iteration   3: 162.643 ms/op
# Warmup Iteration   4: 164.016 ms/op
# Warmup Iteration   5: 164.722 ms/op
Iteration   1: 165.015 ms/op
Iteration   2: 165.557 ms/op
Iteration   3: 168.131 ms/op
Iteration   4: 166.422 ms/op
Iteration   5: 165.078 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  166.041 ±(99.9%) 4.994 ms/op [Average]
  (min, avg, max) = (165.015, 166.041, 168.131), stdev = 1.297
  CI (99.9%): [161.047, 171.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 42.33% complete, ETA 17:18:20
# Fork: 1 of 1
# Warmup Iteration   1: 180.621 ms/op
# Warmup Iteration   2: 165.430 ms/op
# Warmup Iteration   3: 164.411 ms/op
# Warmup Iteration   4: 163.442 ms/op
# Warmup Iteration   5: 164.585 ms/op
Iteration   1: 161.970 ms/op
Iteration   2: 162.136 ms/op
Iteration   3: 163.233 ms/op
Iteration   4: 162.670 ms/op
Iteration   5: 163.808 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  162.764 ±(99.9%) 2.947 ms/op [Average]
  (min, avg, max) = (161.970, 162.764, 163.808), stdev = 0.765
  CI (99.9%): [159.816, 165.711] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 42.42% complete, ETA 17:14:35
# Fork: 1 of 1
# Warmup Iteration   1: 25743.435 ms/op
# Warmup Iteration   2: 25444.523 ms/op
# Warmup Iteration   3: 25402.625 ms/op
# Warmup Iteration   4: 25503.281 ms/op
# Warmup Iteration   5: 25401.318 ms/op
Iteration   1: 25488.498 ms/op
Iteration   2: 25531.045 ms/op
Iteration   3: 25509.387 ms/op
Iteration   4: 25139.960 ms/op
Iteration   5: 25272.576 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  25388.293 ±(99.9%) 667.348 ms/op [Average]
  (min, avg, max) = (25139.960, 25388.293, 25531.045), stdev = 173.308
  CI (99.9%): [24720.945, 26055.641] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 42.52% complete, ETA 17:16:20
# Fork: 1 of 1
# Warmup Iteration   1: 26006.890 ms/op
# Warmup Iteration   2: 26006.703 ms/op
# Warmup Iteration   3: 25873.269 ms/op
# Warmup Iteration   4: 25780.178 ms/op
# Warmup Iteration   5: 25784.351 ms/op
Iteration   1: 25875.749 ms/op
Iteration   2: 26202.205 ms/op
Iteration   3: 25833.537 ms/op
Iteration   4: 25750.925 ms/op
Iteration   5: 25946.869 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  25921.857 ±(99.9%) 662.392 ms/op [Average]
  (min, avg, max) = (25750.925, 25921.857, 26202.205), stdev = 172.021
  CI (99.9%): [25259.466, 26584.249] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 42.61% complete, ETA 17:18:09
# Fork: 1 of 1
# Warmup Iteration   1: 12.104 ms/op
# Warmup Iteration   2: 11.284 ms/op
# Warmup Iteration   3: 11.190 ms/op
# Warmup Iteration   4: 11.248 ms/op
# Warmup Iteration   5: 11.294 ms/op
Iteration   1: 11.349 ms/op
Iteration   2: 11.386 ms/op
Iteration   3: 11.227 ms/op
Iteration   4: 11.207 ms/op
Iteration   5: 11.131 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  11.260 ±(99.9%) 0.406 ms/op [Average]
  (min, avg, max) = (11.131, 11.260, 11.386), stdev = 0.105
  CI (99.9%): [10.854, 11.666] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 42.71% complete, ETA 17:14:23
# Fork: 1 of 1
# Warmup Iteration   1: 12.243 ms/op
# Warmup Iteration   2: 11.242 ms/op
# Warmup Iteration   3: 11.343 ms/op
# Warmup Iteration   4: 11.211 ms/op
# Warmup Iteration   5: 11.303 ms/op
Iteration   1: 11.507 ms/op
Iteration   2: 11.465 ms/op
Iteration   3: 11.582 ms/op
Iteration   4: 11.338 ms/op
Iteration   5: 11.415 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  11.461 ±(99.9%) 0.354 ms/op [Average]
  (min, avg, max) = (11.338, 11.461, 11.582), stdev = 0.092
  CI (99.9%): [11.107, 11.815] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 42.80% complete, ETA 17:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 361.743 ms/op
# Warmup Iteration   2: 333.906 ms/op
# Warmup Iteration   3: 327.261 ms/op
# Warmup Iteration   4: 333.561 ms/op
# Warmup Iteration   5: 325.848 ms/op
Iteration   1: 335.327 ms/op
Iteration   2: 336.432 ms/op
Iteration   3: 331.514 ms/op
Iteration   4: 331.939 ms/op
Iteration   5: 329.720 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  332.986 ±(99.9%) 10.768 ms/op [Average]
  (min, avg, max) = (329.720, 332.986, 336.432), stdev = 2.797
  CI (99.9%): [322.218, 343.755] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 42.90% complete, ETA 17:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 356.953 ms/op
# Warmup Iteration   2: 331.675 ms/op
# Warmup Iteration   3: 332.328 ms/op
# Warmup Iteration   4: 327.119 ms/op
# Warmup Iteration   5: 332.219 ms/op
Iteration   1: 329.514 ms/op
Iteration   2: 324.517 ms/op
Iteration   3: 325.491 ms/op
Iteration   4: 329.475 ms/op
Iteration   5: 326.218 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  327.043 ±(99.9%) 8.926 ms/op [Average]
  (min, avg, max) = (324.517, 327.043, 329.514), stdev = 2.318
  CI (99.9%): [318.117, 335.969] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 42.99% complete, ETA 17:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 51135.079 ms/op
# Warmup Iteration   2: 51098.557 ms/op
# Warmup Iteration   3: 51153.222 ms/op
# Warmup Iteration   4: 51158.288 ms/op
# Warmup Iteration   5: 51191.459 ms/op
Iteration   1: 51466.476 ms/op
Iteration   2: 51153.611 ms/op
Iteration   3: 51101.521 ms/op
Iteration   4: 50844.232 ms/op
Iteration   5: 50670.292 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  51047.226 ±(99.9%) 1176.373 ms/op [Average]
  (min, avg, max) = (50670.292, 51047.226, 51466.476), stdev = 305.500
  CI (99.9%): [49870.853, 52223.600] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 43.09% complete, ETA 17:10:35
# Fork: 1 of 1
# Warmup Iteration   1: 65611.046 ms/op
# Warmup Iteration   2: 88552.079 ms/op
# Warmup Iteration   3: 84505.123 ms/op
# Warmup Iteration   4: 80689.844 ms/op
# Warmup Iteration   5: 83886.825 ms/op
Iteration   1: 85008.745 ms/op
Iteration   2: 81702.089 ms/op
Iteration   3: 83923.369 ms/op
Iteration   4: 85835.306 ms/op
Iteration   5: 84128.681 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  84119.638 ±(99.9%) 5970.726 ms/op [Average]
  (min, avg, max) = (81702.089, 84119.638, 85835.306), stdev = 1550.579
  CI (99.9%): [78148.912, 90090.365] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 43.18% complete, ETA 17:24:41
# Fork: 1 of 1
# Warmup Iteration   1: 24.898 ms/op
# Warmup Iteration   2: 22.824 ms/op
# Warmup Iteration   3: 23.270 ms/op
# Warmup Iteration   4: 22.735 ms/op
# Warmup Iteration   5: 23.653 ms/op
Iteration   1: 25.483 ms/op
Iteration   2: 24.934 ms/op
Iteration   3: 30.343 ms/op
Iteration   4: 41.609 ms/op
Iteration   5: 42.168 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  32.907 ±(99.9%) 32.603 ms/op [Average]
  (min, avg, max) = (24.934, 32.907, 42.168), stdev = 8.467
  CI (99.9%): [0.304, 65.511] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 43.28% complete, ETA 17:20:54
# Fork: 1 of 1
# Warmup Iteration   1: 32.740 ms/op
# Warmup Iteration   2: 28.346 ms/op
# Warmup Iteration   3: 25.284 ms/op
# Warmup Iteration   4: 26.103 ms/op
# Warmup Iteration   5: 28.496 ms/op
Iteration   1: 24.358 ms/op
Iteration   2: 23.670 ms/op
Iteration   3: 29.624 ms/op
Iteration   4: 46.527 ms/op
Iteration   5: 46.551 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  34.146 ±(99.9%) 44.457 ms/op [Average]
  (min, avg, max) = (23.670, 34.146, 46.551), stdev = 11.545
  CI (99.9%): [? 0, 78.603] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 43.37% complete, ETA 17:17:07
# Fork: 1 of 1
# Warmup Iteration   1: 718.592 ms/op
# Warmup Iteration   2: 659.990 ms/op
# Warmup Iteration   3: 669.942 ms/op
# Warmup Iteration   4: 668.916 ms/op
# Warmup Iteration   5: 701.930 ms/op
Iteration   1: 888.128 ms/op
Iteration   2: 1345.460 ms/op
Iteration   3: 1186.007 ms/op
Iteration   4: 1265.884 ms/op
Iteration   5: 1212.444 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1179.585 ±(99.9%) 669.807 ms/op [Average]
  (min, avg, max) = (888.128, 1179.585, 1345.460), stdev = 173.947
  CI (99.9%): [509.777, 1849.392] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 43.47% complete, ETA 17:13:26
# Fork: 1 of 1
# Warmup Iteration   1: 698.937 ms/op
# Warmup Iteration   2: 664.221 ms/op
# Warmup Iteration   3: 663.673 ms/op
# Warmup Iteration   4: 653.063 ms/op
# Warmup Iteration   5: 655.854 ms/op
Iteration   1: 787.497 ms/op
Iteration   2: 1201.519 ms/op
Iteration   3: 1267.102 ms/op
Iteration   4: 1246.311 ms/op
Iteration   5: 1320.030 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1164.492 ±(99.9%) 827.913 ms/op [Average]
  (min, avg, max) = (787.497, 1164.492, 1320.030), stdev = 215.006
  CI (99.9%): [336.579, 1992.405] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 43.56% complete, ETA 17:09:45
# Fork: 1 of 1
# Warmup Iteration   1: 170417.369 ms/op
# Warmup Iteration   2: 171872.015 ms/op
# Warmup Iteration   3: 172665.688 ms/op
# Warmup Iteration   4: 171765.019 ms/op
# Warmup Iteration   5: 174115.704 ms/op
Iteration   1: 172833.831 ms/op
Iteration   2: 171410.326 ms/op
Iteration   3: 173437.367 ms/op
Iteration   4: 173141.455 ms/op
Iteration   5: 172841.040 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  172732.804 ±(99.9%) 3003.919 ms/op [Average]
  (min, avg, max) = (171410.326, 172732.804, 173437.367), stdev = 780.108
  CI (99.9%): [169728.885, 175736.722] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 43.66% complete, ETA 17:42:54
# Fork: 1 of 1
# Warmup Iteration   1: 167875.999 ms/op
# Warmup Iteration   2: 171122.240 ms/op
# Warmup Iteration   3: 170329.393 ms/op
# Warmup Iteration   4: 170340.356 ms/op
# Warmup Iteration   5: 171289.404 ms/op
Iteration   1: 170299.221 ms/op
Iteration   2: 167584.002 ms/op
Iteration   3: 171352.165 ms/op
Iteration   4: 172873.498 ms/op
Iteration   5: 171651.674 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  170752.112 ±(99.9%) 7679.980 ms/op [Average]
  (min, avg, max) = (167584.002, 170752.112, 172873.498), stdev = 1994.467
  CI (99.9%): [163072.132, 178432.092] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 43.75% complete, ETA 18:15:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.035 ms/op
Iteration   5: 0.044 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.029 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (0.020, 0.029, 0.044), stdev = 0.011
  CI (99.9%): [? 0, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 43.84% complete, ETA 18:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.021 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.021 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.041 ms/op
Iteration   5: 0.039 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.029 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (0.021, 0.029, 0.041), stdev = 0.010
  CI (99.9%): [? 0, 0.068] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 43.94% complete, ETA 18:07:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.719 ms/op
# Warmup Iteration   2: 0.656 ms/op
# Warmup Iteration   3: 0.653 ms/op
# Warmup Iteration   4: 0.656 ms/op
# Warmup Iteration   5: 0.659 ms/op
Iteration   1: 0.651 ms/op
Iteration   2: 0.661 ms/op
Iteration   3: 0.767 ms/op
Iteration   4: 1.237 ms/op
Iteration   5: 1.189 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.901 ±(99.9%) 1.112 ms/op [Average]
  (min, avg, max) = (0.651, 0.901, 1.237), stdev = 0.289
  CI (99.9%): [? 0, 2.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 44.03% complete, ETA 18:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.710 ms/op
# Warmup Iteration   2: 0.650 ms/op
# Warmup Iteration   3: 0.658 ms/op
# Warmup Iteration   4: 0.646 ms/op
# Warmup Iteration   5: 0.655 ms/op
Iteration   1: 0.653 ms/op
Iteration   2: 0.662 ms/op
Iteration   3: 0.797 ms/op
Iteration   4: 1.249 ms/op
Iteration   5: 1.192 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.911 ±(99.9%) 1.114 ms/op [Average]
  (min, avg, max) = (0.653, 0.911, 1.249), stdev = 0.289
  CI (99.9%): [? 0, 2.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 44.13% complete, ETA 17:59:32
# Fork: 1 of 1
# Warmup Iteration   1: 118.295 ms/op
# Warmup Iteration   2: 119.713 ms/op
# Warmup Iteration   3: 114.806 ms/op
# Warmup Iteration   4: 107.182 ms/op
# Warmup Iteration   5: 105.485 ms/op
Iteration   1: 104.007 ms/op
Iteration   2: 117.362 ms/op
Iteration   3: 183.434 ms/op
Iteration   4: 184.903 ms/op
Iteration   5: 163.466 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  150.635 ±(99.9%) 145.308 ms/op [Average]
  (min, avg, max) = (104.007, 150.635, 184.903), stdev = 37.736
  CI (99.9%): [5.327, 295.942] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 44.22% complete, ETA 17:55:39
# Fork: 1 of 1
# Warmup Iteration   1: 119.674 ms/op
# Warmup Iteration   2: 112.180 ms/op
# Warmup Iteration   3: 110.035 ms/op
# Warmup Iteration   4: 105.560 ms/op
# Warmup Iteration   5: 104.859 ms/op
Iteration   1: 106.616 ms/op
Iteration   2: 126.872 ms/op
Iteration   3: 180.805 ms/op
Iteration   4: 190.503 ms/op
Iteration   5: 179.098 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  156.779 ±(99.9%) 144.379 ms/op [Average]
  (min, avg, max) = (106.616, 156.779, 190.503), stdev = 37.495
  CI (99.9%): [12.400, 301.158] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 44.32% complete, ETA 17:51:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.044 ms/op
# Warmup Iteration   4: 0.045 ms/op
# Warmup Iteration   5: 0.045 ms/op
Iteration   1: 0.045 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.056 ms/op
Iteration   4: 0.078 ms/op
Iteration   5: 0.085 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.062 ±(99.9%) 0.072 ms/op [Average]
  (min, avg, max) = (0.045, 0.062, 0.085), stdev = 0.019
  CI (99.9%): [? 0, 0.134] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 44.41% complete, ETA 17:47:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.047 ms/op
# Warmup Iteration   3: 0.047 ms/op
# Warmup Iteration   4: 0.047 ms/op
# Warmup Iteration   5: 0.048 ms/op
Iteration   1: 0.047 ms/op
Iteration   2: 0.047 ms/op
Iteration   3: 0.054 ms/op
Iteration   4: 0.090 ms/op
Iteration   5: 0.082 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.064 ±(99.9%) 0.079 ms/op [Average]
  (min, avg, max) = (0.047, 0.064, 0.090), stdev = 0.021
  CI (99.9%): [? 0, 0.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 44.51% complete, ETA 17:44:01
# Fork: 1 of 1
# Warmup Iteration   1: 1.430 ms/op
# Warmup Iteration   2: 1.311 ms/op
# Warmup Iteration   3: 1.323 ms/op
# Warmup Iteration   4: 1.326 ms/op
# Warmup Iteration   5: 1.328 ms/op
Iteration   1: 1.319 ms/op
Iteration   2: 1.307 ms/op
Iteration   3: 1.592 ms/op
Iteration   4: 2.482 ms/op
Iteration   5: 2.326 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.805 ±(99.9%) 2.162 ms/op [Average]
  (min, avg, max) = (1.307, 1.805, 2.482), stdev = 0.561
  CI (99.9%): [? 0, 3.967] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 44.60% complete, ETA 17:40:10
# Fork: 1 of 1
# Warmup Iteration   1: 1.426 ms/op
# Warmup Iteration   2: 1.298 ms/op
# Warmup Iteration   3: 1.325 ms/op
# Warmup Iteration   4: 1.300 ms/op
# Warmup Iteration   5: 1.311 ms/op
Iteration   1: 1.309 ms/op
Iteration   2: 1.306 ms/op
Iteration   3: 1.530 ms/op
Iteration   4: 2.486 ms/op
Iteration   5: 2.268 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.780 ±(99.9%) 2.148 ms/op [Average]
  (min, avg, max) = (1.306, 1.780, 2.486), stdev = 0.558
  CI (99.9%): [? 0, 3.928] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 44.70% complete, ETA 17:36:20
# Fork: 1 of 1
# Warmup Iteration   1: 233.506 ms/op
# Warmup Iteration   2: 219.178 ms/op
# Warmup Iteration   3: 211.242 ms/op
# Warmup Iteration   4: 209.704 ms/op
# Warmup Iteration   5: 207.661 ms/op
Iteration   1: 212.476 ms/op
Iteration   2: 291.316 ms/op
Iteration   3: 368.564 ms/op
Iteration   4: 360.668 ms/op
Iteration   5: 381.643 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  322.933 ±(99.9%) 273.324 ms/op [Average]
  (min, avg, max) = (212.476, 322.933, 381.643), stdev = 70.981
  CI (99.9%): [49.610, 596.257] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 44.79% complete, ETA 17:32:33
# Fork: 1 of 1
# Warmup Iteration   1: 235.088 ms/op
# Warmup Iteration   2: 225.181 ms/op
# Warmup Iteration   3: 195.097 ms/op
# Warmup Iteration   4: 220.778 ms/op
# Warmup Iteration   5: 202.480 ms/op
Iteration   1: 179.388 ms/op
Iteration   2: 308.578 ms/op
Iteration   3: 332.411 ms/op
Iteration   4: 350.486 ms/op
Iteration   5: 309.321 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  296.037 ±(99.9%) 259.944 ms/op [Average]
  (min, avg, max) = (179.388, 296.037, 350.486), stdev = 67.507
  CI (99.9%): [36.093, 555.981] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 44.89% complete, ETA 17:28:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ms/op
# Warmup Iteration   2: 0.091 ms/op
# Warmup Iteration   3: 0.089 ms/op
# Warmup Iteration   4: 0.090 ms/op
# Warmup Iteration   5: 0.089 ms/op
Iteration   1: 0.090 ms/op
Iteration   2: 0.090 ms/op
Iteration   3: 0.111 ms/op
Iteration   4: 0.161 ms/op
Iteration   5: 0.169 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.124 ±(99.9%) 0.149 ms/op [Average]
  (min, avg, max) = (0.090, 0.124, 0.169), stdev = 0.039
  CI (99.9%): [? 0, 0.273] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 44.98% complete, ETA 17:24:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ms/op
# Warmup Iteration   2: 0.088 ms/op
# Warmup Iteration   3: 0.088 ms/op
# Warmup Iteration   4: 0.089 ms/op
# Warmup Iteration   5: 0.091 ms/op
Iteration   1: 0.089 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.107 ms/op
Iteration   4: 0.156 ms/op
Iteration   5: 0.181 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.124 ±(99.9%) 0.162 ms/op [Average]
  (min, avg, max) = (0.088, 0.124, 0.181), stdev = 0.042
  CI (99.9%): [? 0, 0.286] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 45.08% complete, ETA 17:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 2.978 ms/op
# Warmup Iteration   2: 2.672 ms/op
# Warmup Iteration   3: 2.719 ms/op
# Warmup Iteration   4: 2.697 ms/op
# Warmup Iteration   5: 2.717 ms/op
Iteration   1: 2.672 ms/op
Iteration   2: 2.674 ms/op
Iteration   3: 3.196 ms/op
Iteration   4: 5.050 ms/op
Iteration   5: 4.978 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  3.714 ±(99.9%) 4.645 ms/op [Average]
  (min, avg, max) = (2.672, 3.714, 5.050), stdev = 1.206
  CI (99.9%): [? 0, 8.359] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 45.17% complete, ETA 17:17:27
# Fork: 1 of 1
# Warmup Iteration   1: 2.879 ms/op
# Warmup Iteration   2: 2.676 ms/op
# Warmup Iteration   3: 2.699 ms/op
# Warmup Iteration   4: 2.675 ms/op
# Warmup Iteration   5: 2.664 ms/op
Iteration   1: 2.677 ms/op
Iteration   2: 2.674 ms/op
Iteration   3: 3.156 ms/op
Iteration   4: 5.424 ms/op
Iteration   5: 4.317 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  3.650 ±(99.9%) 4.612 ms/op [Average]
  (min, avg, max) = (2.674, 3.650, 5.424), stdev = 1.198
  CI (99.9%): [? 0, 8.261] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 45.27% complete, ETA 17:13:42
# Fork: 1 of 1
# Warmup Iteration   1: 467.201 ms/op
# Warmup Iteration   2: 447.532 ms/op
# Warmup Iteration   3: 425.230 ms/op
# Warmup Iteration   4: 408.620 ms/op
# Warmup Iteration   5: 392.595 ms/op
Iteration   1: 519.843 ms/op
Iteration   2: 726.599 ms/op
Iteration   3: 617.803 ms/op
Iteration   4: 614.862 ms/op
Iteration   5: 760.032 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  647.828 ±(99.9%) 371.158 ms/op [Average]
  (min, avg, max) = (519.843, 647.828, 760.032), stdev = 96.388
  CI (99.9%): [276.670, 1018.985] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 45.36% complete, ETA 17:10:03
# Fork: 1 of 1
# Warmup Iteration   1: 460.839 ms/op
# Warmup Iteration   2: 427.962 ms/op
# Warmup Iteration   3: 417.001 ms/op
# Warmup Iteration   4: 415.090 ms/op
# Warmup Iteration   5: 409.035 ms/op
Iteration   1: 549.677 ms/op
Iteration   2: 700.191 ms/op
Iteration   3: 723.179 ms/op
Iteration   4: 638.196 ms/op
Iteration   5: 729.521 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  668.153 ±(99.9%) 290.425 ms/op [Average]
  (min, avg, max) = (549.677, 668.153, 729.521), stdev = 75.422
  CI (99.9%): [377.728, 958.578] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 45.45% complete, ETA 17:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.195 ms/op
# Warmup Iteration   2: 0.200 ms/op
# Warmup Iteration   3: 0.198 ms/op
# Warmup Iteration   4: 0.186 ms/op
# Warmup Iteration   5: 0.184 ms/op
Iteration   1: 0.183 ms/op
Iteration   2: 0.183 ms/op
Iteration   3: 0.222 ms/op
Iteration   4: 0.337 ms/op
Iteration   5: 0.372 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.259 ±(99.9%) 0.343 ms/op [Average]
  (min, avg, max) = (0.183, 0.259, 0.372), stdev = 0.089
  CI (99.9%): [? 0, 0.602] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 45.55% complete, ETA 17:02:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.193 ms/op
# Warmup Iteration   2: 0.180 ms/op
# Warmup Iteration   3: 0.178 ms/op
# Warmup Iteration   4: 0.183 ms/op
# Warmup Iteration   5: 0.177 ms/op
Iteration   1: 0.178 ms/op
Iteration   2: 0.180 ms/op
Iteration   3: 0.213 ms/op
Iteration   4: 0.357 ms/op
Iteration   5: 0.308 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.247 ±(99.9%) 0.311 ms/op [Average]
  (min, avg, max) = (0.178, 0.247, 0.357), stdev = 0.081
  CI (99.9%): [? 0, 0.558] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 45.64% complete, ETA 16:59:01
# Fork: 1 of 1
# Warmup Iteration   1: 5.825 ms/op
# Warmup Iteration   2: 5.414 ms/op
# Warmup Iteration   3: 5.469 ms/op
# Warmup Iteration   4: 5.358 ms/op
# Warmup Iteration   5: 5.438 ms/op
Iteration   1: 5.482 ms/op
Iteration   2: 5.426 ms/op
Iteration   3: 6.706 ms/op
Iteration   4: 9.670 ms/op
Iteration   5: 9.613 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  7.380 ±(99.9%) 8.192 ms/op [Average]
  (min, avg, max) = (5.426, 7.380, 9.670), stdev = 2.127
  CI (99.9%): [? 0, 15.572] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 45.74% complete, ETA 16:55:21
# Fork: 1 of 1
# Warmup Iteration   1: 6.024 ms/op
# Warmup Iteration   2: 5.547 ms/op
# Warmup Iteration   3: 5.541 ms/op
# Warmup Iteration   4: 5.500 ms/op
# Warmup Iteration   5: 5.486 ms/op
Iteration   1: 5.428 ms/op
Iteration   2: 5.485 ms/op
Iteration   3: 6.470 ms/op
Iteration   4: 9.095 ms/op
Iteration   5: 10.532 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  7.402 ±(99.9%) 8.844 ms/op [Average]
  (min, avg, max) = (5.428, 7.402, 10.532), stdev = 2.297
  CI (99.9%): [? 0, 16.246] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 45.83% complete, ETA 16:51:41
# Fork: 1 of 1
# Warmup Iteration   1: 924.435 ms/op
# Warmup Iteration   2: 886.652 ms/op
# Warmup Iteration   3: 879.975 ms/op
# Warmup Iteration   4: 797.022 ms/op
# Warmup Iteration   5: 1379.520 ms/op
Iteration   1: 1406.845 ms/op
Iteration   2: 1454.250 ms/op
Iteration   3: 1222.115 ms/op
Iteration   4: 1416.302 ms/op
Iteration   5: 1364.721 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1372.846 ±(99.9%) 346.861 ms/op [Average]
  (min, avg, max) = (1222.115, 1372.846, 1454.250), stdev = 90.079
  CI (99.9%): [1025.986, 1719.707] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 45.93% complete, ETA 16:48:09
# Fork: 1 of 1
# Warmup Iteration   1: 910.488 ms/op
# Warmup Iteration   2: 858.064 ms/op
# Warmup Iteration   3: 793.340 ms/op
# Warmup Iteration   4: 796.498 ms/op
# Warmup Iteration   5: 1342.094 ms/op
Iteration   1: 1381.349 ms/op
Iteration   2: 1383.511 ms/op
Iteration   3: 1318.850 ms/op
Iteration   4: 1332.199 ms/op
Iteration   5: 1492.372 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1381.656 ±(99.9%) 262.946 ms/op [Average]
  (min, avg, max) = (1318.850, 1381.656, 1492.372), stdev = 68.286
  CI (99.9%): [1118.710, 1644.602] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 46.02% complete, ETA 16:44:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.404 ms/op
# Warmup Iteration   2: 0.361 ms/op
# Warmup Iteration   3: 0.361 ms/op
# Warmup Iteration   4: 0.358 ms/op
# Warmup Iteration   5: 0.360 ms/op
Iteration   1: 0.355 ms/op
Iteration   2: 0.356 ms/op
Iteration   3: 0.436 ms/op
Iteration   4: 0.747 ms/op
Iteration   5: 0.613 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.501 ±(99.9%) 0.666 ms/op [Average]
  (min, avg, max) = (0.355, 0.501, 0.747), stdev = 0.173
  CI (99.9%): [? 0, 1.167] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 46.12% complete, ETA 16:41:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.374 ms/op
# Warmup Iteration   2: 0.364 ms/op
# Warmup Iteration   3: 0.357 ms/op
# Warmup Iteration   4: 0.350 ms/op
# Warmup Iteration   5: 0.351 ms/op
Iteration   1: 0.349 ms/op
Iteration   2: 0.349 ms/op
Iteration   3: 0.435 ms/op
Iteration   4: 0.656 ms/op
Iteration   5: 0.620 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.482 ±(99.9%) 0.568 ms/op [Average]
  (min, avg, max) = (0.349, 0.482, 0.656), stdev = 0.148
  CI (99.9%): [? 0, 1.050] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 46.21% complete, ETA 16:37:25
# Fork: 1 of 1
# Warmup Iteration   1: 11.961 ms/op
# Warmup Iteration   2: 11.004 ms/op
# Warmup Iteration   3: 10.888 ms/op
# Warmup Iteration   4: 10.967 ms/op
# Warmup Iteration   5: 10.945 ms/op
Iteration   1: 11.003 ms/op
Iteration   2: 10.842 ms/op
Iteration   3: 12.718 ms/op
Iteration   4: 20.886 ms/op
Iteration   5: 20.031 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  15.096 ±(99.9%) 19.097 ms/op [Average]
  (min, avg, max) = (10.842, 15.096, 20.886), stdev = 4.959
  CI (99.9%): [? 0, 34.193] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 46.31% complete, ETA 16:33:50
# Fork: 1 of 1
# Warmup Iteration   1: 11.972 ms/op
# Warmup Iteration   2: 10.978 ms/op
# Warmup Iteration   3: 11.009 ms/op
# Warmup Iteration   4: 10.870 ms/op
# Warmup Iteration   5: 10.960 ms/op
Iteration   1: 10.989 ms/op
Iteration   2: 11.032 ms/op
Iteration   3: 13.284 ms/op
Iteration   4: 17.928 ms/op
Iteration   5: 19.629 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  14.572 ±(99.9%) 15.385 ms/op [Average]
  (min, avg, max) = (10.989, 14.572, 19.629), stdev = 3.996
  CI (99.9%): [? 0, 29.958] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 46.40% complete, ETA 16:30:15
# Fork: 1 of 1
# Warmup Iteration   1: 1886.165 ms/op
# Warmup Iteration   2: 1683.027 ms/op
# Warmup Iteration   3: 1732.127 ms/op
# Warmup Iteration   4: 1801.001 ms/op
# Warmup Iteration   5: 2590.871 ms/op
Iteration   1: 2525.659 ms/op
Iteration   2: 2768.913 ms/op
Iteration   3: 2737.514 ms/op
Iteration   4: 3066.467 ms/op
Iteration   5: 3205.321 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  2860.775 ±(99.9%) 1049.179 ms/op [Average]
  (min, avg, max) = (2525.659, 2860.775, 3205.321), stdev = 272.468
  CI (99.9%): [1811.595, 3909.954] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 46.50% complete, ETA 16:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 1837.711 ms/op
# Warmup Iteration   2: 1785.080 ms/op
# Warmup Iteration   3: 1609.972 ms/op
# Warmup Iteration   4: 1593.763 ms/op
# Warmup Iteration   5: 2817.199 ms/op
Iteration   1: 2794.711 ms/op
Iteration   2: 2732.340 ms/op
Iteration   3: 2815.495 ms/op
Iteration   4: 2793.107 ms/op
Iteration   5: 2774.136 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  2781.958 ±(99.9%) 120.772 ms/op [Average]
  (min, avg, max) = (2732.340, 2781.958, 2815.495), stdev = 31.364
  CI (99.9%): [2661.186, 2902.730] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 46.59% complete, ETA 16:23:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.787 ms/op
# Warmup Iteration   2: 0.699 ms/op
# Warmup Iteration   3: 0.708 ms/op
# Warmup Iteration   4: 0.717 ms/op
# Warmup Iteration   5: 0.701 ms/op
Iteration   1: 0.702 ms/op
Iteration   2: 0.706 ms/op
Iteration   3: 0.868 ms/op
Iteration   4: 1.128 ms/op
Iteration   5: 1.228 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.927 ±(99.9%) 0.931 ms/op [Average]
  (min, avg, max) = (0.702, 0.927, 1.228), stdev = 0.242
  CI (99.9%): [? 0, 1.858] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 46.69% complete, ETA 16:20:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.762 ms/op
# Warmup Iteration   2: 0.695 ms/op
# Warmup Iteration   3: 0.701 ms/op
# Warmup Iteration   4: 0.707 ms/op
# Warmup Iteration   5: 0.700 ms/op
Iteration   1: 0.716 ms/op
Iteration   2: 0.687 ms/op
Iteration   3: 0.850 ms/op
Iteration   4: 1.254 ms/op
Iteration   5: 1.452 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  0.992 ±(99.9%) 1.319 ms/op [Average]
  (min, avg, max) = (0.687, 0.992, 1.452), stdev = 0.343
  CI (99.9%): [? 0, 2.311] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 46.78% complete, ETA 16:16:38
# Fork: 1 of 1
# Warmup Iteration   1: 23.818 ms/op
# Warmup Iteration   2: 21.395 ms/op
# Warmup Iteration   3: 21.448 ms/op
# Warmup Iteration   4: 22.129 ms/op
# Warmup Iteration   5: 22.253 ms/op
Iteration   1: 21.889 ms/op
Iteration   2: 21.688 ms/op
Iteration   3: 27.967 ms/op
Iteration   4: 39.306 ms/op
Iteration   5: 41.710 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  30.512 ±(99.9%) 36.603 ms/op [Average]
  (min, avg, max) = (21.688, 30.512, 41.710), stdev = 9.506
  CI (99.9%): [? 0, 67.115] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 46.88% complete, ETA 16:13:08
# Fork: 1 of 1
# Warmup Iteration   1: 24.623 ms/op
# Warmup Iteration   2: 22.326 ms/op
# Warmup Iteration   3: 22.147 ms/op
# Warmup Iteration   4: 22.177 ms/op
# Warmup Iteration   5: 22.294 ms/op
Iteration   1: 22.126 ms/op
Iteration   2: 22.239 ms/op
Iteration   3: 29.328 ms/op
Iteration   4: 41.841 ms/op
Iteration   5: 40.359 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  31.179 ±(99.9%) 36.695 ms/op [Average]
  (min, avg, max) = (22.126, 31.179, 41.841), stdev = 9.530
  CI (99.9%): [? 0, 67.874] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 46.97% complete, ETA 16:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 3679.545 ms/op
# Warmup Iteration   2: 3505.881 ms/op
# Warmup Iteration   3: 5735.665 ms/op
# Warmup Iteration   4: 5730.480 ms/op
# Warmup Iteration   5: 6149.845 ms/op
Iteration   1: 6613.923 ms/op
Iteration   2: 6428.630 ms/op
Iteration   3: 6140.471 ms/op
Iteration   4: 6067.827 ms/op
Iteration   5: 6505.314 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  6351.233 ±(99.9%) 910.163 ms/op [Average]
  (min, avg, max) = (6067.827, 6351.233, 6613.923), stdev = 236.367
  CI (99.9%): [5441.070, 7261.396] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 47.06% complete, ETA 16:07:03
# Fork: 1 of 1
# Warmup Iteration   1: 3556.877 ms/op
# Warmup Iteration   2: 3512.283 ms/op
# Warmup Iteration   3: 5321.265 ms/op
# Warmup Iteration   4: 5197.183 ms/op
# Warmup Iteration   5: 5632.641 ms/op
Iteration   1: 6018.166 ms/op
Iteration   2: 6122.255 ms/op
Iteration   3: 6007.174 ms/op
Iteration   4: 6833.547 ms/op
Iteration   5: 6421.318 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  6280.492 ±(99.9%) 1353.568 ms/op [Average]
  (min, avg, max) = (6007.174, 6280.492, 6833.547), stdev = 351.517
  CI (99.9%): [4926.924, 7634.061] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 47.16% complete, ETA 16:04:25
# Fork: 1 of 1
# Warmup Iteration   1: 1.590 ms/op
# Warmup Iteration   2: 1.417 ms/op
# Warmup Iteration   3: 1.405 ms/op
# Warmup Iteration   4: 1.408 ms/op
# Warmup Iteration   5: 1.430 ms/op
Iteration   1: 1.423 ms/op
Iteration   2: 1.416 ms/op
Iteration   3: 1.645 ms/op
Iteration   4: 2.300 ms/op
Iteration   5: 2.389 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.835 ±(99.9%) 1.831 ms/op [Average]
  (min, avg, max) = (1.416, 1.835, 2.389), stdev = 0.476
  CI (99.9%): [0.003, 3.666] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 47.25% complete, ETA 16:00:58
# Fork: 1 of 1
# Warmup Iteration   1: 1.553 ms/op
# Warmup Iteration   2: 1.465 ms/op
# Warmup Iteration   3: 1.429 ms/op
# Warmup Iteration   4: 1.460 ms/op
# Warmup Iteration   5: 1.447 ms/op
Iteration   1: 1.451 ms/op
Iteration   2: 1.409 ms/op
Iteration   3: 1.695 ms/op
Iteration   4: 2.609 ms/op
Iteration   5: 2.456 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1.924 ±(99.9%) 2.189 ms/op [Average]
  (min, avg, max) = (1.409, 1.924, 2.609), stdev = 0.569
  CI (99.9%): [? 0, 4.113] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 47.35% complete, ETA 15:57:31
# Fork: 1 of 1
# Warmup Iteration   1: 48.509 ms/op
# Warmup Iteration   2: 45.624 ms/op
# Warmup Iteration   3: 44.383 ms/op
# Warmup Iteration   4: 43.937 ms/op
# Warmup Iteration   5: 44.100 ms/op
Iteration   1: 44.415 ms/op
Iteration   2: 44.988 ms/op
Iteration   3: 60.450 ms/op
Iteration   4: 78.779 ms/op
Iteration   5: 77.672 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  61.261 ±(99.9%) 64.591 ms/op [Average]
  (min, avg, max) = (44.415, 61.261, 78.779), stdev = 16.774
  CI (99.9%): [? 0, 125.852] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 47.44% complete, ETA 15:54:05
# Fork: 1 of 1
# Warmup Iteration   1: 48.884 ms/op
# Warmup Iteration   2: 44.873 ms/op
# Warmup Iteration   3: 44.318 ms/op
# Warmup Iteration   4: 44.002 ms/op
# Warmup Iteration   5: 44.435 ms/op
Iteration   1: 43.769 ms/op
Iteration   2: 43.603 ms/op
Iteration   3: 56.613 ms/op
Iteration   4: 72.962 ms/op
Iteration   5: 84.066 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  60.203 ±(99.9%) 69.171 ms/op [Average]
  (min, avg, max) = (43.603, 60.203, 84.066), stdev = 17.964
  CI (99.9%): [? 0, 129.374] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 47.54% complete, ETA 15:50:39
# Fork: 1 of 1
# Warmup Iteration   1: 7187.152 ms/op
# Warmup Iteration   2: 10841.593 ms/op
# Warmup Iteration   3: 13255.853 ms/op
# Warmup Iteration   4: 12909.218 ms/op
# Warmup Iteration   5: 13189.716 ms/op
Iteration   1: 12432.476 ms/op
Iteration   2: 11794.359 ms/op
Iteration   3: 12512.937 ms/op
Iteration   4: 12271.347 ms/op
Iteration   5: 12313.391 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  12264.902 ±(99.9%) 1077.847 ms/op [Average]
  (min, avg, max) = (11794.359, 12264.902, 12512.937), stdev = 279.913
  CI (99.9%): [11187.055, 13342.749] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 47.63% complete, ETA 15:49:15
# Fork: 1 of 1
# Warmup Iteration   1: 6953.138 ms/op
# Warmup Iteration   2: 10444.073 ms/op
# Warmup Iteration   3: 10933.647 ms/op
# Warmup Iteration   4: 12621.566 ms/op
# Warmup Iteration   5: 11563.895 ms/op
Iteration   1: 11956.037 ms/op
Iteration   2: 11652.146 ms/op
Iteration   3: 10914.749 ms/op
Iteration   4: 11531.313 ms/op
Iteration   5: 11456.857 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  11502.220 ±(99.9%) 1461.793 ms/op [Average]
  (min, avg, max) = (10914.749, 11502.220, 11956.037), stdev = 379.623
  CI (99.9%): [10040.428, 12964.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 47.73% complete, ETA 15:47:42
# Fork: 1 of 1
# Warmup Iteration   1: 3.032 ms/op
# Warmup Iteration   2: 2.855 ms/op
# Warmup Iteration   3: 2.819 ms/op
# Warmup Iteration   4: 2.898 ms/op
# Warmup Iteration   5: 2.830 ms/op
Iteration   1: 2.843 ms/op
Iteration   2: 2.828 ms/op
Iteration   3: 3.268 ms/op
Iteration   4: 5.030 ms/op
Iteration   5: 5.653 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  3.924 ±(99.9%) 5.099 ms/op [Average]
  (min, avg, max) = (2.828, 3.924, 5.653), stdev = 1.324
  CI (99.9%): [? 0, 9.023] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 47.82% complete, ETA 15:44:18
# Fork: 1 of 1
# Warmup Iteration   1: 3.077 ms/op
# Warmup Iteration   2: 2.802 ms/op
# Warmup Iteration   3: 2.855 ms/op
# Warmup Iteration   4: 2.815 ms/op
# Warmup Iteration   5: 2.845 ms/op
Iteration   1: 2.817 ms/op
Iteration   2: 2.839 ms/op
Iteration   3: 3.337 ms/op
Iteration   4: 5.427 ms/op
Iteration   5: 4.997 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  3.883 ±(99.9%) 4.775 ms/op [Average]
  (min, avg, max) = (2.817, 3.883, 5.427), stdev = 1.240
  CI (99.9%): [? 0, 8.658] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 47.92% complete, ETA 15:40:54
# Fork: 1 of 1
# Warmup Iteration   1: 95.117 ms/op
# Warmup Iteration   2: 89.395 ms/op
# Warmup Iteration   3: 85.911 ms/op
# Warmup Iteration   4: 85.274 ms/op
# Warmup Iteration   5: 86.408 ms/op
Iteration   1: 86.265 ms/op
Iteration   2: 85.571 ms/op
Iteration   3: 114.002 ms/op
Iteration   4: 137.876 ms/op
Iteration   5: 149.205 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  114.584 ±(99.9%) 112.019 ms/op [Average]
  (min, avg, max) = (85.571, 114.584, 149.205), stdev = 29.091
  CI (99.9%): [2.565, 226.603] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 48.01% complete, ETA 15:37:32
# Fork: 1 of 1
# Warmup Iteration   1: 95.601 ms/op
# Warmup Iteration   2: 88.180 ms/op
# Warmup Iteration   3: 89.971 ms/op
# Warmup Iteration   4: 88.457 ms/op
# Warmup Iteration   5: 88.195 ms/op
Iteration   1: 88.404 ms/op
Iteration   2: 88.118 ms/op
Iteration   3: 121.803 ms/op
Iteration   4: 166.700 ms/op
Iteration   5: 157.100 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  124.425 ±(99.9%) 142.493 ms/op [Average]
  (min, avg, max) = (88.118, 124.425, 166.700), stdev = 37.005
  CI (99.9%): [? 0, 266.918] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 48.11% complete, ETA 15:34:11
# Fork: 1 of 1
# Warmup Iteration   1: 17872.328 ms/op
# Warmup Iteration   2: 24246.396 ms/op
# Warmup Iteration   3: 24453.043 ms/op
# Warmup Iteration   4: 24228.046 ms/op
# Warmup Iteration   5: 23833.804 ms/op
Iteration   1: 23729.913 ms/op
Iteration   2: 23909.548 ms/op
Iteration   3: 23095.728 ms/op
Iteration   4: 23301.776 ms/op
Iteration   5: 22613.631 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  23330.119 ±(99.9%) 1986.603 ms/op [Average]
  (min, avg, max) = (22613.631, 23330.119, 23909.548), stdev = 515.914
  CI (99.9%): [21343.516, 25316.722] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 48.20% complete, ETA 15:34:49
# Fork: 1 of 1
# Warmup Iteration   1: 17448.321 ms/op
# Warmup Iteration   2: 23334.483 ms/op
# Warmup Iteration   3: 25539.309 ms/op
# Warmup Iteration   4: 24942.813 ms/op
# Warmup Iteration   5: 23620.727 ms/op
Iteration   1: 23983.441 ms/op
Iteration   2: 25319.003 ms/op
Iteration   3: 27950.805 ms/op
Iteration   4: 26244.156 ms/op
Iteration   5: 24342.347 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  25567.950 ±(99.9%) 6151.999 ms/op [Average]
  (min, avg, max) = (23983.441, 25567.950, 27950.805), stdev = 1597.655
  CI (99.9%): [19415.951, 31719.949] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 48.30% complete, ETA 15:35:38
# Fork: 1 of 1
# Warmup Iteration   1: 6.114 ms/op
# Warmup Iteration   2: 5.633 ms/op
# Warmup Iteration   3: 5.631 ms/op
# Warmup Iteration   4: 5.572 ms/op
# Warmup Iteration   5: 5.650 ms/op
Iteration   1: 5.633 ms/op
Iteration   2: 5.702 ms/op
Iteration   3: 7.170 ms/op
Iteration   4: 10.060 ms/op
Iteration   5: 10.540 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  7.821 ±(99.9%) 9.052 ms/op [Average]
  (min, avg, max) = (5.633, 7.821, 10.540), stdev = 2.351
  CI (99.9%): [? 0, 16.873] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 48.39% complete, ETA 15:32:17
# Fork: 1 of 1
# Warmup Iteration   1: 6.269 ms/op
# Warmup Iteration   2: 5.757 ms/op
# Warmup Iteration   3: 5.746 ms/op
# Warmup Iteration   4: 5.817 ms/op
# Warmup Iteration   5: 5.751 ms/op
Iteration   1: 5.802 ms/op
Iteration   2: 5.760 ms/op
Iteration   3: 6.550 ms/op
Iteration   4: 10.700 ms/op
Iteration   5: 10.460 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  7.854 ±(99.9%) 9.663 ms/op [Average]
  (min, avg, max) = (5.760, 7.854, 10.700), stdev = 2.509
  CI (99.9%): [? 0, 17.518] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 48.48% complete, ETA 15:28:57
# Fork: 1 of 1
# Warmup Iteration   1: 191.469 ms/op
# Warmup Iteration   2: 176.749 ms/op
# Warmup Iteration   3: 175.866 ms/op
# Warmup Iteration   4: 175.593 ms/op
# Warmup Iteration   5: 174.675 ms/op
Iteration   1: 175.770 ms/op
Iteration   2: 175.362 ms/op
Iteration   3: 318.778 ms/op
Iteration   4: 304.943 ms/op
Iteration   5: 327.701 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  260.511 ±(99.9%) 300.222 ms/op [Average]
  (min, avg, max) = (175.362, 260.511, 327.701), stdev = 77.967
  CI (99.9%): [? 0, 560.733] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 48.58% complete, ETA 15:25:38
# Fork: 1 of 1
# Warmup Iteration   1: 192.404 ms/op
# Warmup Iteration   2: 178.767 ms/op
# Warmup Iteration   3: 175.078 ms/op
# Warmup Iteration   4: 174.479 ms/op
# Warmup Iteration   5: 179.409 ms/op
Iteration   1: 175.822 ms/op
Iteration   2: 176.823 ms/op
Iteration   3: 293.933 ms/op
Iteration   4: 342.719 ms/op
Iteration   5: 293.076 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  256.475 ±(99.9%) 292.182 ms/op [Average]
  (min, avg, max) = (175.822, 256.475, 342.719), stdev = 75.879
  CI (99.9%): [? 0, 548.656] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 48.67% complete, ETA 15:22:20
# Fork: 1 of 1
# Warmup Iteration   1: 56896.467 ms/op
# Warmup Iteration   2: 68469.070 ms/op
# Warmup Iteration   3: 68454.560 ms/op
# Warmup Iteration   4: 67330.025 ms/op
# Warmup Iteration   5: 65532.967 ms/op
Iteration   1: 68784.901 ms/op
Iteration   2: 52401.180 ms/op
Iteration   3: 50272.607 ms/op
Iteration   4: 58002.163 ms/op
Iteration   5: 69578.320 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  59807.834 ±(99.9%) 34714.022 ms/op [Average]
  (min, avg, max) = (50272.607, 59807.834, 69578.320), stdev = 9015.121
  CI (99.9%): [25093.812, 94521.856] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 48.77% complete, ETA 15:29:49
# Fork: 1 of 1
# Warmup Iteration   1: 52222.234 ms/op
# Warmup Iteration   2: 60703.567 ms/op
# Warmup Iteration   3: 56635.739 ms/op
# Warmup Iteration   4: 59493.077 ms/op
# Warmup Iteration   5: 55461.274 ms/op
Iteration   1: 57389.690 ms/op
Iteration   2: 61022.187 ms/op
Iteration   3: 50788.701 ms/op
Iteration   4: 60243.574 ms/op
Iteration   5: 66210.500 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  59130.930 ±(99.9%) 21745.048 ms/op [Average]
  (min, avg, max) = (50788.701, 59130.930, 66210.500), stdev = 5647.120
  CI (99.9%): [37385.883, 80875.978] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 48.86% complete, ETA 15:36:27
# Fork: 1 of 1
# Warmup Iteration   1: 13.757 ms/op
# Warmup Iteration   2: 13.021 ms/op
# Warmup Iteration   3: 12.323 ms/op
# Warmup Iteration   4: 12.188 ms/op
# Warmup Iteration   5: 12.567 ms/op
Iteration   1: 11.696 ms/op
Iteration   2: 11.548 ms/op
Iteration   3: 13.612 ms/op
Iteration   4: 22.428 ms/op
Iteration   5: 21.359 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  16.128 ±(99.9%) 20.557 ms/op [Average]
  (min, avg, max) = (11.548, 16.128, 22.428), stdev = 5.339
  CI (99.9%): [? 0, 36.685] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 48.96% complete, ETA 15:33:06
# Fork: 1 of 1
# Warmup Iteration   1: 15.611 ms/op
# Warmup Iteration   2: 13.656 ms/op
# Warmup Iteration   3: 12.876 ms/op
# Warmup Iteration   4: 12.622 ms/op
# Warmup Iteration   5: 13.154 ms/op
Iteration   1: 12.588 ms/op
Iteration   2: 12.889 ms/op
Iteration   3: 15.557 ms/op
Iteration   4: 23.314 ms/op
Iteration   5: 22.566 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  17.383 ±(99.9%) 20.060 ms/op [Average]
  (min, avg, max) = (12.588, 17.383, 23.314), stdev = 5.210
  CI (99.9%): [? 0, 37.443] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 49.05% complete, ETA 15:29:45
# Fork: 1 of 1
# Warmup Iteration   1: 428.781 ms/op
# Warmup Iteration   2: 397.145 ms/op
# Warmup Iteration   3: 400.769 ms/op
# Warmup Iteration   4: 392.967 ms/op
# Warmup Iteration   5: 379.990 ms/op
Iteration   1: 388.248 ms/op
Iteration   2: 529.184 ms/op
Iteration   3: 726.283 ms/op
Iteration   4: 693.549 ms/op
Iteration   5: 674.272 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  602.307 ±(99.9%) 544.708 ms/op [Average]
  (min, avg, max) = (388.248, 602.307, 726.283), stdev = 141.459
  CI (99.9%): [57.600, 1147.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 49.15% complete, ETA 15:26:27
# Fork: 1 of 1
# Warmup Iteration   1: 405.910 ms/op
# Warmup Iteration   2: 408.253 ms/op
# Warmup Iteration   3: 420.757 ms/op
# Warmup Iteration   4: 397.648 ms/op
# Warmup Iteration   5: 388.993 ms/op
Iteration   1: 395.775 ms/op
Iteration   2: 549.761 ms/op
Iteration   3: 655.694 ms/op
Iteration   4: 651.541 ms/op
Iteration   5: 702.334 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  591.021 ±(99.9%) 471.839 ms/op [Average]
  (min, avg, max) = (395.775, 591.021, 702.334), stdev = 122.535
  CI (99.9%): [119.182, 1062.860] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 49.24% complete, ETA 15:23:11
# Fork: 1 of 1
# Warmup Iteration   1: 117430.987 ms/op
# Warmup Iteration   2: 105492.971 ms/op
# Warmup Iteration   3: 108398.495 ms/op
# Warmup Iteration   4: 108056.850 ms/op
# Warmup Iteration   5: 111575.025 ms/op
Iteration   1: 103973.655 ms/op
Iteration   2: 109904.304 ms/op
Iteration   3: 101341.049 ms/op
Iteration   4: 96084.603 ms/op
Iteration   5: 102546.357 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  102769.994 ±(99.9%) 19169.628 ms/op [Average]
  (min, avg, max) = (96084.603, 102769.994, 109904.304), stdev = 4978.291
  CI (99.9%): [83600.366, 121939.621] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 49.34% complete, ETA 15:37:56
# Fork: 1 of 1
# Warmup Iteration   1: 94630.498 ms/op
# Warmup Iteration   2: 104341.357 ms/op
# Warmup Iteration   3: 104135.820 ms/op
# Warmup Iteration   4: 103979.461 ms/op
# Warmup Iteration   5: 103726.882 ms/op
Iteration   1: 102753.107 ms/op
Iteration   2: 107129.129 ms/op
Iteration   3: 99613.452 ms/op
Iteration   4: 101840.655 ms/op
Iteration   5: 103897.335 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  103046.735 ±(99.9%) 10670.825 ms/op [Average]
  (min, avg, max) = (99613.452, 103046.735, 107129.129), stdev = 2771.179
  CI (99.9%): [92375.911, 113717.560] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 49.43% complete, ETA 15:51:55
# Fork: 1 of 1
# Warmup Iteration   1: 25.606 ms/op
# Warmup Iteration   2: 22.995 ms/op
# Warmup Iteration   3: 23.225 ms/op
# Warmup Iteration   4: 23.454 ms/op
# Warmup Iteration   5: 23.300 ms/op
Iteration   1: 23.200 ms/op
Iteration   2: 23.416 ms/op
Iteration   3: 28.645 ms/op
Iteration   4: 48.455 ms/op
Iteration   5: 46.082 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  33.960 ±(99.9%) 47.638 ms/op [Average]
  (min, avg, max) = (23.200, 33.960, 48.455), stdev = 12.372
  CI (99.9%): [? 0, 81.598] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 49.53% complete, ETA 15:48:30
# Fork: 1 of 1
# Warmup Iteration   1: 25.261 ms/op
# Warmup Iteration   2: 23.584 ms/op
# Warmup Iteration   3: 23.868 ms/op
# Warmup Iteration   4: 22.963 ms/op
# Warmup Iteration   5: 23.340 ms/op
Iteration   1: 23.630 ms/op
Iteration   2: 22.606 ms/op
Iteration   3: 26.780 ms/op
Iteration   4: 42.542 ms/op
Iteration   5: 44.848 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  32.081 ±(99.9%) 41.370 ms/op [Average]
  (min, avg, max) = (22.606, 32.081, 44.848), stdev = 10.744
  CI (99.9%): [? 0, 73.452] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 49.62% complete, ETA 15:45:05
# Fork: 1 of 1
# Warmup Iteration   1: 752.931 ms/op
# Warmup Iteration   2: 705.328 ms/op
# Warmup Iteration   3: 705.375 ms/op
# Warmup Iteration   4: 709.883 ms/op
# Warmup Iteration   5: 709.056 ms/op
Iteration   1: 1021.295 ms/op
Iteration   2: 1263.530 ms/op
Iteration   3: 1312.718 ms/op
Iteration   4: 1273.959 ms/op
Iteration   5: 1272.424 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1228.785 ±(99.9%) 452.550 ms/op [Average]
  (min, avg, max) = (1021.295, 1228.785, 1312.718), stdev = 117.526
  CI (99.9%): [776.236, 1681.335] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 49.72% complete, ETA 15:41:46
# Fork: 1 of 1
# Warmup Iteration   1: 806.394 ms/op
# Warmup Iteration   2: 723.839 ms/op
# Warmup Iteration   3: 712.053 ms/op
# Warmup Iteration   4: 720.183 ms/op
# Warmup Iteration   5: 708.000 ms/op
Iteration   1: 1074.298 ms/op
Iteration   2: 1362.190 ms/op
Iteration   3: 1235.549 ms/op
Iteration   4: 1291.686 ms/op
Iteration   5: 1175.136 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  1227.772 ±(99.9%) 424.176 ms/op [Average]
  (min, avg, max) = (1074.298, 1227.772, 1362.190), stdev = 110.157
  CI (99.9%): [803.596, 1651.948] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 49.81% complete, ETA 15:38:27
# Fork: 1 of 1
# Warmup Iteration   1: 213106.236 ms/op
# Warmup Iteration   2: 217879.232 ms/op
# Warmup Iteration   3: 214170.814 ms/op
# Warmup Iteration   4: 216875.308 ms/op
# Warmup Iteration   5: 219075.422 ms/op
Iteration   1: 218268.460 ms/op
Iteration   2: 216244.056 ms/op
Iteration   3: 200725.650 ms/op
Iteration   4: 215433.912 ms/op
Iteration   5: 210904.932 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  212315.402 ±(99.9%) 27017.016 ms/op [Average]
  (min, avg, max) = (200725.650, 212315.402, 218268.460), stdev = 7016.233
  CI (99.9%): [185298.386, 239332.418] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 49.91% complete, ETA 16:10:46
# Fork: 1 of 1
# Warmup Iteration   1: 190950.698 ms/op
# Warmup Iteration   2: 196626.099 ms/op
# Warmup Iteration   3: 210302.635 ms/op
# Warmup Iteration   4: 204589.511 ms/op
# Warmup Iteration   5: 203749.965 ms/op
Iteration   1: 200708.901 ms/op
Iteration   2: 202307.373 ms/op
Iteration   3: 203904.260 ms/op
Iteration   4: 202778.054 ms/op
Iteration   5: 200280.774 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous":
  201995.872 ±(99.9%) 5759.462 ms/op [Average]
  (min, avg, max) = (200280.774, 201995.872, 203904.260), stdev = 1495.714
  CI (99.9%): [196236.410, 207755.335] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 50.00% complete, ETA 16:40:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.003 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 50.09% complete, ETA 16:37:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 50.19% complete, ETA 16:33:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 50.28% complete, ETA 16:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 50.38% complete, ETA 16:26:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 50.47% complete, ETA 16:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 50.57% complete, ETA 16:19:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 50.66% complete, ETA 16:15:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 50.76% complete, ETA 16:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [0.001, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 50.85% complete, ETA 16:08:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 50.95% complete, ETA 16:05:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 51.04% complete, ETA 16:01:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.002, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 51.14% complete, ETA 15:58:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.011), stdev = 0.002
  CI (99.9%): [0.002, 0.017] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 51.23% complete, ETA 15:54:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.012 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.010 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.008, 0.010, 0.012), stdev = 0.002
  CI (99.9%): [0.002, 0.017] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 51.33% complete, ETA 15:51:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.012 ms/op
Iteration   5: 0.011 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.011 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.008, 0.011, 0.013), stdev = 0.002
  CI (99.9%): [0.003, 0.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 51.42% complete, ETA 15:47:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.008, 0.009, 0.011), stdev = 0.002
  CI (99.9%): [0.003, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 51.52% complete, ETA 15:44:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.004, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 51.61% complete, ETA 15:41:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.008 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 51.70% complete, ETA 15:37:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.017 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.013, 0.017, 0.020), stdev = 0.003
  CI (99.9%): [0.005, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 51.80% complete, ETA 15:34:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.017 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.014, 0.017, 0.020), stdev = 0.003
  CI (99.9%): [0.005, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 51.89% complete, ETA 15:31:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.020 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.016 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.016 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.012, 0.016, 0.020), stdev = 0.003
  CI (99.9%): [0.005, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 51.99% complete, ETA 15:27:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.019 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.016 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.014, 0.016, 0.019), stdev = 0.002
  CI (99.9%): [0.007, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 52.08% complete, ETA 15:24:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.019 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.017 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.013, 0.017, 0.021), stdev = 0.004
  CI (99.9%): [0.002, 0.031] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 52.18% complete, ETA 15:20:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.016 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.013, 0.016, 0.020), stdev = 0.003
  CI (99.9%): [0.005, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 52.27% complete, ETA 15:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.039 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.030 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.031 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.031 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.026, 0.031, 0.036), stdev = 0.004
  CI (99.9%): [0.015, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 52.37% complete, ETA 15:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.030 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.032 ms/op
Iteration   4: 0.040 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.032 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.026, 0.032, 0.040), stdev = 0.005
  CI (99.9%): [0.012, 0.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 52.46% complete, ETA 15:11:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.040 ms/op
# Warmup Iteration   2: 0.029 ms/op
# Warmup Iteration   3: 0.031 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.041 ms/op
Iteration   4: 0.042 ms/op
Iteration   5: 0.039 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.035 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.027, 0.035, 0.042), stdev = 0.008
  CI (99.9%): [0.006, 0.064] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 52.56% complete, ETA 15:07:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.031 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.029 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.041 ms/op
Iteration   4: 0.037 ms/op
Iteration   5: 0.038 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.035 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.029, 0.035, 0.041), stdev = 0.006
  CI (99.9%): [0.013, 0.057] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 52.65% complete, ETA 15:04:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.036 ms/op
# Warmup Iteration   2: 0.032 ms/op
# Warmup Iteration   3: 0.031 ms/op
# Warmup Iteration   4: 0.032 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.038 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.037 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.029, 0.037, 0.051), stdev = 0.009
  CI (99.9%): [0.004, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 52.75% complete, ETA 15:01:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.036 ms/op
# Warmup Iteration   2: 0.034 ms/op
# Warmup Iteration   3: 0.033 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.031 ms/op
Iteration   1: 0.032 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.046 ms/op
Iteration   4: 0.053 ms/op
Iteration   5: 0.038 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.040 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.030, 0.040, 0.053), stdev = 0.010
  CI (99.9%): [0.002, 0.077] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 52.84% complete, ETA 14:57:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.077 ms/op
# Warmup Iteration   2: 0.070 ms/op
# Warmup Iteration   3: 0.068 ms/op
# Warmup Iteration   4: 0.064 ms/op
# Warmup Iteration   5: 0.067 ms/op
Iteration   1: 0.063 ms/op
Iteration   2: 0.060 ms/op
Iteration   3: 0.081 ms/op
Iteration   4: 0.093 ms/op
Iteration   5: 0.083 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.076 ±(99.9%) 0.054 ms/op [Average]
  (min, avg, max) = (0.060, 0.076, 0.093), stdev = 0.014
  CI (99.9%): [0.022, 0.130] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 52.94% complete, ETA 14:54:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.083 ms/op
# Warmup Iteration   2: 0.064 ms/op
# Warmup Iteration   3: 0.072 ms/op
# Warmup Iteration   4: 0.068 ms/op
# Warmup Iteration   5: 0.069 ms/op
Iteration   1: 0.068 ms/op
Iteration   2: 0.066 ms/op
Iteration   3: 0.094 ms/op
Iteration   4: 0.114 ms/op
Iteration   5: 0.086 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.086 ±(99.9%) 0.076 ms/op [Average]
  (min, avg, max) = (0.066, 0.086, 0.114), stdev = 0.020
  CI (99.9%): [0.010, 0.162] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 53.03% complete, ETA 14:51:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.089 ms/op
# Warmup Iteration   2: 0.069 ms/op
# Warmup Iteration   3: 0.074 ms/op
# Warmup Iteration   4: 0.070 ms/op
# Warmup Iteration   5: 0.074 ms/op
Iteration   1: 0.069 ms/op
Iteration   2: 0.073 ms/op
Iteration   3: 0.082 ms/op
Iteration   4: 0.117 ms/op
Iteration   5: 0.106 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.089 ±(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (0.069, 0.089, 0.117), stdev = 0.021
  CI (99.9%): [0.008, 0.171] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 53.13% complete, ETA 14:48:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.095 ms/op
# Warmup Iteration   2: 0.077 ms/op
# Warmup Iteration   3: 0.074 ms/op
# Warmup Iteration   4: 0.074 ms/op
# Warmup Iteration   5: 0.073 ms/op
Iteration   1: 0.071 ms/op
Iteration   2: 0.065 ms/op
Iteration   3: 0.090 ms/op
Iteration   4: 0.096 ms/op
Iteration   5: 0.089 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.082 ±(99.9%) 0.050 ms/op [Average]
  (min, avg, max) = (0.065, 0.082, 0.096), stdev = 0.013
  CI (99.9%): [0.032, 0.133] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 53.22% complete, ETA 14:45:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
# Warmup Iteration   2: 0.071 ms/op
# Warmup Iteration   3: 0.067 ms/op
# Warmup Iteration   4: 0.063 ms/op
# Warmup Iteration   5: 0.067 ms/op
Iteration   1: 0.060 ms/op
Iteration   2: 0.064 ms/op
Iteration   3: 0.089 ms/op
Iteration   4: 0.097 ms/op
Iteration   5: 0.083 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.079 ±(99.9%) 0.062 ms/op [Average]
  (min, avg, max) = (0.060, 0.079, 0.097), stdev = 0.016
  CI (99.9%): [0.016, 0.141] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 53.31% complete, ETA 14:41:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.070 ms/op
# Warmup Iteration   2: 0.063 ms/op
# Warmup Iteration   3: 0.059 ms/op
# Warmup Iteration   4: 0.060 ms/op
# Warmup Iteration   5: 0.058 ms/op
Iteration   1: 0.061 ms/op
Iteration   2: 0.064 ms/op
Iteration   3: 0.104 ms/op
Iteration   4: 0.093 ms/op
Iteration   5: 0.085 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.081 ±(99.9%) 0.071 ms/op [Average]
  (min, avg, max) = (0.061, 0.081, 0.104), stdev = 0.018
  CI (99.9%): [0.011, 0.152] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 53.41% complete, ETA 14:38:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.151 ms/op
# Warmup Iteration   2: 0.119 ms/op
# Warmup Iteration   3: 0.120 ms/op
# Warmup Iteration   4: 0.122 ms/op
# Warmup Iteration   5: 0.117 ms/op
Iteration   1: 0.106 ms/op
Iteration   2: 0.102 ms/op
Iteration   3: 0.149 ms/op
Iteration   4: 0.150 ms/op
Iteration   5: 0.140 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.129 ±(99.9%) 0.092 ms/op [Average]
  (min, avg, max) = (0.102, 0.129, 0.150), stdev = 0.024
  CI (99.9%): [0.038, 0.221] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 53.50% complete, ETA 14:35:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.156 ms/op
# Warmup Iteration   2: 0.115 ms/op
# Warmup Iteration   3: 0.117 ms/op
# Warmup Iteration   4: 0.114 ms/op
# Warmup Iteration   5: 0.103 ms/op
Iteration   1: 0.103 ms/op
Iteration   2: 0.116 ms/op
Iteration   3: 0.129 ms/op
Iteration   4: 0.142 ms/op
Iteration   5: 0.144 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.127 ±(99.9%) 0.067 ms/op [Average]
  (min, avg, max) = (0.103, 0.127, 0.144), stdev = 0.017
  CI (99.9%): [0.060, 0.194] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 53.60% complete, ETA 14:32:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.154 ms/op
# Warmup Iteration   2: 0.115 ms/op
# Warmup Iteration   3: 0.119 ms/op
# Warmup Iteration   4: 0.112 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.108 ms/op
Iteration   2: 0.109 ms/op
Iteration   3: 0.125 ms/op
Iteration   4: 0.155 ms/op
Iteration   5: 0.155 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.131 ±(99.9%) 0.090 ms/op [Average]
  (min, avg, max) = (0.108, 0.131, 0.155), stdev = 0.023
  CI (99.9%): [0.041, 0.220] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 53.69% complete, ETA 14:29:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.159 ms/op
# Warmup Iteration   2: 0.114 ms/op
# Warmup Iteration   3: 0.116 ms/op
# Warmup Iteration   4: 0.115 ms/op
# Warmup Iteration   5: 0.103 ms/op
Iteration   1: 0.109 ms/op
Iteration   2: 0.111 ms/op
Iteration   3: 0.120 ms/op
Iteration   4: 0.161 ms/op
Iteration   5: 0.130 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.126 ±(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (0.109, 0.126, 0.161), stdev = 0.021
  CI (99.9%): [0.044, 0.208] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 53.79% complete, ETA 14:25:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.143 ms/op
# Warmup Iteration   2: 0.121 ms/op
# Warmup Iteration   3: 0.112 ms/op
# Warmup Iteration   4: 0.110 ms/op
# Warmup Iteration   5: 0.116 ms/op
Iteration   1: 0.102 ms/op
Iteration   2: 0.115 ms/op
Iteration   3: 0.131 ms/op
Iteration   4: 0.162 ms/op
Iteration   5: 0.146 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.131 ±(99.9%) 0.092 ms/op [Average]
  (min, avg, max) = (0.102, 0.131, 0.162), stdev = 0.024
  CI (99.9%): [0.039, 0.223] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 53.88% complete, ETA 14:22:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.143 ms/op
# Warmup Iteration   2: 0.116 ms/op
# Warmup Iteration   3: 0.104 ms/op
# Warmup Iteration   4: 0.122 ms/op
# Warmup Iteration   5: 0.101 ms/op
Iteration   1: 0.099 ms/op
Iteration   2: 0.110 ms/op
Iteration   3: 0.117 ms/op
Iteration   4: 0.152 ms/op
Iteration   5: 0.171 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.130 ±(99.9%) 0.117 ms/op [Average]
  (min, avg, max) = (0.099, 0.130, 0.171), stdev = 0.030
  CI (99.9%): [0.013, 0.246] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 53.98% complete, ETA 14:19:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.297 ms/op
# Warmup Iteration   2: 0.241 ms/op
# Warmup Iteration   3: 0.224 ms/op
# Warmup Iteration   4: 0.235 ms/op
# Warmup Iteration   5: 0.205 ms/op
Iteration   1: 0.218 ms/op
Iteration   2: 0.217 ms/op
Iteration   3: 0.297 ms/op
Iteration   4: 0.333 ms/op
Iteration   5: 0.313 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.276 ±(99.9%) 0.211 ms/op [Average]
  (min, avg, max) = (0.217, 0.276, 0.333), stdev = 0.055
  CI (99.9%): [0.065, 0.486] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 54.07% complete, ETA 14:16:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.323 ms/op
# Warmup Iteration   2: 0.230 ms/op
# Warmup Iteration   3: 0.238 ms/op
# Warmup Iteration   4: 0.232 ms/op
# Warmup Iteration   5: 0.227 ms/op
Iteration   1: 0.232 ms/op
Iteration   2: 0.233 ms/op
Iteration   3: 0.324 ms/op
Iteration   4: 0.326 ms/op
Iteration   5: 0.292 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.281 ±(99.9%) 0.179 ms/op [Average]
  (min, avg, max) = (0.232, 0.281, 0.326), stdev = 0.046
  CI (99.9%): [0.102, 0.460] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 54.17% complete, ETA 14:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.309 ms/op
# Warmup Iteration   2: 0.234 ms/op
# Warmup Iteration   3: 0.262 ms/op
# Warmup Iteration   4: 0.240 ms/op
# Warmup Iteration   5: 0.237 ms/op
Iteration   1: 0.227 ms/op
Iteration   2: 0.229 ms/op
Iteration   3: 0.315 ms/op
Iteration   4: 0.368 ms/op
Iteration   5: 0.287 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.285 ±(99.9%) 0.230 ms/op [Average]
  (min, avg, max) = (0.227, 0.285, 0.368), stdev = 0.060
  CI (99.9%): [0.055, 0.516] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 54.26% complete, ETA 14:10:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.318 ms/op
# Warmup Iteration   2: 0.242 ms/op
# Warmup Iteration   3: 0.267 ms/op
# Warmup Iteration   4: 0.256 ms/op
# Warmup Iteration   5: 0.252 ms/op
Iteration   1: 0.234 ms/op
Iteration   2: 0.223 ms/op
Iteration   3: 0.353 ms/op
Iteration   4: 0.353 ms/op
Iteration   5: 0.281 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.289 ±(99.9%) 0.242 ms/op [Average]
  (min, avg, max) = (0.223, 0.289, 0.353), stdev = 0.063
  CI (99.9%): [0.047, 0.530] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 54.36% complete, ETA 14:07:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.285 ms/op
# Warmup Iteration   2: 0.246 ms/op
# Warmup Iteration   3: 0.252 ms/op
# Warmup Iteration   4: 0.266 ms/op
# Warmup Iteration   5: 0.246 ms/op
Iteration   1: 0.242 ms/op
Iteration   2: 0.225 ms/op
Iteration   3: 0.423 ms/op
Iteration   4: 0.372 ms/op
Iteration   5: 0.301 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.313 ±(99.9%) 0.325 ms/op [Average]
  (min, avg, max) = (0.225, 0.313, 0.423), stdev = 0.084
  CI (99.9%): [? 0, 0.638] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 54.45% complete, ETA 14:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.304 ms/op
# Warmup Iteration   2: 0.277 ms/op
# Warmup Iteration   3: 0.259 ms/op
# Warmup Iteration   4: 0.245 ms/op
# Warmup Iteration   5: 0.268 ms/op
Iteration   1: 0.231 ms/op
Iteration   2: 0.259 ms/op
Iteration   3: 0.366 ms/op
Iteration   4: 0.428 ms/op
Iteration   5: 0.304 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.318 ±(99.9%) 0.308 ms/op [Average]
  (min, avg, max) = (0.231, 0.318, 0.428), stdev = 0.080
  CI (99.9%): [0.009, 0.626] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 54.55% complete, ETA 14:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.610 ms/op
# Warmup Iteration   2: 0.599 ms/op
# Warmup Iteration   3: 0.565 ms/op
# Warmup Iteration   4: 0.556 ms/op
# Warmup Iteration   5: 0.579 ms/op
Iteration   1: 0.538 ms/op
Iteration   2: 0.500 ms/op
Iteration   3: 0.716 ms/op
Iteration   4: 0.882 ms/op
Iteration   5: 0.750 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.677 ±(99.9%) 0.607 ms/op [Average]
  (min, avg, max) = (0.500, 0.677, 0.882), stdev = 0.158
  CI (99.9%): [0.070, 1.284] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 54.64% complete, ETA 13:58:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.622 ms/op
# Warmup Iteration   2: 0.504 ms/op
# Warmup Iteration   3: 0.545 ms/op
# Warmup Iteration   4: 0.481 ms/op
# Warmup Iteration   5: 0.497 ms/op
Iteration   1: 0.469 ms/op
Iteration   2: 0.462 ms/op
Iteration   3: 0.729 ms/op
Iteration   4: 0.651 ms/op
Iteration   5: 0.617 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.586 ±(99.9%) 0.450 ms/op [Average]
  (min, avg, max) = (0.462, 0.586, 0.729), stdev = 0.117
  CI (99.9%): [0.136, 1.036] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 54.73% complete, ETA 13:55:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.606 ms/op
# Warmup Iteration   2: 0.465 ms/op
# Warmup Iteration   3: 0.532 ms/op
# Warmup Iteration   4: 0.491 ms/op
# Warmup Iteration   5: 0.464 ms/op
Iteration   1: 0.422 ms/op
Iteration   2: 0.435 ms/op
Iteration   3: 0.612 ms/op
Iteration   4: 0.562 ms/op
Iteration   5: 0.570 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.520 ±(99.9%) 0.331 ms/op [Average]
  (min, avg, max) = (0.422, 0.520, 0.612), stdev = 0.086
  CI (99.9%): [0.190, 0.851] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 54.83% complete, ETA 13:51:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.610 ms/op
# Warmup Iteration   2: 0.455 ms/op
# Warmup Iteration   3: 0.456 ms/op
# Warmup Iteration   4: 0.457 ms/op
# Warmup Iteration   5: 0.419 ms/op
Iteration   1: 0.428 ms/op
Iteration   2: 0.461 ms/op
Iteration   3: 0.548 ms/op
Iteration   4: 0.588 ms/op
Iteration   5: 0.689 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.543 ±(99.9%) 0.400 ms/op [Average]
  (min, avg, max) = (0.428, 0.543, 0.689), stdev = 0.104
  CI (99.9%): [0.142, 0.943] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 54.92% complete, ETA 13:48:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.570 ms/op
# Warmup Iteration   2: 0.468 ms/op
# Warmup Iteration   3: 0.445 ms/op
# Warmup Iteration   4: 0.478 ms/op
# Warmup Iteration   5: 0.464 ms/op
Iteration   1: 0.447 ms/op
Iteration   2: 0.433 ms/op
Iteration   3: 0.686 ms/op
Iteration   4: 0.599 ms/op
Iteration   5: 0.601 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.553 ±(99.9%) 0.421 ms/op [Average]
  (min, avg, max) = (0.433, 0.553, 0.686), stdev = 0.109
  CI (99.9%): [0.132, 0.974] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 55.02% complete, ETA 13:45:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.583 ms/op
# Warmup Iteration   2: 0.482 ms/op
# Warmup Iteration   3: 0.451 ms/op
# Warmup Iteration   4: 0.442 ms/op
# Warmup Iteration   5: 0.461 ms/op
Iteration   1: 0.431 ms/op
Iteration   2: 0.410 ms/op
Iteration   3: 0.674 ms/op
Iteration   4: 0.584 ms/op
Iteration   5: 0.637 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.547 ±(99.9%) 0.463 ms/op [Average]
  (min, avg, max) = (0.410, 0.547, 0.674), stdev = 0.120
  CI (99.9%): [0.084, 1.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 55.11% complete, ETA 13:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 1.275 ms/op
# Warmup Iteration   2: 0.902 ms/op
# Warmup Iteration   3: 0.945 ms/op
# Warmup Iteration   4: 0.904 ms/op
# Warmup Iteration   5: 0.840 ms/op
Iteration   1: 0.842 ms/op
Iteration   2: 0.901 ms/op
Iteration   3: 0.943 ms/op
Iteration   4: 1.325 ms/op
Iteration   5: 1.055 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.013 ±(99.9%) 0.735 ms/op [Average]
  (min, avg, max) = (0.842, 1.013, 1.325), stdev = 0.191
  CI (99.9%): [0.278, 1.748] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 55.21% complete, ETA 13:39:56
# Fork: 1 of 1
# Warmup Iteration   1: 1.165 ms/op
# Warmup Iteration   2: 0.961 ms/op
# Warmup Iteration   3: 0.886 ms/op
# Warmup Iteration   4: 0.866 ms/op
# Warmup Iteration   5: 0.927 ms/op
Iteration   1: 0.899 ms/op
Iteration   2: 0.878 ms/op
Iteration   3: 1.140 ms/op
Iteration   4: 1.277 ms/op
Iteration   5: 1.201 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.079 ±(99.9%) 0.697 ms/op [Average]
  (min, avg, max) = (0.878, 1.079, 1.277), stdev = 0.181
  CI (99.9%): [0.383, 1.776] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 55.30% complete, ETA 13:36:57
# Fork: 1 of 1
# Warmup Iteration   1: 1.280 ms/op
# Warmup Iteration   2: 0.900 ms/op
# Warmup Iteration   3: 0.991 ms/op
# Warmup Iteration   4: 0.947 ms/op
# Warmup Iteration   5: 0.968 ms/op
Iteration   1: 0.922 ms/op
Iteration   2: 0.910 ms/op
Iteration   3: 1.222 ms/op
Iteration   4: 1.356 ms/op
Iteration   5: 1.261 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.134 ±(99.9%) 0.790 ms/op [Average]
  (min, avg, max) = (0.910, 1.134, 1.356), stdev = 0.205
  CI (99.9%): [0.344, 1.924] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 55.40% complete, ETA 13:33:58
# Fork: 1 of 1
# Warmup Iteration   1: 1.242 ms/op
# Warmup Iteration   2: 0.915 ms/op
# Warmup Iteration   3: 0.973 ms/op
# Warmup Iteration   4: 0.943 ms/op
# Warmup Iteration   5: 0.956 ms/op
Iteration   1: 0.989 ms/op
Iteration   2: 0.962 ms/op
Iteration   3: 1.286 ms/op
Iteration   4: 1.315 ms/op
Iteration   5: 1.156 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.142 ±(99.9%) 0.628 ms/op [Average]
  (min, avg, max) = (0.962, 1.142, 1.315), stdev = 0.163
  CI (99.9%): [0.513, 1.770] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 55.49% complete, ETA 13:31:00
# Fork: 1 of 1
# Warmup Iteration   1: 1.143 ms/op
# Warmup Iteration   2: 0.987 ms/op
# Warmup Iteration   3: 0.965 ms/op
# Warmup Iteration   4: 0.984 ms/op
# Warmup Iteration   5: 0.892 ms/op
Iteration   1: 0.923 ms/op
Iteration   2: 0.918 ms/op
Iteration   3: 1.547 ms/op
Iteration   4: 1.206 ms/op
Iteration   5: 1.109 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.141 ±(99.9%) 0.996 ms/op [Average]
  (min, avg, max) = (0.918, 1.141, 1.547), stdev = 0.259
  CI (99.9%): [0.144, 2.137] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 55.59% complete, ETA 13:28:02
# Fork: 1 of 1
# Warmup Iteration   1: 1.187 ms/op
# Warmup Iteration   2: 1.050 ms/op
# Warmup Iteration   3: 1.108 ms/op
# Warmup Iteration   4: 0.986 ms/op
# Warmup Iteration   5: 1.043 ms/op
Iteration   1: 0.937 ms/op
Iteration   2: 1.011 ms/op
Iteration   3: 1.377 ms/op
Iteration   4: 1.564 ms/op
Iteration   5: 1.167 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.211 ±(99.9%) 0.999 ms/op [Average]
  (min, avg, max) = (0.937, 1.211, 1.564), stdev = 0.260
  CI (99.9%): [0.212, 2.211] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 55.68% complete, ETA 13:25:05
# Fork: 1 of 1
# Warmup Iteration   1: 2.433 ms/op
# Warmup Iteration   2: 2.144 ms/op
# Warmup Iteration   3: 2.164 ms/op
# Warmup Iteration   4: 2.167 ms/op
# Warmup Iteration   5: 2.315 ms/op
Iteration   1: 2.040 ms/op
Iteration   2: 2.178 ms/op
Iteration   3: 2.649 ms/op
Iteration   4: 4.408 ms/op
Iteration   5: 2.527 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.760 ±(99.9%) 3.674 ms/op [Average]
  (min, avg, max) = (2.040, 2.760, 4.408), stdev = 0.954
  CI (99.9%): [? 0, 6.434] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 55.78% complete, ETA 13:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 2.510 ms/op
# Warmup Iteration   2: 2.457 ms/op
# Warmup Iteration   3: 2.245 ms/op
# Warmup Iteration   4: 2.141 ms/op
# Warmup Iteration   5: 2.191 ms/op
Iteration   1: 1.909 ms/op
Iteration   2: 1.874 ms/op
Iteration   3: 2.241 ms/op
Iteration   4: 3.307 ms/op
Iteration   5: 2.621 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.391 ±(99.9%) 2.289 ms/op [Average]
  (min, avg, max) = (1.874, 2.391, 3.307), stdev = 0.594
  CI (99.9%): [0.101, 4.680] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 55.87% complete, ETA 13:19:13
# Fork: 1 of 1
# Warmup Iteration   1: 2.419 ms/op
# Warmup Iteration   2: 1.911 ms/op
# Warmup Iteration   3: 2.061 ms/op
# Warmup Iteration   4: 2.007 ms/op
# Warmup Iteration   5: 1.941 ms/op
Iteration   1: 1.868 ms/op
Iteration   2: 1.984 ms/op
Iteration   3: 2.748 ms/op
Iteration   4: 2.721 ms/op
Iteration   5: 2.414 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.347 ±(99.9%) 1.572 ms/op [Average]
  (min, avg, max) = (1.868, 2.347, 2.748), stdev = 0.408
  CI (99.9%): [0.776, 3.919] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 55.97% complete, ETA 13:16:17
# Fork: 1 of 1
# Warmup Iteration   1: 2.522 ms/op
# Warmup Iteration   2: 1.845 ms/op
# Warmup Iteration   3: 1.848 ms/op
# Warmup Iteration   4: 1.756 ms/op
# Warmup Iteration   5: 1.781 ms/op
Iteration   1: 1.673 ms/op
Iteration   2: 1.786 ms/op
Iteration   3: 2.171 ms/op
Iteration   4: 2.468 ms/op
Iteration   5: 2.176 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.055 ±(99.9%) 1.244 ms/op [Average]
  (min, avg, max) = (1.673, 2.055, 2.468), stdev = 0.323
  CI (99.9%): [0.811, 3.299] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 56.06% complete, ETA 13:13:22
# Fork: 1 of 1
# Warmup Iteration   1: 2.342 ms/op
# Warmup Iteration   2: 1.936 ms/op
# Warmup Iteration   3: 1.810 ms/op
# Warmup Iteration   4: 1.807 ms/op
# Warmup Iteration   5: 1.824 ms/op
Iteration   1: 1.709 ms/op
Iteration   2: 1.700 ms/op
Iteration   3: 2.367 ms/op
Iteration   4: 2.478 ms/op
Iteration   5: 2.494 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.150 ±(99.9%) 1.576 ms/op [Average]
  (min, avg, max) = (1.700, 2.150, 2.494), stdev = 0.409
  CI (99.9%): [0.573, 3.726] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 56.16% complete, ETA 13:10:28
# Fork: 1 of 1
# Warmup Iteration   1: 2.320 ms/op
# Warmup Iteration   2: 1.912 ms/op
# Warmup Iteration   3: 1.742 ms/op
# Warmup Iteration   4: 1.887 ms/op
# Warmup Iteration   5: 1.757 ms/op
Iteration   1: 1.629 ms/op
Iteration   2: 1.821 ms/op
Iteration   3: 2.058 ms/op
Iteration   4: 2.591 ms/op
Iteration   5: 2.250 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.070 ±(99.9%) 1.441 ms/op [Average]
  (min, avg, max) = (1.629, 2.070, 2.591), stdev = 0.374
  CI (99.9%): [0.628, 3.511] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 56.25% complete, ETA 13:07:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 10?³, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 56.34% complete, ETA 13:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 10?³, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 56.44% complete, ETA 13:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 56.53% complete, ETA 12:58:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 56.63% complete, ETA 12:56:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 56.72% complete, ETA 12:53:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 56.82% complete, ETA 12:50:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 56.91% complete, ETA 12:47:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.002, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 57.01% complete, ETA 12:44:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 57.10% complete, ETA 12:41:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.002, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 57.20% complete, ETA 12:39:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.005 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.007), stdev = 0.001
  CI (99.9%): [0.001, 0.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 57.29% complete, ETA 12:36:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.006 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.004, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 57.39% complete, ETA 12:33:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.011 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.010 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.007, 0.010, 0.011), stdev = 0.002
  CI (99.9%): [0.002, 0.017] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 57.48% complete, ETA 12:30:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.012 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.012), stdev = 0.002
  CI (99.9%): [0.001, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 57.58% complete, ETA 12:28:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 57.67% complete, ETA 12:25:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.008 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 57.77% complete, ETA 12:22:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.006, 0.009, 0.011), stdev = 0.002
  CI (99.9%): [0.001, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 57.86% complete, ETA 12:19:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.009 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.012), stdev = 0.002
  CI (99.9%): [0.003, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 57.95% complete, ETA 12:17:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.020 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.019 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.017 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.014, 0.017, 0.021), stdev = 0.003
  CI (99.9%): [0.005, 0.030] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 58.05% complete, ETA 12:14:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.021 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.018 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.014, 0.018, 0.020), stdev = 0.003
  CI (99.9%): [0.006, 0.029] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 58.14% complete, ETA 12:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.018 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.015, 0.018, 0.022), stdev = 0.003
  CI (99.9%): [0.006, 0.030] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 58.24% complete, ETA 12:08:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.021 ms/op
Iteration   4: 0.024 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.019 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.015, 0.019, 0.024), stdev = 0.004
  CI (99.9%): [0.004, 0.034] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 58.33% complete, ETA 12:06:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.028 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.016 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.018 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.024 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.020 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.015, 0.020, 0.024), stdev = 0.004
  CI (99.9%): [0.004, 0.036] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 58.43% complete, ETA 12:03:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.019 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.015, 0.019, 0.025), stdev = 0.004
  CI (99.9%): [0.003, 0.034] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 58.52% complete, ETA 12:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.031 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.030 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.035 ms/op
Iteration   4: 0.035 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.032 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.027, 0.032, 0.035), stdev = 0.004
  CI (99.9%): [0.016, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 58.62% complete, ETA 11:58:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.038 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.033 ms/op
Iteration   4: 0.039 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.033 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.026, 0.033, 0.039), stdev = 0.005
  CI (99.9%): [0.013, 0.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 58.71% complete, ETA 11:55:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.037 ms/op
Iteration   4: 0.036 ms/op
Iteration   5: 0.042 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.034 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.027, 0.034, 0.042), stdev = 0.006
  CI (99.9%): [0.012, 0.057] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 58.81% complete, ETA 11:52:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.036 ms/op
# Warmup Iteration   2: 0.031 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.040 ms/op
Iteration   4: 0.040 ms/op
Iteration   5: 0.037 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.035 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.028, 0.035, 0.040), stdev = 0.006
  CI (99.9%): [0.012, 0.057] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 58.90% complete, ETA 11:50:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.043 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.031 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.032 ms/op
Iteration   3: 0.057 ms/op
Iteration   4: 0.039 ms/op
Iteration   5: 0.037 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.039 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (0.030, 0.039, 0.057), stdev = 0.011
  CI (99.9%): [? 0, 0.080] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 59.00% complete, ETA 11:47:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.031 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.033 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.039 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.038 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.029, 0.038, 0.051), stdev = 0.008
  CI (99.9%): [0.005, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 59.09% complete, ETA 11:44:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.080 ms/op
# Warmup Iteration   2: 0.060 ms/op
# Warmup Iteration   3: 0.071 ms/op
# Warmup Iteration   4: 0.065 ms/op
# Warmup Iteration   5: 0.069 ms/op
Iteration   1: 0.061 ms/op
Iteration   2: 0.065 ms/op
Iteration   3: 0.079 ms/op
Iteration   4: 0.110 ms/op
Iteration   5: 0.085 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.080 ±(99.9%) 0.075 ms/op [Average]
  (min, avg, max) = (0.061, 0.080, 0.110), stdev = 0.019
  CI (99.9%): [0.005, 0.155] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 59.19% complete, ETA 11:42:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.077 ms/op
# Warmup Iteration   2: 0.064 ms/op
# Warmup Iteration   3: 0.064 ms/op
# Warmup Iteration   4: 0.062 ms/op
# Warmup Iteration   5: 0.059 ms/op
Iteration   1: 0.058 ms/op
Iteration   2: 0.057 ms/op
Iteration   3: 0.074 ms/op
Iteration   4: 0.085 ms/op
Iteration   5: 0.076 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.070 ±(99.9%) 0.048 ms/op [Average]
  (min, avg, max) = (0.057, 0.070, 0.085), stdev = 0.012
  CI (99.9%): [0.022, 0.118] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 59.28% complete, ETA 11:39:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.078 ms/op
# Warmup Iteration   2: 0.060 ms/op
# Warmup Iteration   3: 0.059 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.056 ms/op
Iteration   1: 0.057 ms/op
Iteration   2: 0.053 ms/op
Iteration   3: 0.074 ms/op
Iteration   4: 0.077 ms/op
Iteration   5: 0.077 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.068 ±(99.9%) 0.044 ms/op [Average]
  (min, avg, max) = (0.053, 0.068, 0.077), stdev = 0.012
  CI (99.9%): [0.023, 0.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 59.38% complete, ETA 11:36:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.075 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.060 ms/op
# Warmup Iteration   4: 0.056 ms/op
# Warmup Iteration   5: 0.055 ms/op
Iteration   1: 0.053 ms/op
Iteration   2: 0.058 ms/op
Iteration   3: 0.066 ms/op
Iteration   4: 0.074 ms/op
Iteration   5: 0.069 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.064 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.053, 0.064, 0.074), stdev = 0.009
  CI (99.9%): [0.031, 0.097] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 59.47% complete, ETA 11:34:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.072 ms/op
# Warmup Iteration   2: 0.052 ms/op
# Warmup Iteration   3: 0.057 ms/op
# Warmup Iteration   4: 0.061 ms/op
# Warmup Iteration   5: 0.055 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.062 ms/op
Iteration   3: 0.102 ms/op
Iteration   4: 0.076 ms/op
Iteration   5: 0.073 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.074 ±(99.9%) 0.070 ms/op [Average]
  (min, avg, max) = (0.055, 0.074, 0.102), stdev = 0.018
  CI (99.9%): [0.003, 0.144] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 59.56% complete, ETA 11:31:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.074 ms/op
# Warmup Iteration   2: 0.051 ms/op
# Warmup Iteration   3: 0.055 ms/op
# Warmup Iteration   4: 0.062 ms/op
# Warmup Iteration   5: 0.057 ms/op
Iteration   1: 0.054 ms/op
Iteration   2: 0.070 ms/op
Iteration   3: 0.082 ms/op
Iteration   4: 0.068 ms/op
Iteration   5: 0.072 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.069 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (0.054, 0.069, 0.082), stdev = 0.010
  CI (99.9%): [0.030, 0.108] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 59.66% complete, ETA 11:29:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.152 ms/op
# Warmup Iteration   2: 0.112 ms/op
# Warmup Iteration   3: 0.115 ms/op
# Warmup Iteration   4: 0.124 ms/op
# Warmup Iteration   5: 0.110 ms/op
Iteration   1: 0.114 ms/op
Iteration   2: 0.116 ms/op
Iteration   3: 0.162 ms/op
Iteration   4: 0.187 ms/op
Iteration   5: 0.134 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.142 ±(99.9%) 0.121 ms/op [Average]
  (min, avg, max) = (0.114, 0.142, 0.187), stdev = 0.031
  CI (99.9%): [0.022, 0.263] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 59.75% complete, ETA 11:26:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.150 ms/op
# Warmup Iteration   2: 0.133 ms/op
# Warmup Iteration   3: 0.126 ms/op
# Warmup Iteration   4: 0.123 ms/op
# Warmup Iteration   5: 0.117 ms/op
Iteration   1: 0.119 ms/op
Iteration   2: 0.121 ms/op
Iteration   3: 0.177 ms/op
Iteration   4: 0.170 ms/op
Iteration   5: 0.152 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.148 ±(99.9%) 0.105 ms/op [Average]
  (min, avg, max) = (0.119, 0.148, 0.177), stdev = 0.027
  CI (99.9%): [0.043, 0.252] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 59.85% complete, ETA 11:24:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.155 ms/op
# Warmup Iteration   2: 0.125 ms/op
# Warmup Iteration   3: 0.141 ms/op
# Warmup Iteration   4: 0.133 ms/op
# Warmup Iteration   5: 0.128 ms/op
Iteration   1: 0.126 ms/op
Iteration   2: 0.131 ms/op
Iteration   3: 0.165 ms/op
Iteration   4: 0.220 ms/op
Iteration   5: 0.157 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.160 ±(99.9%) 0.144 ms/op [Average]
  (min, avg, max) = (0.126, 0.160, 0.220), stdev = 0.037
  CI (99.9%): [0.015, 0.304] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 59.94% complete, ETA 11:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.155 ms/op
# Warmup Iteration   2: 0.123 ms/op
# Warmup Iteration   3: 0.145 ms/op
# Warmup Iteration   4: 0.134 ms/op
# Warmup Iteration   5: 0.127 ms/op
Iteration   1: 0.144 ms/op
Iteration   2: 0.136 ms/op
Iteration   3: 0.173 ms/op
Iteration   4: 0.228 ms/op
Iteration   5: 0.164 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.169 ±(99.9%) 0.139 ms/op [Average]
  (min, avg, max) = (0.136, 0.169, 0.228), stdev = 0.036
  CI (99.9%): [0.030, 0.308] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 60.04% complete, ETA 11:18:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.228 ms/op
# Warmup Iteration   2: 0.120 ms/op
# Warmup Iteration   3: 0.142 ms/op
# Warmup Iteration   4: 0.132 ms/op
# Warmup Iteration   5: 0.141 ms/op
Iteration   1: 0.132 ms/op
Iteration   2: 0.152 ms/op
Iteration   3: 0.224 ms/op
Iteration   4: 0.159 ms/op
Iteration   5: 0.160 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.165 ±(99.9%) 0.133 ms/op [Average]
  (min, avg, max) = (0.132, 0.165, 0.224), stdev = 0.035
  CI (99.9%): [0.032, 0.299] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 60.13% complete, ETA 11:16:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.172 ms/op
# Warmup Iteration   2: 0.109 ms/op
# Warmup Iteration   3: 0.125 ms/op
# Warmup Iteration   4: 0.124 ms/op
# Warmup Iteration   5: 0.119 ms/op
Iteration   1: 0.116 ms/op
Iteration   2: 0.127 ms/op
Iteration   3: 0.228 ms/op
Iteration   4: 0.151 ms/op
Iteration   5: 0.146 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.154 ±(99.9%) 0.169 ms/op [Average]
  (min, avg, max) = (0.116, 0.154, 0.228), stdev = 0.044
  CI (99.9%): [? 0, 0.323] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 60.23% complete, ETA 11:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.300 ms/op
# Warmup Iteration   2: 0.236 ms/op
# Warmup Iteration   3: 0.228 ms/op
# Warmup Iteration   4: 0.254 ms/op
# Warmup Iteration   5: 0.228 ms/op
Iteration   1: 0.218 ms/op
Iteration   2: 0.219 ms/op
Iteration   3: 0.288 ms/op
Iteration   4: 0.297 ms/op
Iteration   5: 0.278 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.260 ±(99.9%) 0.149 ms/op [Average]
  (min, avg, max) = (0.218, 0.260, 0.297), stdev = 0.039
  CI (99.9%): [0.112, 0.409] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 60.32% complete, ETA 11:11:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.299 ms/op
# Warmup Iteration   2: 0.237 ms/op
# Warmup Iteration   3: 0.238 ms/op
# Warmup Iteration   4: 0.215 ms/op
# Warmup Iteration   5: 0.227 ms/op
Iteration   1: 0.225 ms/op
Iteration   2: 0.222 ms/op
Iteration   3: 0.304 ms/op
Iteration   4: 0.311 ms/op
Iteration   5: 0.306 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.274 ±(99.9%) 0.176 ms/op [Average]
  (min, avg, max) = (0.222, 0.274, 0.311), stdev = 0.046
  CI (99.9%): [0.098, 0.449] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 60.42% complete, ETA 11:08:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.314 ms/op
# Warmup Iteration   2: 0.234 ms/op
# Warmup Iteration   3: 0.241 ms/op
# Warmup Iteration   4: 0.240 ms/op
# Warmup Iteration   5: 0.225 ms/op
Iteration   1: 0.222 ms/op
Iteration   2: 0.230 ms/op
Iteration   3: 0.338 ms/op
Iteration   4: 0.293 ms/op
Iteration   5: 0.268 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.270 ±(99.9%) 0.183 ms/op [Average]
  (min, avg, max) = (0.222, 0.270, 0.338), stdev = 0.047
  CI (99.9%): [0.088, 0.453] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 60.51% complete, ETA 11:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.311 ms/op
# Warmup Iteration   2: 0.234 ms/op
# Warmup Iteration   3: 0.276 ms/op
# Warmup Iteration   4: 0.251 ms/op
# Warmup Iteration   5: 0.236 ms/op
Iteration   1: 0.236 ms/op
Iteration   2: 0.239 ms/op
Iteration   3: 0.312 ms/op
Iteration   4: 0.355 ms/op
Iteration   5: 0.307 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.290 ±(99.9%) 0.197 ms/op [Average]
  (min, avg, max) = (0.236, 0.290, 0.355), stdev = 0.051
  CI (99.9%): [0.092, 0.487] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 60.61% complete, ETA 11:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.371 ms/op
# Warmup Iteration   2: 0.219 ms/op
# Warmup Iteration   3: 0.233 ms/op
# Warmup Iteration   4: 0.246 ms/op
# Warmup Iteration   5: 0.220 ms/op
Iteration   1: 0.213 ms/op
Iteration   2: 0.264 ms/op
Iteration   3: 0.347 ms/op
Iteration   4: 0.287 ms/op
Iteration   5: 0.316 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.285 ±(99.9%) 0.197 ms/op [Average]
  (min, avg, max) = (0.213, 0.285, 0.347), stdev = 0.051
  CI (99.9%): [0.088, 0.482] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 60.70% complete, ETA 11:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.300 ms/op
# Warmup Iteration   2: 0.221 ms/op
# Warmup Iteration   3: 0.215 ms/op
# Warmup Iteration   4: 0.249 ms/op
# Warmup Iteration   5: 0.222 ms/op
Iteration   1: 0.217 ms/op
Iteration   2: 0.251 ms/op
Iteration   3: 0.397 ms/op
Iteration   4: 0.299 ms/op
Iteration   5: 0.289 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.291 ±(99.9%) 0.261 ms/op [Average]
  (min, avg, max) = (0.217, 0.291, 0.397), stdev = 0.068
  CI (99.9%): [0.029, 0.552] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 60.80% complete, ETA 10:58:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.623 ms/op
# Warmup Iteration   2: 0.459 ms/op
# Warmup Iteration   3: 0.474 ms/op
# Warmup Iteration   4: 0.487 ms/op
# Warmup Iteration   5: 0.451 ms/op
Iteration   1: 0.457 ms/op
Iteration   2: 0.454 ms/op
Iteration   3: 0.635 ms/op
Iteration   4: 0.618 ms/op
Iteration   5: 0.625 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.558 ±(99.9%) 0.360 ms/op [Average]
  (min, avg, max) = (0.454, 0.558, 0.635), stdev = 0.094
  CI (99.9%): [0.197, 0.918] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 60.89% complete, ETA 10:56:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.603 ms/op
# Warmup Iteration   2: 0.502 ms/op
# Warmup Iteration   3: 0.499 ms/op
# Warmup Iteration   4: 0.489 ms/op
# Warmup Iteration   5: 0.478 ms/op
Iteration   1: 0.484 ms/op
Iteration   2: 0.480 ms/op
Iteration   3: 0.667 ms/op
Iteration   4: 0.684 ms/op
Iteration   5: 0.627 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.588 ±(99.9%) 0.383 ms/op [Average]
  (min, avg, max) = (0.480, 0.588, 0.684), stdev = 0.100
  CI (99.9%): [0.205, 0.972] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 60.98% complete, ETA 10:53:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.616 ms/op
# Warmup Iteration   2: 0.485 ms/op
# Warmup Iteration   3: 0.508 ms/op
# Warmup Iteration   4: 0.508 ms/op
# Warmup Iteration   5: 0.521 ms/op
Iteration   1: 0.511 ms/op
Iteration   2: 0.495 ms/op
Iteration   3: 0.632 ms/op
Iteration   4: 0.794 ms/op
Iteration   5: 0.589 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.604 ±(99.9%) 0.462 ms/op [Average]
  (min, avg, max) = (0.495, 0.604, 0.794), stdev = 0.120
  CI (99.9%): [0.142, 1.067] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 61.08% complete, ETA 10:51:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.628 ms/op
# Warmup Iteration   2: 0.504 ms/op
# Warmup Iteration   3: 0.565 ms/op
# Warmup Iteration   4: 0.530 ms/op
# Warmup Iteration   5: 0.506 ms/op
Iteration   1: 0.489 ms/op
Iteration   2: 0.479 ms/op
Iteration   3: 0.646 ms/op
Iteration   4: 0.686 ms/op
Iteration   5: 0.640 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.588 ±(99.9%) 0.372 ms/op [Average]
  (min, avg, max) = (0.479, 0.588, 0.686), stdev = 0.097
  CI (99.9%): [0.216, 0.960] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 61.17% complete, ETA 10:48:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.620 ms/op
# Warmup Iteration   2: 0.447 ms/op
# Warmup Iteration   3: 0.459 ms/op
# Warmup Iteration   4: 0.497 ms/op
# Warmup Iteration   5: 0.467 ms/op
Iteration   1: 0.486 ms/op
Iteration   2: 0.542 ms/op
Iteration   3: 1.006 ms/op
Iteration   4: 0.764 ms/op
Iteration   5: 0.642 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.688 ±(99.9%) 0.797 ms/op [Average]
  (min, avg, max) = (0.486, 0.688, 1.006), stdev = 0.207
  CI (99.9%): [? 0, 1.485] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 61.27% complete, ETA 10:46:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.664 ms/op
# Warmup Iteration   2: 0.418 ms/op
# Warmup Iteration   3: 0.429 ms/op
# Warmup Iteration   4: 0.462 ms/op
# Warmup Iteration   5: 0.445 ms/op
Iteration   1: 0.408 ms/op
Iteration   2: 0.511 ms/op
Iteration   3: 0.661 ms/op
Iteration   4: 0.601 ms/op
Iteration   5: 0.643 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  0.565 ±(99.9%) 0.405 ms/op [Average]
  (min, avg, max) = (0.408, 0.565, 0.661), stdev = 0.105
  CI (99.9%): [0.159, 0.970] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 61.36% complete, ETA 10:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 1.280 ms/op
# Warmup Iteration   2: 0.895 ms/op
# Warmup Iteration   3: 0.938 ms/op
# Warmup Iteration   4: 0.925 ms/op
# Warmup Iteration   5: 0.854 ms/op
Iteration   1: 0.828 ms/op
Iteration   2: 0.885 ms/op
Iteration   3: 0.949 ms/op
Iteration   4: 1.233 ms/op
Iteration   5: 1.220 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.023 ±(99.9%) 0.735 ms/op [Average]
  (min, avg, max) = (0.828, 1.023, 1.233), stdev = 0.191
  CI (99.9%): [0.288, 1.758] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 61.46% complete, ETA 10:41:19
# Fork: 1 of 1
# Warmup Iteration   1: 1.215 ms/op
# Warmup Iteration   2: 0.967 ms/op
# Warmup Iteration   3: 0.972 ms/op
# Warmup Iteration   4: 0.846 ms/op
# Warmup Iteration   5: 0.920 ms/op
Iteration   1: 0.892 ms/op
Iteration   2: 0.886 ms/op
Iteration   3: 1.222 ms/op
Iteration   4: 1.287 ms/op
Iteration   5: 1.302 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.118 ±(99.9%) 0.812 ms/op [Average]
  (min, avg, max) = (0.886, 1.118, 1.302), stdev = 0.211
  CI (99.9%): [0.306, 1.930] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 61.55% complete, ETA 10:38:52
# Fork: 1 of 1
# Warmup Iteration   1: 1.277 ms/op
# Warmup Iteration   2: 0.968 ms/op
# Warmup Iteration   3: 0.957 ms/op
# Warmup Iteration   4: 1.028 ms/op
# Warmup Iteration   5: 0.958 ms/op
Iteration   1: 0.935 ms/op
Iteration   2: 0.918 ms/op
Iteration   3: 1.297 ms/op
Iteration   4: 1.471 ms/op
Iteration   5: 1.260 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.176 ±(99.9%) 0.929 ms/op [Average]
  (min, avg, max) = (0.918, 1.176, 1.471), stdev = 0.241
  CI (99.9%): [0.247, 2.106] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 61.65% complete, ETA 10:36:26
# Fork: 1 of 1
# Warmup Iteration   1: 1.252 ms/op
# Warmup Iteration   2: 0.925 ms/op
# Warmup Iteration   3: 0.985 ms/op
# Warmup Iteration   4: 0.965 ms/op
# Warmup Iteration   5: 0.936 ms/op
Iteration   1: 0.966 ms/op
Iteration   2: 0.955 ms/op
Iteration   3: 1.251 ms/op
Iteration   4: 1.508 ms/op
Iteration   5: 1.135 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.163 ±(99.9%) 0.882 ms/op [Average]
  (min, avg, max) = (0.955, 1.163, 1.508), stdev = 0.229
  CI (99.9%): [0.281, 2.045] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 61.74% complete, ETA 10:34:00
# Fork: 1 of 1
# Warmup Iteration   1: 1.830 ms/op
# Warmup Iteration   2: 1.014 ms/op
# Warmup Iteration   3: 1.025 ms/op
# Warmup Iteration   4: 1.013 ms/op
# Warmup Iteration   5: 0.979 ms/op
Iteration   1: 0.963 ms/op
Iteration   2: 1.121 ms/op
Iteration   3: 1.621 ms/op
Iteration   4: 1.469 ms/op
Iteration   5: 1.110 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.257 ±(99.9%) 1.063 ms/op [Average]
  (min, avg, max) = (0.963, 1.257, 1.621), stdev = 0.276
  CI (99.9%): [0.194, 2.319] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 61.84% complete, ETA 10:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 1.706 ms/op
# Warmup Iteration   2: 0.920 ms/op
# Warmup Iteration   3: 1.013 ms/op
# Warmup Iteration   4: 1.019 ms/op
# Warmup Iteration   5: 1.045 ms/op
Iteration   1: 0.967 ms/op
Iteration   2: 1.114 ms/op
Iteration   3: 1.744 ms/op
Iteration   4: 1.400 ms/op
Iteration   5: 1.205 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  1.286 ±(99.9%) 1.157 ms/op [Average]
  (min, avg, max) = (0.967, 1.286, 1.744), stdev = 0.300
  CI (99.9%): [0.129, 2.443] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 61.93% complete, ETA 10:29:10
# Fork: 1 of 1
# Warmup Iteration   1: 2.486 ms/op
# Warmup Iteration   2: 1.825 ms/op
# Warmup Iteration   3: 1.889 ms/op
# Warmup Iteration   4: 1.902 ms/op
# Warmup Iteration   5: 1.748 ms/op
Iteration   1: 1.831 ms/op
Iteration   2: 1.802 ms/op
Iteration   3: 2.367 ms/op
Iteration   4: 2.683 ms/op
Iteration   5: 2.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.137 ±(99.9%) 1.459 ms/op [Average]
  (min, avg, max) = (1.802, 2.137, 2.683), stdev = 0.379
  CI (99.9%): [0.678, 3.596] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 62.03% complete, ETA 10:26:45
# Fork: 1 of 1
# Warmup Iteration   1: 2.386 ms/op
# Warmup Iteration   2: 1.922 ms/op
# Warmup Iteration   3: 1.872 ms/op
# Warmup Iteration   4: 1.904 ms/op
# Warmup Iteration   5: 1.678 ms/op
Iteration   1: 1.659 ms/op
Iteration   2: 1.787 ms/op
Iteration   3: 2.258 ms/op
Iteration   4: 2.496 ms/op
Iteration   5: 2.348 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.109 ±(99.9%) 1.409 ms/op [Average]
  (min, avg, max) = (1.659, 2.109, 2.496), stdev = 0.366
  CI (99.9%): [0.700, 3.518] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 62.12% complete, ETA 10:24:21
# Fork: 1 of 1
# Warmup Iteration   1: 2.510 ms/op
# Warmup Iteration   2: 1.887 ms/op
# Warmup Iteration   3: 1.866 ms/op
# Warmup Iteration   4: 1.824 ms/op
# Warmup Iteration   5: 1.770 ms/op
Iteration   1: 1.697 ms/op
Iteration   2: 1.676 ms/op
Iteration   3: 2.503 ms/op
Iteration   4: 2.372 ms/op
Iteration   5: 2.519 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.153 ±(99.9%) 1.657 ms/op [Average]
  (min, avg, max) = (1.676, 2.153, 2.519), stdev = 0.430
  CI (99.9%): [0.496, 3.810] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 62.22% complete, ETA 10:21:57
# Fork: 1 of 1
# Warmup Iteration   1: 2.516 ms/op
# Warmup Iteration   2: 1.836 ms/op
# Warmup Iteration   3: 1.905 ms/op
# Warmup Iteration   4: 1.758 ms/op
# Warmup Iteration   5: 1.817 ms/op
Iteration   1: 1.733 ms/op
Iteration   2: 1.767 ms/op
Iteration   3: 2.428 ms/op
Iteration   4: 2.492 ms/op
Iteration   5: 2.421 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.168 ±(99.9%) 1.474 ms/op [Average]
  (min, avg, max) = (1.733, 2.168, 2.492), stdev = 0.383
  CI (99.9%): [0.694, 3.642] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 62.31% complete, ETA 10:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 2.360 ms/op
# Warmup Iteration   2: 1.774 ms/op
# Warmup Iteration   3: 1.913 ms/op
# Warmup Iteration   4: 2.009 ms/op
# Warmup Iteration   5: 1.865 ms/op
Iteration   1: 1.793 ms/op
Iteration   2: 1.915 ms/op
Iteration   3: 3.408 ms/op
Iteration   4: 2.312 ms/op
Iteration   5: 2.277 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.341 ±(99.9%) 2.455 ms/op [Average]
  (min, avg, max) = (1.793, 2.341, 3.408), stdev = 0.637
  CI (99.9%): [? 0, 4.796] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 62.41% complete, ETA 10:17:10
# Fork: 1 of 1
# Warmup Iteration   1: 2.249 ms/op
# Warmup Iteration   2: 1.825 ms/op
# Warmup Iteration   3: 1.762 ms/op
# Warmup Iteration   4: 2.070 ms/op
# Warmup Iteration   5: 1.964 ms/op
Iteration   1: 1.920 ms/op
Iteration   2: 2.039 ms/op
Iteration   3: 3.727 ms/op
Iteration   4: 2.518 ms/op
Iteration   5: 2.229 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark":
  2.487 ±(99.9%) 2.808 ms/op [Average]
  (min, avg, max) = (1.920, 2.487, 3.727), stdev = 0.729
  CI (99.9%): [? 0, 5.294] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 62.50% complete, ETA 10:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 62.59% complete, ETA 10:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 10??, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 62.69% complete, ETA 10:10:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 62.78% complete, ETA 10:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 62.88% complete, ETA 10:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 62.97% complete, ETA 10:03:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 63.07% complete, ETA 10:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 63.16% complete, ETA 09:58:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 63.26% complete, ETA 09:56:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 63.35% complete, ETA 09:53:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 63.45% complete, ETA 09:51:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 63.54% complete, ETA 09:49:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 63.64% complete, ETA 09:46:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.009 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.011), stdev = 0.002
  CI (99.9%): [0.003, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 63.73% complete, ETA 09:44:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.009 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.008, 0.009, 0.011), stdev = 0.002
  CI (99.9%): [0.003, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 63.83% complete, ETA 09:42:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.009 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.005, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 63.92% complete, ETA 09:39:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.008 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.009), stdev = 0.001
  CI (99.9%): [0.004, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 64.02% complete, ETA 09:37:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.009 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 64.11% complete, ETA 09:35:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.008 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.009), stdev = 0.001
  CI (99.9%): [0.003, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 64.20% complete, ETA 09:33:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.016 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.012, 0.016, 0.019), stdev = 0.003
  CI (99.9%): [0.006, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 64.30% complete, ETA 09:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.015 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.013, 0.015, 0.017), stdev = 0.002
  CI (99.9%): [0.009, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 64.39% complete, ETA 09:28:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.016 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.012, 0.016, 0.018), stdev = 0.003
  CI (99.9%): [0.006, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 64.49% complete, ETA 09:26:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.015 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.012, 0.015, 0.018), stdev = 0.003
  CI (99.9%): [0.005, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 64.58% complete, ETA 09:24:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.016 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.014, 0.016, 0.018), stdev = 0.002
  CI (99.9%): [0.007, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 64.68% complete, ETA 09:21:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.016 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.013, 0.016, 0.018), stdev = 0.002
  CI (99.9%): [0.007, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 64.77% complete, ETA 09:19:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.039 ms/op
# Warmup Iteration   2: 0.028 ms/op
# Warmup Iteration   3: 0.030 ms/op
# Warmup Iteration   4: 0.030 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.036 ms/op
Iteration   4: 0.040 ms/op
Iteration   5: 0.033 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.033 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.028, 0.033, 0.040), stdev = 0.005
  CI (99.9%): [0.014, 0.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 64.87% complete, ETA 09:17:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.031 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.041 ms/op
Iteration   4: 0.050 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.036 ±(99.9%) 0.035 ms/op [Average]
  (min, avg, max) = (0.028, 0.036, 0.050), stdev = 0.009
  CI (99.9%): [0.002, 0.071] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 64.96% complete, ETA 09:15:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.038 ms/op
# Warmup Iteration   2: 0.037 ms/op
# Warmup Iteration   3: 0.032 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.032 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.041 ms/op
Iteration   4: 0.043 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.036 ±(99.9%) 0.024 ms/op [Average]
  (min, avg, max) = (0.029, 0.036, 0.043), stdev = 0.006
  CI (99.9%): [0.012, 0.060] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 65.06% complete, ETA 09:12:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.038 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.035 ms/op
# Warmup Iteration   4: 0.033 ms/op
# Warmup Iteration   5: 0.032 ms/op
Iteration   1: 0.032 ms/op
Iteration   2: 0.031 ms/op
Iteration   3: 0.040 ms/op
Iteration   4: 0.053 ms/op
Iteration   5: 0.041 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.040 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.031, 0.040, 0.053), stdev = 0.009
  CI (99.9%): [0.006, 0.073] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 65.15% complete, ETA 09:10:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.040 ms/op
# Warmup Iteration   2: 0.038 ms/op
# Warmup Iteration   3: 0.035 ms/op
# Warmup Iteration   4: 0.033 ms/op
# Warmup Iteration   5: 0.033 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.039 ms/op
Iteration   4: 0.040 ms/op
Iteration   5: 0.033 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.034 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (0.028, 0.034, 0.040), stdev = 0.005
  CI (99.9%): [0.013, 0.055] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 65.25% complete, ETA 09:08:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.034 ms/op
# Warmup Iteration   2: 0.031 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.037 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.034 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.028, 0.034, 0.045), stdev = 0.007
  CI (99.9%): [0.006, 0.062] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 65.34% complete, ETA 09:06:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.073 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.052 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.056 ms/op
Iteration   3: 0.063 ms/op
Iteration   4: 0.077 ms/op
Iteration   5: 0.069 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.064 ±(99.9%) 0.035 ms/op [Average]
  (min, avg, max) = (0.055, 0.064, 0.077), stdev = 0.009
  CI (99.9%): [0.029, 0.099] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 65.44% complete, ETA 09:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.074 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.055 ms/op
# Warmup Iteration   4: 0.055 ms/op
# Warmup Iteration   5: 0.049 ms/op
Iteration   1: 0.053 ms/op
Iteration   2: 0.055 ms/op
Iteration   3: 0.059 ms/op
Iteration   4: 0.069 ms/op
Iteration   5: 0.076 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.063 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.053, 0.063, 0.076), stdev = 0.010
  CI (99.9%): [0.025, 0.100] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 65.53% complete, ETA 09:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.072 ms/op
# Warmup Iteration   2: 0.058 ms/op
# Warmup Iteration   3: 0.056 ms/op
# Warmup Iteration   4: 0.053 ms/op
# Warmup Iteration   5: 0.049 ms/op
Iteration   1: 0.053 ms/op
Iteration   2: 0.054 ms/op
Iteration   3: 0.055 ms/op
Iteration   4: 0.072 ms/op
Iteration   5: 0.066 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.060 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (0.053, 0.060, 0.072), stdev = 0.009
  CI (99.9%): [0.026, 0.094] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 65.63% complete, ETA 08:59:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
# Warmup Iteration   2: 0.058 ms/op
# Warmup Iteration   3: 0.055 ms/op
# Warmup Iteration   4: 0.054 ms/op
# Warmup Iteration   5: 0.050 ms/op
Iteration   1: 0.052 ms/op
Iteration   2: 0.052 ms/op
Iteration   3: 0.057 ms/op
Iteration   4: 0.066 ms/op
Iteration   5: 0.067 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.059 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.052, 0.059, 0.067), stdev = 0.008
  CI (99.9%): [0.030, 0.088] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 65.72% complete, ETA 08:57:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.069 ms/op
# Warmup Iteration   2: 0.061 ms/op
# Warmup Iteration   3: 0.051 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.058 ms/op
Iteration   1: 0.054 ms/op
Iteration   2: 0.057 ms/op
Iteration   3: 0.071 ms/op
Iteration   4: 0.083 ms/op
Iteration   5: 0.070 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.067 ±(99.9%) 0.045 ms/op [Average]
  (min, avg, max) = (0.054, 0.067, 0.083), stdev = 0.012
  CI (99.9%): [0.022, 0.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 65.81% complete, ETA 08:55:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.071 ms/op
# Warmup Iteration   2: 0.055 ms/op
# Warmup Iteration   3: 0.055 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.052 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.059 ms/op
Iteration   3: 0.076 ms/op
Iteration   4: 0.070 ms/op
Iteration   5: 0.065 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.065 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (0.055, 0.065, 0.076), stdev = 0.008
  CI (99.9%): [0.033, 0.097] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 65.91% complete, ETA 08:53:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.152 ms/op
# Warmup Iteration   2: 0.111 ms/op
# Warmup Iteration   3: 0.119 ms/op
# Warmup Iteration   4: 0.117 ms/op
# Warmup Iteration   5: 0.111 ms/op
Iteration   1: 0.110 ms/op
Iteration   2: 0.109 ms/op
Iteration   3: 0.150 ms/op
Iteration   4: 0.145 ms/op
Iteration   5: 0.148 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.133 ±(99.9%) 0.081 ms/op [Average]
  (min, avg, max) = (0.109, 0.133, 0.150), stdev = 0.021
  CI (99.9%): [0.051, 0.214] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 66.00% complete, ETA 08:51:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.146 ms/op
# Warmup Iteration   2: 0.116 ms/op
# Warmup Iteration   3: 0.116 ms/op
# Warmup Iteration   4: 0.128 ms/op
# Warmup Iteration   5: 0.118 ms/op
Iteration   1: 0.112 ms/op
Iteration   2: 0.111 ms/op
Iteration   3: 0.156 ms/op
Iteration   4: 0.171 ms/op
Iteration   5: 0.142 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.138 ±(99.9%) 0.103 ms/op [Average]
  (min, avg, max) = (0.111, 0.138, 0.171), stdev = 0.027
  CI (99.9%): [0.036, 0.241] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 66.10% complete, ETA 08:49:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.145 ms/op
# Warmup Iteration   2: 0.120 ms/op
# Warmup Iteration   3: 0.126 ms/op
# Warmup Iteration   4: 0.124 ms/op
# Warmup Iteration   5: 0.123 ms/op
Iteration   1: 0.116 ms/op
Iteration   2: 0.121 ms/op
Iteration   3: 0.173 ms/op
Iteration   4: 0.164 ms/op
Iteration   5: 0.162 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.147 ±(99.9%) 0.103 ms/op [Average]
  (min, avg, max) = (0.116, 0.147, 0.173), stdev = 0.027
  CI (99.9%): [0.044, 0.251] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 66.19% complete, ETA 08:46:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.150 ms/op
# Warmup Iteration   2: 0.120 ms/op
# Warmup Iteration   3: 0.139 ms/op
# Warmup Iteration   4: 0.126 ms/op
# Warmup Iteration   5: 0.120 ms/op
Iteration   1: 0.120 ms/op
Iteration   2: 0.117 ms/op
Iteration   3: 0.167 ms/op
Iteration   4: 0.195 ms/op
Iteration   5: 0.154 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.151 ±(99.9%) 0.128 ms/op [Average]
  (min, avg, max) = (0.117, 0.151, 0.195), stdev = 0.033
  CI (99.9%): [0.023, 0.278] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 66.29% complete, ETA 08:44:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.160 ms/op
# Warmup Iteration   2: 0.146 ms/op
# Warmup Iteration   3: 0.129 ms/op
# Warmup Iteration   4: 0.133 ms/op
# Warmup Iteration   5: 0.130 ms/op
Iteration   1: 0.127 ms/op
Iteration   2: 0.125 ms/op
Iteration   3: 0.180 ms/op
Iteration   4: 0.202 ms/op
Iteration   5: 0.153 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.158 ±(99.9%) 0.128 ms/op [Average]
  (min, avg, max) = (0.125, 0.158, 0.202), stdev = 0.033
  CI (99.9%): [0.029, 0.286] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 66.38% complete, ETA 08:42:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.146 ms/op
# Warmup Iteration   2: 0.122 ms/op
# Warmup Iteration   3: 0.118 ms/op
# Warmup Iteration   4: 0.124 ms/op
# Warmup Iteration   5: 0.111 ms/op
Iteration   1: 0.112 ms/op
Iteration   2: 0.113 ms/op
Iteration   3: 0.202 ms/op
Iteration   4: 0.149 ms/op
Iteration   5: 0.139 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.143 ±(99.9%) 0.141 ms/op [Average]
  (min, avg, max) = (0.112, 0.143, 0.202), stdev = 0.037
  CI (99.9%): [0.002, 0.284] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 66.48% complete, ETA 08:40:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.285 ms/op
# Warmup Iteration   2: 0.232 ms/op
# Warmup Iteration   3: 0.231 ms/op
# Warmup Iteration   4: 0.249 ms/op
# Warmup Iteration   5: 0.223 ms/op
Iteration   1: 0.206 ms/op
Iteration   2: 0.222 ms/op
Iteration   3: 0.266 ms/op
Iteration   4: 0.295 ms/op
Iteration   5: 0.299 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.257 ±(99.9%) 0.162 ms/op [Average]
  (min, avg, max) = (0.206, 0.257, 0.299), stdev = 0.042
  CI (99.9%): [0.096, 0.419] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 66.57% complete, ETA 08:38:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.297 ms/op
# Warmup Iteration   2: 0.238 ms/op
# Warmup Iteration   3: 0.216 ms/op
# Warmup Iteration   4: 0.212 ms/op
# Warmup Iteration   5: 0.209 ms/op
Iteration   1: 0.224 ms/op
Iteration   2: 0.216 ms/op
Iteration   3: 0.281 ms/op
Iteration   4: 0.336 ms/op
Iteration   5: 0.272 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.266 ±(99.9%) 0.186 ms/op [Average]
  (min, avg, max) = (0.216, 0.266, 0.336), stdev = 0.048
  CI (99.9%): [0.080, 0.452] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 66.67% complete, ETA 08:36:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.288 ms/op
# Warmup Iteration   2: 0.242 ms/op
# Warmup Iteration   3: 0.211 ms/op
# Warmup Iteration   4: 0.225 ms/op
# Warmup Iteration   5: 0.209 ms/op
Iteration   1: 0.196 ms/op
Iteration   2: 0.224 ms/op
Iteration   3: 0.237 ms/op
Iteration   4: 0.277 ms/op
Iteration   5: 0.273 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.242 ±(99.9%) 0.132 ms/op [Average]
  (min, avg, max) = (0.196, 0.242, 0.277), stdev = 0.034
  CI (99.9%): [0.109, 0.374] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 66.76% complete, ETA 08:34:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.284 ms/op
# Warmup Iteration   2: 0.238 ms/op
# Warmup Iteration   3: 0.223 ms/op
# Warmup Iteration   4: 0.219 ms/op
# Warmup Iteration   5: 0.191 ms/op
Iteration   1: 0.212 ms/op
Iteration   2: 0.224 ms/op
Iteration   3: 0.222 ms/op
Iteration   4: 0.341 ms/op
Iteration   5: 0.287 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.257 ±(99.9%) 0.213 ms/op [Average]
  (min, avg, max) = (0.212, 0.257, 0.341), stdev = 0.055
  CI (99.9%): [0.045, 0.470] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 66.86% complete, ETA 08:32:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.275 ms/op
# Warmup Iteration   2: 0.219 ms/op
# Warmup Iteration   3: 0.216 ms/op
# Warmup Iteration   4: 0.202 ms/op
# Warmup Iteration   5: 0.198 ms/op
Iteration   1: 0.193 ms/op
Iteration   2: 0.216 ms/op
Iteration   3: 0.289 ms/op
Iteration   4: 0.293 ms/op
Iteration   5: 0.265 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.252 ±(99.9%) 0.172 ms/op [Average]
  (min, avg, max) = (0.193, 0.252, 0.293), stdev = 0.045
  CI (99.9%): [0.079, 0.424] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 66.95% complete, ETA 08:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.264 ms/op
# Warmup Iteration   2: 0.239 ms/op
# Warmup Iteration   3: 0.216 ms/op
# Warmup Iteration   4: 0.215 ms/op
# Warmup Iteration   5: 0.219 ms/op
Iteration   1: 0.219 ms/op
Iteration   2: 0.220 ms/op
Iteration   3: 0.291 ms/op
Iteration   4: 0.276 ms/op
Iteration   5: 0.263 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.254 ±(99.9%) 0.126 ms/op [Average]
  (min, avg, max) = (0.219, 0.254, 0.291), stdev = 0.033
  CI (99.9%): [0.128, 0.380] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 67.05% complete, ETA 08:27:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.599 ms/op
# Warmup Iteration   2: 0.446 ms/op
# Warmup Iteration   3: 0.448 ms/op
# Warmup Iteration   4: 0.446 ms/op
# Warmup Iteration   5: 0.449 ms/op
Iteration   1: 0.425 ms/op
Iteration   2: 0.471 ms/op
Iteration   3: 0.554 ms/op
Iteration   4: 0.567 ms/op
Iteration   5: 0.479 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.499 ±(99.9%) 0.230 ms/op [Average]
  (min, avg, max) = (0.425, 0.499, 0.567), stdev = 0.060
  CI (99.9%): [0.269, 0.729] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 67.14% complete, ETA 08:25:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.587 ms/op
# Warmup Iteration   2: 0.474 ms/op
# Warmup Iteration   3: 0.486 ms/op
# Warmup Iteration   4: 0.451 ms/op
# Warmup Iteration   5: 0.438 ms/op
Iteration   1: 0.455 ms/op
Iteration   2: 0.456 ms/op
Iteration   3: 0.658 ms/op
Iteration   4: 0.646 ms/op
Iteration   5: 0.560 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.555 ±(99.9%) 0.378 ms/op [Average]
  (min, avg, max) = (0.455, 0.555, 0.658), stdev = 0.098
  CI (99.9%): [0.177, 0.933] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 67.23% complete, ETA 08:23:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.569 ms/op
# Warmup Iteration   2: 0.501 ms/op
# Warmup Iteration   3: 0.509 ms/op
# Warmup Iteration   4: 0.487 ms/op
# Warmup Iteration   5: 0.458 ms/op
Iteration   1: 0.458 ms/op
Iteration   2: 0.448 ms/op
Iteration   3: 0.623 ms/op
Iteration   4: 0.714 ms/op
Iteration   5: 0.603 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.569 ±(99.9%) 0.440 ms/op [Average]
  (min, avg, max) = (0.448, 0.569, 0.714), stdev = 0.114
  CI (99.9%): [0.129, 1.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 67.33% complete, ETA 08:21:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.609 ms/op
# Warmup Iteration   2: 0.472 ms/op
# Warmup Iteration   3: 0.563 ms/op
# Warmup Iteration   4: 0.502 ms/op
# Warmup Iteration   5: 0.470 ms/op
Iteration   1: 0.468 ms/op
Iteration   2: 0.485 ms/op
Iteration   3: 0.624 ms/op
Iteration   4: 0.742 ms/op
Iteration   5: 0.583 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.580 ±(99.9%) 0.430 ms/op [Average]
  (min, avg, max) = (0.468, 0.580, 0.742), stdev = 0.112
  CI (99.9%): [0.151, 1.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 67.42% complete, ETA 08:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.577 ms/op
# Warmup Iteration   2: 0.526 ms/op
# Warmup Iteration   3: 0.521 ms/op
# Warmup Iteration   4: 0.510 ms/op
# Warmup Iteration   5: 0.552 ms/op
Iteration   1: 0.508 ms/op
Iteration   2: 0.466 ms/op
Iteration   3: 0.774 ms/op
Iteration   4: 0.838 ms/op
Iteration   5: 0.600 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.637 ±(99.9%) 0.628 ms/op [Average]
  (min, avg, max) = (0.466, 0.637, 0.838), stdev = 0.163
  CI (99.9%): [0.009, 1.265] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 67.52% complete, ETA 08:17:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.635 ms/op
# Warmup Iteration   2: 0.542 ms/op
# Warmup Iteration   3: 0.578 ms/op
# Warmup Iteration   4: 0.493 ms/op
# Warmup Iteration   5: 0.532 ms/op
Iteration   1: 0.483 ms/op
Iteration   2: 0.449 ms/op
Iteration   3: 0.630 ms/op
Iteration   4: 0.702 ms/op
Iteration   5: 0.559 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.565 ±(99.9%) 0.400 ms/op [Average]
  (min, avg, max) = (0.449, 0.565, 0.702), stdev = 0.104
  CI (99.9%): [0.164, 0.965] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 67.61% complete, ETA 08:15:28
# Fork: 1 of 1
# Warmup Iteration   1: 1.145 ms/op
# Warmup Iteration   2: 0.965 ms/op
# Warmup Iteration   3: 0.989 ms/op
# Warmup Iteration   4: 0.996 ms/op
# Warmup Iteration   5: 0.914 ms/op
Iteration   1: 0.925 ms/op
Iteration   2: 0.877 ms/op
Iteration   3: 1.247 ms/op
Iteration   4: 1.314 ms/op
Iteration   5: 1.101 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.093 ±(99.9%) 0.739 ms/op [Average]
  (min, avg, max) = (0.877, 1.093, 1.314), stdev = 0.192
  CI (99.9%): [0.353, 1.832] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 67.71% complete, ETA 08:13:24
# Fork: 1 of 1
# Warmup Iteration   1: 1.112 ms/op
# Warmup Iteration   2: 0.960 ms/op
# Warmup Iteration   3: 0.828 ms/op
# Warmup Iteration   4: 0.962 ms/op
# Warmup Iteration   5: 0.825 ms/op
Iteration   1: 0.820 ms/op
Iteration   2: 0.916 ms/op
Iteration   3: 1.035 ms/op
Iteration   4: 1.176 ms/op
Iteration   5: 1.019 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.993 ±(99.9%) 0.516 ms/op [Average]
  (min, avg, max) = (0.820, 0.993, 1.176), stdev = 0.134
  CI (99.9%): [0.477, 1.509] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 67.80% complete, ETA 08:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 1.136 ms/op
# Warmup Iteration   2: 0.925 ms/op
# Warmup Iteration   3: 0.886 ms/op
# Warmup Iteration   4: 0.861 ms/op
# Warmup Iteration   5: 0.781 ms/op
Iteration   1: 0.848 ms/op
Iteration   2: 0.877 ms/op
Iteration   3: 0.949 ms/op
Iteration   4: 1.063 ms/op
Iteration   5: 1.229 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.993 ±(99.9%) 0.600 ms/op [Average]
  (min, avg, max) = (0.848, 0.993, 1.229), stdev = 0.156
  CI (99.9%): [0.394, 1.593] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 67.90% complete, ETA 08:09:19
# Fork: 1 of 1
# Warmup Iteration   1: 1.189 ms/op
# Warmup Iteration   2: 0.938 ms/op
# Warmup Iteration   3: 0.856 ms/op
# Warmup Iteration   4: 0.892 ms/op
# Warmup Iteration   5: 0.828 ms/op
Iteration   1: 0.796 ms/op
Iteration   2: 0.857 ms/op
Iteration   3: 0.911 ms/op
Iteration   4: 1.129 ms/op
Iteration   5: 1.087 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.956 ±(99.9%) 0.560 ms/op [Average]
  (min, avg, max) = (0.796, 0.956, 1.129), stdev = 0.145
  CI (99.9%): [0.396, 1.516] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 67.99% complete, ETA 08:07:16
# Fork: 1 of 1
# Warmup Iteration   1: 1.121 ms/op
# Warmup Iteration   2: 0.864 ms/op
# Warmup Iteration   3: 0.875 ms/op
# Warmup Iteration   4: 0.818 ms/op
# Warmup Iteration   5: 0.807 ms/op
Iteration   1: 0.803 ms/op
Iteration   2: 0.860 ms/op
Iteration   3: 1.062 ms/op
Iteration   4: 1.044 ms/op
Iteration   5: 1.026 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.959 ±(99.9%) 0.457 ms/op [Average]
  (min, avg, max) = (0.803, 0.959, 1.062), stdev = 0.119
  CI (99.9%): [0.502, 1.416] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 68.09% complete, ETA 08:05:14
# Fork: 1 of 1
# Warmup Iteration   1: 1.144 ms/op
# Warmup Iteration   2: 0.914 ms/op
# Warmup Iteration   3: 0.844 ms/op
# Warmup Iteration   4: 0.995 ms/op
# Warmup Iteration   5: 0.943 ms/op
Iteration   1: 0.954 ms/op
Iteration   2: 0.863 ms/op
Iteration   3: 1.370 ms/op
Iteration   4: 1.236 ms/op
Iteration   5: 1.158 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.116 ±(99.9%) 0.797 ms/op [Average]
  (min, avg, max) = (0.863, 1.116, 1.370), stdev = 0.207
  CI (99.9%): [0.319, 1.913] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 68.18% complete, ETA 08:03:13
# Fork: 1 of 1
# Warmup Iteration   1: 2.298 ms/op
# Warmup Iteration   2: 1.877 ms/op
# Warmup Iteration   3: 1.750 ms/op
# Warmup Iteration   4: 1.735 ms/op
# Warmup Iteration   5: 1.643 ms/op
Iteration   1: 1.761 ms/op
Iteration   2: 2.031 ms/op
Iteration   3: 2.278 ms/op
Iteration   4: 2.380 ms/op
Iteration   5: 2.168 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.124 ±(99.9%) 0.927 ms/op [Average]
  (min, avg, max) = (1.761, 2.124, 2.380), stdev = 0.241
  CI (99.9%): [1.197, 3.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 68.28% complete, ETA 08:01:11
# Fork: 1 of 1
# Warmup Iteration   1: 2.344 ms/op
# Warmup Iteration   2: 1.869 ms/op
# Warmup Iteration   3: 1.838 ms/op
# Warmup Iteration   4: 2.015 ms/op
# Warmup Iteration   5: 1.726 ms/op
Iteration   1: 1.717 ms/op
Iteration   2: 1.673 ms/op
Iteration   3: 2.414 ms/op
Iteration   4: 2.309 ms/op
Iteration   5: 2.189 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.060 ±(99.9%) 1.322 ms/op [Average]
  (min, avg, max) = (1.673, 2.060, 2.414), stdev = 0.343
  CI (99.9%): [0.738, 3.383] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 68.37% complete, ETA 07:59:10
# Fork: 1 of 1
# Warmup Iteration   1: 2.272 ms/op
# Warmup Iteration   2: 1.913 ms/op
# Warmup Iteration   3: 1.897 ms/op
# Warmup Iteration   4: 2.007 ms/op
# Warmup Iteration   5: 1.774 ms/op
Iteration   1: 1.790 ms/op
Iteration   2: 1.828 ms/op
Iteration   3: 2.547 ms/op
Iteration   4: 2.601 ms/op
Iteration   5: 2.401 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.233 ±(99.9%) 1.520 ms/op [Average]
  (min, avg, max) = (1.790, 2.233, 2.601), stdev = 0.395
  CI (99.9%): [0.714, 3.753] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 68.47% complete, ETA 07:57:10
# Fork: 1 of 1
# Warmup Iteration   1: 2.325 ms/op
# Warmup Iteration   2: 1.913 ms/op
# Warmup Iteration   3: 2.166 ms/op
# Warmup Iteration   4: 1.931 ms/op
# Warmup Iteration   5: 2.028 ms/op
Iteration   1: 1.978 ms/op
Iteration   2: 1.898 ms/op
Iteration   3: 2.539 ms/op
Iteration   4: 3.030 ms/op
Iteration   5: 2.322 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.353 ±(99.9%) 1.766 ms/op [Average]
  (min, avg, max) = (1.898, 2.353, 3.030), stdev = 0.459
  CI (99.9%): [0.588, 4.119] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 68.56% complete, ETA 07:55:09
# Fork: 1 of 1
# Warmup Iteration   1: 2.321 ms/op
# Warmup Iteration   2: 2.190 ms/op
# Warmup Iteration   3: 1.970 ms/op
# Warmup Iteration   4: 2.012 ms/op
# Warmup Iteration   5: 1.913 ms/op
Iteration   1: 1.906 ms/op
Iteration   2: 1.880 ms/op
Iteration   3: 2.677 ms/op
Iteration   4: 2.303 ms/op
Iteration   5: 2.178 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.189 ±(99.9%) 1.258 ms/op [Average]
  (min, avg, max) = (1.880, 2.189, 2.677), stdev = 0.327
  CI (99.9%): [0.931, 3.447] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 68.66% complete, ETA 07:53:09
# Fork: 1 of 1
# Warmup Iteration   1: 2.264 ms/op
# Warmup Iteration   2: 1.740 ms/op
# Warmup Iteration   3: 1.801 ms/op
# Warmup Iteration   4: 1.878 ms/op
# Warmup Iteration   5: 1.642 ms/op
Iteration   1: 1.737 ms/op
Iteration   2: 1.791 ms/op
Iteration   3: 2.250 ms/op
Iteration   4: 2.281 ms/op
Iteration   5: 2.258 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.063 ±(99.9%) 1.056 ms/op [Average]
  (min, avg, max) = (1.737, 2.063, 2.281), stdev = 0.274
  CI (99.9%): [1.007, 3.119] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 68.75% complete, ETA 07:51:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 68.84% complete, ETA 07:49:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 68.94% complete, ETA 07:47:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 69.03% complete, ETA 07:45:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 69.13% complete, ETA 07:43:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 69.22% complete, ETA 07:41:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 69.32% complete, ETA 07:39:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.005 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 69.41% complete, ETA 07:37:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 69.51% complete, ETA 07:35:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 69.60% complete, ETA 07:33:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 69.70% complete, ETA 07:31:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 69.79% complete, ETA 07:29:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 69.89% complete, ETA 07:27:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.009 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 69.98% complete, ETA 07:25:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.008 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 70.08% complete, ETA 07:23:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.009 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.007, 0.009, 0.011), stdev = 0.002
  CI (99.9%): [0.002, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 70.17% complete, ETA 07:21:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.008 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.009), stdev = 0.001
  CI (99.9%): [0.004, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 70.27% complete, ETA 07:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.010 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.008 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.010), stdev = 0.001
  CI (99.9%): [0.003, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 70.36% complete, ETA 07:17:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.008 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.010), stdev = 0.001
  CI (99.9%): [0.002, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 70.45% complete, ETA 07:16:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.016 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.013, 0.016, 0.020), stdev = 0.002
  CI (99.9%): [0.007, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 70.55% complete, ETA 07:14:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.016 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.014, 0.016, 0.019), stdev = 0.002
  CI (99.9%): [0.008, 0.024] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 70.64% complete, ETA 07:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.017 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.013, 0.017, 0.019), stdev = 0.002
  CI (99.9%): [0.007, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 70.74% complete, ETA 07:10:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.025 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.019 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.014, 0.019, 0.025), stdev = 0.005
  CI (99.9%): [? 0, 0.039] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 70.83% complete, ETA 07:08:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.023 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.026 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.019 ±(99.9%) 0.017 ms/op [Average]
  (min, avg, max) = (0.014, 0.019, 0.026), stdev = 0.004
  CI (99.9%): [0.002, 0.036] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 70.93% complete, ETA 07:06:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.020 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.017 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.016 ms/op
Iteration   2: 0.016 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.019 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.020 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.016, 0.020, 0.030), stdev = 0.006
  CI (99.9%): [? 0, 0.043] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 71.02% complete, ETA 07:04:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.044 ms/op
# Warmup Iteration   2: 0.033 ms/op
# Warmup Iteration   3: 0.034 ms/op
# Warmup Iteration   4: 0.032 ms/op
# Warmup Iteration   5: 0.034 ms/op
Iteration   1: 0.032 ms/op
Iteration   2: 0.032 ms/op
Iteration   3: 0.036 ms/op
Iteration   4: 0.046 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.036 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.032, 0.036, 0.046), stdev = 0.006
  CI (99.9%): [0.014, 0.059] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 71.12% complete, ETA 07:02:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.036 ms/op
# Warmup Iteration   2: 0.031 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.028 ms/op
Iteration   3: 0.039 ms/op
Iteration   4: 0.045 ms/op
Iteration   5: 0.037 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.036 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.028, 0.036, 0.045), stdev = 0.007
  CI (99.9%): [0.008, 0.063] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 71.21% complete, ETA 07:00:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.029 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.032 ms/op
Iteration   4: 0.037 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.032 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.026, 0.032, 0.037), stdev = 0.005
  CI (99.9%): [0.013, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 71.31% complete, ETA 06:59:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.029 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.028 ms/op
# Warmup Iteration   5: 0.025 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.035 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.031 ±(99.9%) 0.018 ms/op [Average]
  (min, avg, max) = (0.026, 0.031, 0.036), stdev = 0.005
  CI (99.9%): [0.013, 0.048] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 71.40% complete, ETA 06:57:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.035 ms/op
# Warmup Iteration   2: 0.025 ms/op
# Warmup Iteration   3: 0.025 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.032 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.032 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.030 ±(99.9%) 0.018 ms/op [Average]
  (min, avg, max) = (0.023, 0.030, 0.034), stdev = 0.005
  CI (99.9%): [0.012, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 71.50% complete, ETA 06:55:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.025 ms/op
# Warmup Iteration   3: 0.026 ms/op
# Warmup Iteration   4: 0.026 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.025 ms/op
Iteration   2: 0.032 ms/op
Iteration   3: 0.039 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.032 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.032 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.025, 0.032, 0.039), stdev = 0.005
  CI (99.9%): [0.012, 0.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 71.59% complete, ETA 06:53:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.073 ms/op
# Warmup Iteration   2: 0.060 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.055 ms/op
# Warmup Iteration   5: 0.052 ms/op
Iteration   1: 0.052 ms/op
Iteration   2: 0.061 ms/op
Iteration   3: 0.062 ms/op
Iteration   4: 0.075 ms/op
Iteration   5: 0.067 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.063 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (0.052, 0.063, 0.075), stdev = 0.008
  CI (99.9%): [0.032, 0.095] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 71.69% complete, ETA 06:51:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
# Warmup Iteration   2: 0.057 ms/op
# Warmup Iteration   3: 0.057 ms/op
# Warmup Iteration   4: 0.054 ms/op
# Warmup Iteration   5: 0.055 ms/op
Iteration   1: 0.053 ms/op
Iteration   2: 0.059 ms/op
Iteration   3: 0.068 ms/op
Iteration   4: 0.076 ms/op
Iteration   5: 0.069 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.065 ±(99.9%) 0.035 ms/op [Average]
  (min, avg, max) = (0.053, 0.065, 0.076), stdev = 0.009
  CI (99.9%): [0.030, 0.099] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 71.78% complete, ETA 06:49:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
# Warmup Iteration   2: 0.057 ms/op
# Warmup Iteration   3: 0.062 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.056 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.054 ms/op
Iteration   3: 0.072 ms/op
Iteration   4: 0.077 ms/op
Iteration   5: 0.061 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.064 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (0.054, 0.064, 0.077), stdev = 0.010
  CI (99.9%): [0.025, 0.103] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 71.88% complete, ETA 06:47:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.070 ms/op
# Warmup Iteration   2: 0.061 ms/op
# Warmup Iteration   3: 0.062 ms/op
# Warmup Iteration   4: 0.061 ms/op
# Warmup Iteration   5: 0.060 ms/op
Iteration   1: 0.057 ms/op
Iteration   2: 0.056 ms/op
Iteration   3: 0.075 ms/op
Iteration   4: 0.080 ms/op
Iteration   5: 0.070 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.068 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (0.056, 0.068, 0.080), stdev = 0.011
  CI (99.9%): [0.027, 0.108] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 71.97% complete, ETA 06:46:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.080 ms/op
# Warmup Iteration   2: 0.056 ms/op
# Warmup Iteration   3: 0.058 ms/op
# Warmup Iteration   4: 0.067 ms/op
# Warmup Iteration   5: 0.061 ms/op
Iteration   1: 0.062 ms/op
Iteration   2: 0.064 ms/op
Iteration   3: 0.113 ms/op
Iteration   4: 0.072 ms/op
Iteration   5: 0.066 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.076 ±(99.9%) 0.083 ms/op [Average]
  (min, avg, max) = (0.062, 0.076, 0.113), stdev = 0.022
  CI (99.9%): [? 0, 0.158] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 72.06% complete, ETA 06:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.104 ms/op
# Warmup Iteration   2: 0.053 ms/op
# Warmup Iteration   3: 0.064 ms/op
# Warmup Iteration   4: 0.062 ms/op
# Warmup Iteration   5: 0.062 ms/op
Iteration   1: 0.057 ms/op
Iteration   2: 0.066 ms/op
Iteration   3: 0.091 ms/op
Iteration   4: 0.070 ms/op
Iteration   5: 0.067 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.070 ±(99.9%) 0.049 ms/op [Average]
  (min, avg, max) = (0.057, 0.070, 0.091), stdev = 0.013
  CI (99.9%): [0.021, 0.119] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 72.16% complete, ETA 06:42:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.153 ms/op
# Warmup Iteration   2: 0.111 ms/op
# Warmup Iteration   3: 0.113 ms/op
# Warmup Iteration   4: 0.116 ms/op
# Warmup Iteration   5: 0.109 ms/op
Iteration   1: 0.111 ms/op
Iteration   2: 0.109 ms/op
Iteration   3: 0.150 ms/op
Iteration   4: 0.148 ms/op
Iteration   5: 0.157 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.135 ±(99.9%) 0.090 ms/op [Average]
  (min, avg, max) = (0.109, 0.135, 0.157), stdev = 0.023
  CI (99.9%): [0.045, 0.225] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 72.25% complete, ETA 06:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.147 ms/op
# Warmup Iteration   2: 0.116 ms/op
# Warmup Iteration   3: 0.109 ms/op
# Warmup Iteration   4: 0.109 ms/op
# Warmup Iteration   5: 0.101 ms/op
Iteration   1: 0.107 ms/op
Iteration   2: 0.110 ms/op
Iteration   3: 0.125 ms/op
Iteration   4: 0.151 ms/op
Iteration   5: 0.139 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.126 ±(99.9%) 0.073 ms/op [Average]
  (min, avg, max) = (0.107, 0.126, 0.151), stdev = 0.019
  CI (99.9%): [0.053, 0.200] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 72.35% complete, ETA 06:38:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.150 ms/op
# Warmup Iteration   2: 0.113 ms/op
# Warmup Iteration   3: 0.111 ms/op
# Warmup Iteration   4: 0.109 ms/op
# Warmup Iteration   5: 0.100 ms/op
Iteration   1: 0.102 ms/op
Iteration   2: 0.110 ms/op
Iteration   3: 0.138 ms/op
Iteration   4: 0.139 ms/op
Iteration   5: 0.140 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.126 ±(99.9%) 0.071 ms/op [Average]
  (min, avg, max) = (0.102, 0.126, 0.140), stdev = 0.018
  CI (99.9%): [0.055, 0.196] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 72.44% complete, ETA 06:37:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.140 ms/op
# Warmup Iteration   2: 0.120 ms/op
# Warmup Iteration   3: 0.100 ms/op
# Warmup Iteration   4: 0.107 ms/op
# Warmup Iteration   5: 0.098 ms/op
Iteration   1: 0.100 ms/op
Iteration   2: 0.116 ms/op
Iteration   3: 0.124 ms/op
Iteration   4: 0.154 ms/op
Iteration   5: 0.128 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.124 ±(99.9%) 0.077 ms/op [Average]
  (min, avg, max) = (0.100, 0.124, 0.154), stdev = 0.020
  CI (99.9%): [0.047, 0.201] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 72.54% complete, ETA 06:35:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.152 ms/op
# Warmup Iteration   2: 0.105 ms/op
# Warmup Iteration   3: 0.115 ms/op
# Warmup Iteration   4: 0.121 ms/op
# Warmup Iteration   5: 0.107 ms/op
Iteration   1: 0.112 ms/op
Iteration   2: 0.114 ms/op
Iteration   3: 0.213 ms/op
Iteration   4: 0.138 ms/op
Iteration   5: 0.146 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.145 ±(99.9%) 0.158 ms/op [Average]
  (min, avg, max) = (0.112, 0.145, 0.213), stdev = 0.041
  CI (99.9%): [? 0, 0.302] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 72.63% complete, ETA 06:33:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.138 ms/op
# Warmup Iteration   2: 0.109 ms/op
# Warmup Iteration   3: 0.113 ms/op
# Warmup Iteration   4: 0.126 ms/op
# Warmup Iteration   5: 0.115 ms/op
Iteration   1: 0.112 ms/op
Iteration   2: 0.129 ms/op
Iteration   3: 0.218 ms/op
Iteration   4: 0.151 ms/op
Iteration   5: 0.133 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.149 ±(99.9%) 0.158 ms/op [Average]
  (min, avg, max) = (0.112, 0.149, 0.218), stdev = 0.041
  CI (99.9%): [? 0, 0.307] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 72.73% complete, ETA 06:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.287 ms/op
# Warmup Iteration   2: 0.246 ms/op
# Warmup Iteration   3: 0.252 ms/op
# Warmup Iteration   4: 0.245 ms/op
# Warmup Iteration   5: 0.229 ms/op
Iteration   1: 0.242 ms/op
Iteration   2: 0.243 ms/op
Iteration   3: 0.321 ms/op
Iteration   4: 0.371 ms/op
Iteration   5: 0.285 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.292 ±(99.9%) 0.211 ms/op [Average]
  (min, avg, max) = (0.242, 0.292, 0.371), stdev = 0.055
  CI (99.9%): [0.081, 0.504] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 72.82% complete, ETA 06:29:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.309 ms/op
# Warmup Iteration   2: 0.240 ms/op
# Warmup Iteration   3: 0.256 ms/op
# Warmup Iteration   4: 0.262 ms/op
# Warmup Iteration   5: 0.244 ms/op
Iteration   1: 0.233 ms/op
Iteration   2: 0.232 ms/op
Iteration   3: 0.347 ms/op
Iteration   4: 0.335 ms/op
Iteration   5: 0.288 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.287 ±(99.9%) 0.209 ms/op [Average]
  (min, avg, max) = (0.232, 0.287, 0.347), stdev = 0.054
  CI (99.9%): [0.078, 0.496] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 72.92% complete, ETA 06:27:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.318 ms/op
# Warmup Iteration   2: 0.256 ms/op
# Warmup Iteration   3: 0.267 ms/op
# Warmup Iteration   4: 0.272 ms/op
# Warmup Iteration   5: 0.264 ms/op
Iteration   1: 0.261 ms/op
Iteration   2: 0.247 ms/op
Iteration   3: 0.335 ms/op
Iteration   4: 0.433 ms/op
Iteration   5: 0.299 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.315 ±(99.9%) 0.286 ms/op [Average]
  (min, avg, max) = (0.247, 0.315, 0.433), stdev = 0.074
  CI (99.9%): [0.029, 0.602] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 73.01% complete, ETA 06:26:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.326 ms/op
# Warmup Iteration   2: 0.252 ms/op
# Warmup Iteration   3: 0.277 ms/op
# Warmup Iteration   4: 0.256 ms/op
# Warmup Iteration   5: 0.237 ms/op
Iteration   1: 0.226 ms/op
Iteration   2: 0.226 ms/op
Iteration   3: 0.322 ms/op
Iteration   4: 0.330 ms/op
Iteration   5: 0.279 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.276 ±(99.9%) 0.193 ms/op [Average]
  (min, avg, max) = (0.226, 0.276, 0.330), stdev = 0.050
  CI (99.9%): [0.084, 0.469] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 73.11% complete, ETA 06:24:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.336 ms/op
# Warmup Iteration   2: 0.218 ms/op
# Warmup Iteration   3: 0.236 ms/op
# Warmup Iteration   4: 0.255 ms/op
# Warmup Iteration   5: 0.229 ms/op
Iteration   1: 0.231 ms/op
Iteration   2: 0.235 ms/op
Iteration   3: 0.394 ms/op
Iteration   4: 0.279 ms/op
Iteration   5: 0.268 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.282 ±(99.9%) 0.256 ms/op [Average]
  (min, avg, max) = (0.231, 0.282, 0.394), stdev = 0.066
  CI (99.9%): [0.026, 0.537] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 73.20% complete, ETA 06:22:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.294 ms/op
# Warmup Iteration   2: 0.198 ms/op
# Warmup Iteration   3: 0.206 ms/op
# Warmup Iteration   4: 0.229 ms/op
# Warmup Iteration   5: 0.227 ms/op
Iteration   1: 0.207 ms/op
Iteration   2: 0.247 ms/op
Iteration   3: 0.328 ms/op
Iteration   4: 0.295 ms/op
Iteration   5: 0.293 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.274 ±(99.9%) 0.182 ms/op [Average]
  (min, avg, max) = (0.207, 0.274, 0.328), stdev = 0.047
  CI (99.9%): [0.092, 0.456] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 73.30% complete, ETA 06:20:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.576 ms/op
# Warmup Iteration   2: 0.463 ms/op
# Warmup Iteration   3: 0.411 ms/op
# Warmup Iteration   4: 0.417 ms/op
# Warmup Iteration   5: 0.376 ms/op
Iteration   1: 0.420 ms/op
Iteration   2: 0.421 ms/op
Iteration   3: 0.436 ms/op
Iteration   4: 0.549 ms/op
Iteration   5: 0.536 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.472 ±(99.9%) 0.249 ms/op [Average]
  (min, avg, max) = (0.420, 0.472, 0.549), stdev = 0.065
  CI (99.9%): [0.224, 0.721] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 73.39% complete, ETA 06:19:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.572 ms/op
# Warmup Iteration   2: 0.481 ms/op
# Warmup Iteration   3: 0.405 ms/op
# Warmup Iteration   4: 0.410 ms/op
# Warmup Iteration   5: 0.400 ms/op
Iteration   1: 0.403 ms/op
Iteration   2: 0.421 ms/op
Iteration   3: 0.485 ms/op
Iteration   4: 0.637 ms/op
Iteration   5: 0.549 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.499 ±(99.9%) 0.371 ms/op [Average]
  (min, avg, max) = (0.403, 0.499, 0.637), stdev = 0.096
  CI (99.9%): [0.128, 0.870] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 73.48% complete, ETA 06:17:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.606 ms/op
# Warmup Iteration   2: 0.460 ms/op
# Warmup Iteration   3: 0.443 ms/op
# Warmup Iteration   4: 0.438 ms/op
# Warmup Iteration   5: 0.406 ms/op
Iteration   1: 0.425 ms/op
Iteration   2: 0.437 ms/op
Iteration   3: 0.505 ms/op
Iteration   4: 0.587 ms/op
Iteration   5: 0.572 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.505 ±(99.9%) 0.286 ms/op [Average]
  (min, avg, max) = (0.425, 0.505, 0.587), stdev = 0.074
  CI (99.9%): [0.219, 0.792] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 73.58% complete, ETA 06:15:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.582 ms/op
# Warmup Iteration   2: 0.465 ms/op
# Warmup Iteration   3: 0.427 ms/op
# Warmup Iteration   4: 0.451 ms/op
# Warmup Iteration   5: 0.414 ms/op
Iteration   1: 0.424 ms/op
Iteration   2: 0.483 ms/op
Iteration   3: 0.507 ms/op
Iteration   4: 0.579 ms/op
Iteration   5: 0.487 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.496 ±(99.9%) 0.215 ms/op [Average]
  (min, avg, max) = (0.424, 0.496, 0.579), stdev = 0.056
  CI (99.9%): [0.281, 0.711] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 73.67% complete, ETA 06:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.562 ms/op
# Warmup Iteration   2: 0.433 ms/op
# Warmup Iteration   3: 0.465 ms/op
# Warmup Iteration   4: 0.482 ms/op
# Warmup Iteration   5: 0.450 ms/op
Iteration   1: 0.435 ms/op
Iteration   2: 0.480 ms/op
Iteration   3: 0.799 ms/op
Iteration   4: 0.584 ms/op
Iteration   5: 0.549 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.569 ±(99.9%) 0.544 ms/op [Average]
  (min, avg, max) = (0.435, 0.569, 0.799), stdev = 0.141
  CI (99.9%): [0.026, 1.113] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 73.77% complete, ETA 06:12:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.534 ms/op
# Warmup Iteration   2: 0.413 ms/op
# Warmup Iteration   3: 0.432 ms/op
# Warmup Iteration   4: 0.474 ms/op
# Warmup Iteration   5: 0.456 ms/op
Iteration   1: 0.458 ms/op
Iteration   2: 0.486 ms/op
Iteration   3: 0.958 ms/op
Iteration   4: 0.629 ms/op
Iteration   5: 0.508 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  0.608 ±(99.9%) 0.795 ms/op [Average]
  (min, avg, max) = (0.458, 0.608, 0.958), stdev = 0.207
  CI (99.9%): [? 0, 1.403] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 73.86% complete, ETA 06:10:16
# Fork: 1 of 1
# Warmup Iteration   1: 1.211 ms/op
# Warmup Iteration   2: 0.928 ms/op
# Warmup Iteration   3: 1.038 ms/op
# Warmup Iteration   4: 1.040 ms/op
# Warmup Iteration   5: 0.921 ms/op
Iteration   1: 0.933 ms/op
Iteration   2: 0.915 ms/op
Iteration   3: 1.241 ms/op
Iteration   4: 1.448 ms/op
Iteration   5: 1.130 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.133 ±(99.9%) 0.858 ms/op [Average]
  (min, avg, max) = (0.915, 1.133, 1.448), stdev = 0.223
  CI (99.9%): [0.275, 1.991] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 73.96% complete, ETA 06:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 1.252 ms/op
# Warmup Iteration   2: 0.979 ms/op
# Warmup Iteration   3: 1.011 ms/op
# Warmup Iteration   4: 1.053 ms/op
# Warmup Iteration   5: 0.975 ms/op
Iteration   1: 0.936 ms/op
Iteration   2: 0.999 ms/op
Iteration   3: 1.450 ms/op
Iteration   4: 1.430 ms/op
Iteration   5: 1.204 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.204 ±(99.9%) 0.914 ms/op [Average]
  (min, avg, max) = (0.936, 1.204, 1.450), stdev = 0.237
  CI (99.9%): [0.290, 2.117] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 74.05% complete, ETA 06:06:46
# Fork: 1 of 1
# Warmup Iteration   1: 1.321 ms/op
# Warmup Iteration   2: 0.983 ms/op
# Warmup Iteration   3: 1.117 ms/op
# Warmup Iteration   4: 1.071 ms/op
# Warmup Iteration   5: 1.106 ms/op
Iteration   1: 1.050 ms/op
Iteration   2: 1.029 ms/op
Iteration   3: 1.345 ms/op
Iteration   4: 1.835 ms/op
Iteration   5: 1.211 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.294 ±(99.9%) 1.266 ms/op [Average]
  (min, avg, max) = (1.029, 1.294, 1.835), stdev = 0.329
  CI (99.9%): [0.028, 2.560] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 74.15% complete, ETA 06:05:01
# Fork: 1 of 1
# Warmup Iteration   1: 1.284 ms/op
# Warmup Iteration   2: 1.016 ms/op
# Warmup Iteration   3: 1.085 ms/op
# Warmup Iteration   4: 1.055 ms/op
# Warmup Iteration   5: 1.037 ms/op
Iteration   1: 1.020 ms/op
Iteration   2: 1.035 ms/op
Iteration   3: 1.189 ms/op
Iteration   4: 1.470 ms/op
Iteration   5: 1.166 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.176 ±(99.9%) 0.696 ms/op [Average]
  (min, avg, max) = (1.020, 1.176, 1.470), stdev = 0.181
  CI (99.9%): [0.480, 1.872] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 74.24% complete, ETA 06:03:17
# Fork: 1 of 1
# Warmup Iteration   1: 1.623 ms/op
# Warmup Iteration   2: 0.811 ms/op
# Warmup Iteration   3: 0.936 ms/op
# Warmup Iteration   4: 0.973 ms/op
# Warmup Iteration   5: 0.926 ms/op
Iteration   1: 0.917 ms/op
Iteration   2: 0.999 ms/op
Iteration   3: 1.630 ms/op
Iteration   4: 1.087 ms/op
Iteration   5: 1.157 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.158 ±(99.9%) 1.074 ms/op [Average]
  (min, avg, max) = (0.917, 1.158, 1.630), stdev = 0.279
  CI (99.9%): [0.084, 2.232] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 74.34% complete, ETA 06:01:33
# Fork: 1 of 1
# Warmup Iteration   1: 1.322 ms/op
# Warmup Iteration   2: 0.771 ms/op
# Warmup Iteration   3: 0.892 ms/op
# Warmup Iteration   4: 0.894 ms/op
# Warmup Iteration   5: 0.834 ms/op
Iteration   1: 0.855 ms/op
Iteration   2: 0.958 ms/op
Iteration   3: 1.310 ms/op
Iteration   4: 1.197 ms/op
Iteration   5: 1.113 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.086 ±(99.9%) 0.702 ms/op [Average]
  (min, avg, max) = (0.855, 1.086, 1.310), stdev = 0.182
  CI (99.9%): [0.384, 1.788] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 74.43% complete, ETA 05:59:50
# Fork: 1 of 1
# Warmup Iteration   1: 2.370 ms/op
# Warmup Iteration   2: 1.791 ms/op
# Warmup Iteration   3: 1.837 ms/op
# Warmup Iteration   4: 1.706 ms/op
# Warmup Iteration   5: 1.530 ms/op
Iteration   1: 1.711 ms/op
Iteration   2: 1.768 ms/op
Iteration   3: 2.024 ms/op
Iteration   4: 2.196 ms/op
Iteration   5: 2.279 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.996 ±(99.9%) 0.970 ms/op [Average]
  (min, avg, max) = (1.711, 1.996, 2.279), stdev = 0.252
  CI (99.9%): [1.025, 2.966] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 74.53% complete, ETA 05:58:06
# Fork: 1 of 1
# Warmup Iteration   1: 2.358 ms/op
# Warmup Iteration   2: 1.947 ms/op
# Warmup Iteration   3: 1.715 ms/op
# Warmup Iteration   4: 1.708 ms/op
# Warmup Iteration   5: 1.661 ms/op
Iteration   1: 1.610 ms/op
Iteration   2: 1.729 ms/op
Iteration   3: 1.791 ms/op
Iteration   4: 2.260 ms/op
Iteration   5: 2.138 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.906 ±(99.9%) 1.073 ms/op [Average]
  (min, avg, max) = (1.610, 1.906, 2.260), stdev = 0.279
  CI (99.9%): [0.832, 2.979] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 74.62% complete, ETA 05:56:23
# Fork: 1 of 1
# Warmup Iteration   1: 2.358 ms/op
# Warmup Iteration   2: 1.861 ms/op
# Warmup Iteration   3: 1.702 ms/op
# Warmup Iteration   4: 1.741 ms/op
# Warmup Iteration   5: 1.649 ms/op
Iteration   1: 1.546 ms/op
Iteration   2: 1.790 ms/op
Iteration   3: 2.052 ms/op
Iteration   4: 2.396 ms/op
Iteration   5: 2.020 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  1.961 ±(99.9%) 1.221 ms/op [Average]
  (min, avg, max) = (1.546, 1.961, 2.396), stdev = 0.317
  CI (99.9%): [0.740, 3.182] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 74.72% complete, ETA 05:54:39
# Fork: 1 of 1
# Warmup Iteration   1: 2.334 ms/op
# Warmup Iteration   2: 1.895 ms/op
# Warmup Iteration   3: 1.715 ms/op
# Warmup Iteration   4: 1.768 ms/op
# Warmup Iteration   5: 1.599 ms/op
Iteration   1: 1.800 ms/op
Iteration   2: 1.748 ms/op
Iteration   3: 2.252 ms/op
Iteration   4: 2.270 ms/op
Iteration   5: 2.152 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.044 ±(99.9%) 0.969 ms/op [Average]
  (min, avg, max) = (1.748, 2.044, 2.270), stdev = 0.252
  CI (99.9%): [1.075, 3.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 74.81% complete, ETA 05:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 2.118 ms/op
# Warmup Iteration   2: 1.666 ms/op
# Warmup Iteration   3: 1.744 ms/op
# Warmup Iteration   4: 1.915 ms/op
# Warmup Iteration   5: 1.723 ms/op
Iteration   1: 1.674 ms/op
Iteration   2: 2.202 ms/op
Iteration   3: 2.703 ms/op
Iteration   4: 1.988 ms/op
Iteration   5: 2.074 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.128 ±(99.9%) 1.447 ms/op [Average]
  (min, avg, max) = (1.674, 2.128, 2.703), stdev = 0.376
  CI (99.9%): [0.681, 3.575] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 74.91% complete, ETA 05:51:14
# Fork: 1 of 1
# Warmup Iteration   1: 2.555 ms/op
# Warmup Iteration   2: 1.677 ms/op
# Warmup Iteration   3: 1.797 ms/op
# Warmup Iteration   4: 1.883 ms/op
# Warmup Iteration   5: 1.748 ms/op
Iteration   1: 1.806 ms/op
Iteration   2: 1.879 ms/op
Iteration   3: 3.444 ms/op
Iteration   4: 2.311 ms/op
Iteration   5: 2.196 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous":
  2.327 ±(99.9%) 2.537 ms/op [Average]
  (min, avg, max) = (1.806, 2.327, 3.444), stdev = 0.659
  CI (99.9%): [? 0, 4.865] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 75.00% complete, ETA 05:49:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10?³, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 75.09% complete, ETA 05:47:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 75.19% complete, ETA 05:46:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 75.28% complete, ETA 05:44:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 75.38% complete, ETA 05:42:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 75.47% complete, ETA 05:41:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 75.57% complete, ETA 05:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 10??, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 75.66% complete, ETA 05:37:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 75.76% complete, ETA 05:36:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 75.85% complete, ETA 05:34:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 75.95% complete, ETA 05:32:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 76.04% complete, ETA 05:30:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.004 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 76.14% complete, ETA 05:29:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.009), stdev = 0.002
  CI (99.9%): [0.001, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 76.23% complete, ETA 05:27:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.008 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.010), stdev = 0.002
  CI (99.9%): [? 0, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 76.33% complete, ETA 05:26:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.010), stdev = 0.002
  CI (99.9%): [? 10??, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 76.42% complete, ETA 05:24:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.008), stdev = 0.002
  CI (99.9%): [? 10?³, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 76.52% complete, ETA 05:22:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.008), stdev = 0.002
  CI (99.9%): [? 10?³, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 76.61% complete, ETA 05:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.009), stdev = 0.002
  CI (99.9%): [? 10?³, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 76.70% complete, ETA 05:19:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.014 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.011, 0.014, 0.018), stdev = 0.003
  CI (99.9%): [0.001, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 76.80% complete, ETA 05:17:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.015 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.011, 0.015, 0.019), stdev = 0.004
  CI (99.9%): [0.001, 0.029] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 76.89% complete, ETA 05:16:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.019 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.015 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.011, 0.015, 0.019), stdev = 0.004
  CI (99.9%): [0.001, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 76.99% complete, ETA 05:14:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.014 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.011, 0.014, 0.018), stdev = 0.003
  CI (99.9%): [0.002, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 77.08% complete, ETA 05:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.014 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.013 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.009, 0.013, 0.016), stdev = 0.003
  CI (99.9%): [0.001, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 77.18% complete, ETA 05:11:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.015 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.013 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.009, 0.013, 0.016), stdev = 0.003
  CI (99.9%): [? 0, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 77.27% complete, ETA 05:09:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.035 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.026 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.019, 0.026, 0.035), stdev = 0.008
  CI (99.9%): [? 0, 0.056] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 77.37% complete, ETA 05:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.021 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.027 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.020, 0.027, 0.034), stdev = 0.007
  CI (99.9%): [? 0, 0.055] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 77.46% complete, ETA 05:06:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.038 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.027 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.020, 0.027, 0.038), stdev = 0.008
  CI (99.9%): [? 0, 0.060] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 77.56% complete, ETA 05:04:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.022 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.026 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (0.019, 0.026, 0.036), stdev = 0.008
  CI (99.9%): [? 0, 0.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 77.65% complete, ETA 05:03:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.027 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.032 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.027 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (0.020, 0.027, 0.034), stdev = 0.006
  CI (99.9%): [0.002, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 77.75% complete, ETA 05:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.029 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.021 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.032 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.028 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (0.021, 0.028, 0.035), stdev = 0.006
  CI (99.9%): [0.003, 0.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 77.84% complete, ETA 05:00:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.050 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.040 ms/op
# Warmup Iteration   4: 0.041 ms/op
# Warmup Iteration   5: 0.042 ms/op
Iteration   1: 0.041 ms/op
Iteration   2: 0.042 ms/op
Iteration   3: 0.053 ms/op
Iteration   4: 0.069 ms/op
Iteration   5: 0.063 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.054 ±(99.9%) 0.047 ms/op [Average]
  (min, avg, max) = (0.041, 0.054, 0.069), stdev = 0.012
  CI (99.9%): [0.006, 0.101] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 77.94% complete, ETA 04:58:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.050 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.043 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.044 ms/op
Iteration   2: 0.043 ms/op
Iteration   3: 0.054 ms/op
Iteration   4: 0.069 ms/op
Iteration   5: 0.072 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.056 ±(99.9%) 0.052 ms/op [Average]
  (min, avg, max) = (0.043, 0.056, 0.072), stdev = 0.013
  CI (99.9%): [0.005, 0.108] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 78.03% complete, ETA 04:56:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.040 ms/op
Iteration   2: 0.040 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.067 ms/op
Iteration   5: 0.069 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.053 ±(99.9%) 0.053 ms/op [Average]
  (min, avg, max) = (0.040, 0.053, 0.069), stdev = 0.014
  CI (99.9%): [? 0, 0.107] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 78.13% complete, ETA 04:55:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.040 ms/op
Iteration   2: 0.041 ms/op
Iteration   3: 0.049 ms/op
Iteration   4: 0.066 ms/op
Iteration   5: 0.072 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.053 ±(99.9%) 0.056 ms/op [Average]
  (min, avg, max) = (0.040, 0.053, 0.072), stdev = 0.015
  CI (99.9%): [? 0, 0.110] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 78.22% complete, ETA 04:53:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.055 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.041 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.038 ms/op
Iteration   2: 0.038 ms/op
Iteration   3: 0.057 ms/op
Iteration   4: 0.071 ms/op
Iteration   5: 0.074 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.056 ±(99.9%) 0.066 ms/op [Average]
  (min, avg, max) = (0.038, 0.056, 0.074), stdev = 0.017
  CI (99.9%): [? 0, 0.121] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 78.31% complete, ETA 04:52:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.056 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.040 ms/op
# Warmup Iteration   4: 0.041 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.040 ms/op
Iteration   3: 0.049 ms/op
Iteration   4: 0.066 ms/op
Iteration   5: 0.064 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.052 ±(99.9%) 0.049 ms/op [Average]
  (min, avg, max) = (0.039, 0.052, 0.066), stdev = 0.013
  CI (99.9%): [0.003, 0.101] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 78.41% complete, ETA 04:50:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.103 ms/op
# Warmup Iteration   2: 0.085 ms/op
# Warmup Iteration   3: 0.082 ms/op
# Warmup Iteration   4: 0.080 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: 0.081 ms/op
Iteration   2: 0.082 ms/op
Iteration   3: 0.101 ms/op
Iteration   4: 0.136 ms/op
Iteration   5: 0.144 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.109 ±(99.9%) 0.114 ms/op [Average]
  (min, avg, max) = (0.081, 0.109, 0.144), stdev = 0.030
  CI (99.9%): [? 0, 0.223] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 78.50% complete, ETA 04:48:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.100 ms/op
# Warmup Iteration   2: 0.082 ms/op
# Warmup Iteration   3: 0.081 ms/op
# Warmup Iteration   4: 0.081 ms/op
# Warmup Iteration   5: 0.082 ms/op
Iteration   1: 0.078 ms/op
Iteration   2: 0.082 ms/op
Iteration   3: 0.102 ms/op
Iteration   4: 0.138 ms/op
Iteration   5: 0.125 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.105 ±(99.9%) 0.101 ms/op [Average]
  (min, avg, max) = (0.078, 0.105, 0.138), stdev = 0.026
  CI (99.9%): [0.004, 0.206] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 78.60% complete, ETA 04:47:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.098 ms/op
# Warmup Iteration   2: 0.079 ms/op
# Warmup Iteration   3: 0.082 ms/op
# Warmup Iteration   4: 0.081 ms/op
# Warmup Iteration   5: 0.083 ms/op
Iteration   1: 0.085 ms/op
Iteration   2: 0.084 ms/op
Iteration   3: 0.106 ms/op
Iteration   4: 0.142 ms/op
Iteration   5: 0.146 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.113 ±(99.9%) 0.116 ms/op [Average]
  (min, avg, max) = (0.084, 0.113, 0.146), stdev = 0.030
  CI (99.9%): [? 0, 0.228] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 78.69% complete, ETA 04:45:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.100 ms/op
# Warmup Iteration   2: 0.082 ms/op
# Warmup Iteration   3: 0.080 ms/op
# Warmup Iteration   4: 0.082 ms/op
# Warmup Iteration   5: 0.082 ms/op
Iteration   1: 0.080 ms/op
Iteration   2: 0.082 ms/op
Iteration   3: 0.100 ms/op
Iteration   4: 0.143 ms/op
Iteration   5: 0.151 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.111 ±(99.9%) 0.130 ms/op [Average]
  (min, avg, max) = (0.080, 0.111, 0.151), stdev = 0.034
  CI (99.9%): [? 0, 0.241] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 78.79% complete, ETA 04:44:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.111 ms/op
# Warmup Iteration   2: 0.076 ms/op
# Warmup Iteration   3: 0.076 ms/op
# Warmup Iteration   4: 0.075 ms/op
# Warmup Iteration   5: 0.076 ms/op
Iteration   1: 0.075 ms/op
Iteration   2: 0.076 ms/op
Iteration   3: 0.104 ms/op
Iteration   4: 0.131 ms/op
Iteration   5: 0.118 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.101 ±(99.9%) 0.096 ms/op [Average]
  (min, avg, max) = (0.075, 0.101, 0.131), stdev = 0.025
  CI (99.9%): [0.005, 0.196] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 78.88% complete, ETA 04:42:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.123 ms/op
# Warmup Iteration   2: 0.085 ms/op
# Warmup Iteration   3: 0.080 ms/op
# Warmup Iteration   4: 0.078 ms/op
# Warmup Iteration   5: 0.080 ms/op
Iteration   1: 0.082 ms/op
Iteration   2: 0.083 ms/op
Iteration   3: 0.120 ms/op
Iteration   4: 0.143 ms/op
Iteration   5: 0.135 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.112 ±(99.9%) 0.111 ms/op [Average]
  (min, avg, max) = (0.082, 0.112, 0.143), stdev = 0.029
  CI (99.9%): [0.002, 0.223] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 78.98% complete, ETA 04:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.196 ms/op
# Warmup Iteration   2: 0.157 ms/op
# Warmup Iteration   3: 0.163 ms/op
# Warmup Iteration   4: 0.162 ms/op
# Warmup Iteration   5: 0.162 ms/op
Iteration   1: 0.164 ms/op
Iteration   2: 0.173 ms/op
Iteration   3: 0.215 ms/op
Iteration   4: 0.280 ms/op
Iteration   5: 0.277 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.222 ±(99.9%) 0.212 ms/op [Average]
  (min, avg, max) = (0.164, 0.222, 0.280), stdev = 0.055
  CI (99.9%): [0.010, 0.434] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 79.07% complete, ETA 04:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.210 ms/op
# Warmup Iteration   2: 0.166 ms/op
# Warmup Iteration   3: 0.166 ms/op
# Warmup Iteration   4: 0.166 ms/op
# Warmup Iteration   5: 0.171 ms/op
Iteration   1: 0.173 ms/op
Iteration   2: 0.166 ms/op
Iteration   3: 0.206 ms/op
Iteration   4: 0.267 ms/op
Iteration   5: 0.274 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.217 ±(99.9%) 0.196 ms/op [Average]
  (min, avg, max) = (0.166, 0.217, 0.274), stdev = 0.051
  CI (99.9%): [0.021, 0.413] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 79.17% complete, ETA 04:37:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.208 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.163 ms/op
# Warmup Iteration   4: 0.164 ms/op
# Warmup Iteration   5: 0.163 ms/op
Iteration   1: 0.160 ms/op
Iteration   2: 0.166 ms/op
Iteration   3: 0.190 ms/op
Iteration   4: 0.284 ms/op
Iteration   5: 0.286 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.217 ±(99.9%) 0.242 ms/op [Average]
  (min, avg, max) = (0.160, 0.217, 0.286), stdev = 0.063
  CI (99.9%): [? 0, 0.459] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 79.26% complete, ETA 04:36:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.200 ms/op
# Warmup Iteration   2: 0.164 ms/op
# Warmup Iteration   3: 0.163 ms/op
# Warmup Iteration   4: 0.159 ms/op
# Warmup Iteration   5: 0.164 ms/op
Iteration   1: 0.161 ms/op
Iteration   2: 0.161 ms/op
Iteration   3: 0.199 ms/op
Iteration   4: 0.264 ms/op
Iteration   5: 0.256 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.208 ±(99.9%) 0.193 ms/op [Average]
  (min, avg, max) = (0.161, 0.208, 0.264), stdev = 0.050
  CI (99.9%): [0.016, 0.401] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 79.36% complete, ETA 04:34:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.232 ms/op
# Warmup Iteration   2: 0.165 ms/op
# Warmup Iteration   3: 0.156 ms/op
# Warmup Iteration   4: 0.162 ms/op
# Warmup Iteration   5: 0.163 ms/op
Iteration   1: 0.165 ms/op
Iteration   2: 0.166 ms/op
Iteration   3: 0.246 ms/op
Iteration   4: 0.266 ms/op
Iteration   5: 0.271 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.223 ±(99.9%) 0.206 ms/op [Average]
  (min, avg, max) = (0.165, 0.223, 0.271), stdev = 0.053
  CI (99.9%): [0.017, 0.428] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 79.45% complete, ETA 04:33:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.223 ms/op
# Warmup Iteration   2: 0.155 ms/op
# Warmup Iteration   3: 0.158 ms/op
# Warmup Iteration   4: 0.160 ms/op
# Warmup Iteration   5: 0.160 ms/op
Iteration   1: 0.165 ms/op
Iteration   2: 0.171 ms/op
Iteration   3: 0.245 ms/op
Iteration   4: 0.242 ms/op
Iteration   5: 0.258 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.216 ±(99.9%) 0.171 ms/op [Average]
  (min, avg, max) = (0.165, 0.216, 0.258), stdev = 0.044
  CI (99.9%): [0.045, 0.387] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 79.55% complete, ETA 04:31:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.391 ms/op
# Warmup Iteration   2: 0.321 ms/op
# Warmup Iteration   3: 0.322 ms/op
# Warmup Iteration   4: 0.313 ms/op
# Warmup Iteration   5: 0.317 ms/op
Iteration   1: 0.338 ms/op
Iteration   2: 0.319 ms/op
Iteration   3: 0.400 ms/op
Iteration   4: 0.512 ms/op
Iteration   5: 0.503 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.414 ±(99.9%) 0.347 ms/op [Average]
  (min, avg, max) = (0.319, 0.414, 0.512), stdev = 0.090
  CI (99.9%): [0.067, 0.761] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 79.64% complete, ETA 04:30:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.399 ms/op
# Warmup Iteration   2: 0.320 ms/op
# Warmup Iteration   3: 0.318 ms/op
# Warmup Iteration   4: 0.323 ms/op
# Warmup Iteration   5: 0.321 ms/op
Iteration   1: 0.319 ms/op
Iteration   2: 0.330 ms/op
Iteration   3: 0.388 ms/op
Iteration   4: 0.558 ms/op
Iteration   5: 0.516 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.422 ±(99.9%) 0.421 ms/op [Average]
  (min, avg, max) = (0.319, 0.422, 0.558), stdev = 0.109
  CI (99.9%): [0.001, 0.843] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 79.73% complete, ETA 04:28:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.397 ms/op
# Warmup Iteration   2: 0.338 ms/op
# Warmup Iteration   3: 0.327 ms/op
# Warmup Iteration   4: 0.319 ms/op
# Warmup Iteration   5: 0.329 ms/op
Iteration   1: 0.329 ms/op
Iteration   2: 0.323 ms/op
Iteration   3: 0.393 ms/op
Iteration   4: 0.545 ms/op
Iteration   5: 0.532 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.424 ±(99.9%) 0.416 ms/op [Average]
  (min, avg, max) = (0.323, 0.424, 0.545), stdev = 0.108
  CI (99.9%): [0.008, 0.840] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 79.83% complete, ETA 04:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.411 ms/op
# Warmup Iteration   2: 0.309 ms/op
# Warmup Iteration   3: 0.315 ms/op
# Warmup Iteration   4: 0.314 ms/op
# Warmup Iteration   5: 0.310 ms/op
Iteration   1: 0.306 ms/op
Iteration   2: 0.310 ms/op
Iteration   3: 0.368 ms/op
Iteration   4: 0.555 ms/op
Iteration   5: 0.503 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.408 ±(99.9%) 0.440 ms/op [Average]
  (min, avg, max) = (0.306, 0.408, 0.555), stdev = 0.114
  CI (99.9%): [? 0, 0.848] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 79.92% complete, ETA 04:25:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.427 ms/op
# Warmup Iteration   2: 0.327 ms/op
# Warmup Iteration   3: 0.331 ms/op
# Warmup Iteration   4: 0.322 ms/op
# Warmup Iteration   5: 0.321 ms/op
Iteration   1: 0.321 ms/op
Iteration   2: 0.327 ms/op
Iteration   3: 0.449 ms/op
Iteration   4: 0.538 ms/op
Iteration   5: 0.548 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.437 ±(99.9%) 0.423 ms/op [Average]
  (min, avg, max) = (0.321, 0.437, 0.548), stdev = 0.110
  CI (99.9%): [0.014, 0.859] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 80.02% complete, ETA 04:24:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.429 ms/op
# Warmup Iteration   2: 0.322 ms/op
# Warmup Iteration   3: 0.298 ms/op
# Warmup Iteration   4: 0.298 ms/op
# Warmup Iteration   5: 0.307 ms/op
Iteration   1: 0.307 ms/op
Iteration   2: 0.293 ms/op
Iteration   3: 0.416 ms/op
Iteration   4: 0.477 ms/op
Iteration   5: 0.509 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.400 ±(99.9%) 0.376 ms/op [Average]
  (min, avg, max) = (0.293, 0.400, 0.509), stdev = 0.098
  CI (99.9%): [0.024, 0.777] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 80.11% complete, ETA 04:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.828 ms/op
# Warmup Iteration   2: 0.636 ms/op
# Warmup Iteration   3: 0.665 ms/op
# Warmup Iteration   4: 0.665 ms/op
# Warmup Iteration   5: 0.660 ms/op
Iteration   1: 0.649 ms/op
Iteration   2: 0.655 ms/op
Iteration   3: 0.839 ms/op
Iteration   4: 1.044 ms/op
Iteration   5: 1.054 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.848 ±(99.9%) 0.764 ms/op [Average]
  (min, avg, max) = (0.649, 0.848, 1.054), stdev = 0.198
  CI (99.9%): [0.084, 1.612] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 80.21% complete, ETA 04:21:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.771 ms/op
# Warmup Iteration   2: 0.642 ms/op
# Warmup Iteration   3: 0.655 ms/op
# Warmup Iteration   4: 0.662 ms/op
# Warmup Iteration   5: 0.683 ms/op
Iteration   1: 0.693 ms/op
Iteration   2: 0.665 ms/op
Iteration   3: 0.843 ms/op
Iteration   4: 1.107 ms/op
Iteration   5: 1.089 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.879 ±(99.9%) 0.811 ms/op [Average]
  (min, avg, max) = (0.665, 0.879, 1.107), stdev = 0.211
  CI (99.9%): [0.068, 1.691] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 80.30% complete, ETA 04:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.814 ms/op
# Warmup Iteration   2: 0.622 ms/op
# Warmup Iteration   3: 0.637 ms/op
# Warmup Iteration   4: 0.665 ms/op
# Warmup Iteration   5: 0.689 ms/op
Iteration   1: 0.683 ms/op
Iteration   2: 0.693 ms/op
Iteration   3: 0.876 ms/op
Iteration   4: 1.160 ms/op
Iteration   5: 1.040 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.890 ±(99.9%) 0.811 ms/op [Average]
  (min, avg, max) = (0.683, 0.890, 1.160), stdev = 0.211
  CI (99.9%): [0.080, 1.701] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 80.40% complete, ETA 04:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.806 ms/op
# Warmup Iteration   2: 0.663 ms/op
# Warmup Iteration   3: 0.678 ms/op
# Warmup Iteration   4: 0.683 ms/op
# Warmup Iteration   5: 0.700 ms/op
Iteration   1: 0.707 ms/op
Iteration   2: 0.704 ms/op
Iteration   3: 0.887 ms/op
Iteration   4: 1.100 ms/op
Iteration   5: 1.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.883 ±(99.9%) 0.690 ms/op [Average]
  (min, avg, max) = (0.704, 0.883, 1.100), stdev = 0.179
  CI (99.9%): [0.193, 1.574] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 80.49% complete, ETA 04:16:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.896 ms/op
# Warmup Iteration   2: 0.651 ms/op
# Warmup Iteration   3: 0.642 ms/op
# Warmup Iteration   4: 0.655 ms/op
# Warmup Iteration   5: 0.653 ms/op
Iteration   1: 0.653 ms/op
Iteration   2: 0.652 ms/op
Iteration   3: 0.920 ms/op
Iteration   4: 1.041 ms/op
Iteration   5: 1.033 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.860 ±(99.9%) 0.751 ms/op [Average]
  (min, avg, max) = (0.652, 0.860, 1.041), stdev = 0.195
  CI (99.9%): [0.109, 1.610] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 80.59% complete, ETA 04:15:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.928 ms/op
# Warmup Iteration   2: 0.625 ms/op
# Warmup Iteration   3: 0.641 ms/op
# Warmup Iteration   4: 0.638 ms/op
# Warmup Iteration   5: 0.625 ms/op
Iteration   1: 0.637 ms/op
Iteration   2: 0.646 ms/op
Iteration   3: 0.895 ms/op
Iteration   4: 1.020 ms/op
Iteration   5: 0.958 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.831 ±(99.9%) 0.689 ms/op [Average]
  (min, avg, max) = (0.637, 0.831, 1.020), stdev = 0.179
  CI (99.9%): [0.142, 1.520] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 80.68% complete, ETA 04:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 1.600 ms/op
# Warmup Iteration   2: 1.382 ms/op
# Warmup Iteration   3: 1.323 ms/op
# Warmup Iteration   4: 1.266 ms/op
# Warmup Iteration   5: 1.308 ms/op
Iteration   1: 1.308 ms/op
Iteration   2: 1.291 ms/op
Iteration   3: 1.473 ms/op
Iteration   4: 2.259 ms/op
Iteration   5: 2.123 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.691 ±(99.9%) 1.789 ms/op [Average]
  (min, avg, max) = (1.291, 1.691, 2.259), stdev = 0.465
  CI (99.9%): [? 0, 3.480] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 80.78% complete, ETA 04:12:07
# Fork: 1 of 1
# Warmup Iteration   1: 1.658 ms/op
# Warmup Iteration   2: 1.281 ms/op
# Warmup Iteration   3: 1.308 ms/op
# Warmup Iteration   4: 1.328 ms/op
# Warmup Iteration   5: 1.307 ms/op
Iteration   1: 1.281 ms/op
Iteration   2: 1.325 ms/op
Iteration   3: 1.510 ms/op
Iteration   4: 2.116 ms/op
Iteration   5: 2.112 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.669 ±(99.9%) 1.599 ms/op [Average]
  (min, avg, max) = (1.281, 1.669, 2.116), stdev = 0.415
  CI (99.9%): [0.070, 3.268] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 80.87% complete, ETA 04:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 1.636 ms/op
# Warmup Iteration   2: 1.318 ms/op
# Warmup Iteration   3: 1.292 ms/op
# Warmup Iteration   4: 1.272 ms/op
# Warmup Iteration   5: 1.311 ms/op
Iteration   1: 1.308 ms/op
Iteration   2: 1.292 ms/op
Iteration   3: 1.632 ms/op
Iteration   4: 2.065 ms/op
Iteration   5: 2.273 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.714 ±(99.9%) 1.706 ms/op [Average]
  (min, avg, max) = (1.292, 1.714, 2.273), stdev = 0.443
  CI (99.9%): [0.008, 3.421] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 80.97% complete, ETA 04:09:08
# Fork: 1 of 1
# Warmup Iteration   1: 1.675 ms/op
# Warmup Iteration   2: 1.292 ms/op
# Warmup Iteration   3: 1.307 ms/op
# Warmup Iteration   4: 1.306 ms/op
# Warmup Iteration   5: 1.302 ms/op
Iteration   1: 1.352 ms/op
Iteration   2: 1.368 ms/op
Iteration   3: 1.723 ms/op
Iteration   4: 2.190 ms/op
Iteration   5: 1.993 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.725 ±(99.9%) 1.434 ms/op [Average]
  (min, avg, max) = (1.352, 1.725, 2.190), stdev = 0.372
  CI (99.9%): [0.292, 3.159] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 81.06% complete, ETA 04:07:38
# Fork: 1 of 1
# Warmup Iteration   1: 1.767 ms/op
# Warmup Iteration   2: 1.343 ms/op
# Warmup Iteration   3: 1.335 ms/op
# Warmup Iteration   4: 1.359 ms/op
# Warmup Iteration   5: 1.335 ms/op
Iteration   1: 1.354 ms/op
Iteration   2: 1.340 ms/op
Iteration   3: 1.923 ms/op
Iteration   4: 2.196 ms/op
Iteration   5: 2.274 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.818 ±(99.9%) 1.728 ms/op [Average]
  (min, avg, max) = (1.340, 1.818, 2.274), stdev = 0.449
  CI (99.9%): [0.090, 3.545] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 81.16% complete, ETA 04:06:09
# Fork: 1 of 1
# Warmup Iteration   1: 1.783 ms/op
# Warmup Iteration   2: 1.292 ms/op
# Warmup Iteration   3: 1.295 ms/op
# Warmup Iteration   4: 1.336 ms/op
# Warmup Iteration   5: 1.375 ms/op
Iteration   1: 1.380 ms/op
Iteration   2: 1.356 ms/op
Iteration   3: 2.029 ms/op
Iteration   4: 2.177 ms/op
Iteration   5: 2.055 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.800 ±(99.9%) 1.532 ms/op [Average]
  (min, avg, max) = (1.356, 1.800, 2.177), stdev = 0.398
  CI (99.9%): [0.267, 3.332] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 81.25% complete, ETA 04:04:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 81.34% complete, ETA 04:03:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 81.44% complete, ETA 04:01:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 81.53% complete, ETA 04:00:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 81.63% complete, ETA 03:58:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 81.72% complete, ETA 03:57:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 81.82% complete, ETA 03:55:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 81.91% complete, ETA 03:54:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 82.01% complete, ETA 03:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 82.10% complete, ETA 03:51:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 82.20% complete, ETA 03:50:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.004 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.002, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 82.29% complete, ETA 03:48:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.004 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 82.39% complete, ETA 03:47:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.009), stdev = 0.002
  CI (99.9%): [? 0, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 82.48% complete, ETA 03:45:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.006, 0.007, 0.009), stdev = 0.002
  CI (99.9%): [0.001, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 82.58% complete, ETA 03:44:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.009), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 82.67% complete, ETA 03:42:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.006 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.001
  CI (99.9%): [0.001, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 82.77% complete, ETA 03:41:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.009 ms/op
Iteration   5: 0.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.009), stdev = 0.002
  CI (99.9%): [? 0, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 82.86% complete, ETA 03:39:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.007 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.008), stdev = 0.002
  CI (99.9%): [? 10?³, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 82.95% complete, ETA 03:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.013 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.010, 0.013, 0.018), stdev = 0.004
  CI (99.9%): [? 0, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 83.05% complete, ETA 03:37:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.018 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.013 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.010, 0.013, 0.018), stdev = 0.004
  CI (99.9%): [? 0, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 83.14% complete, ETA 03:35:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.015 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.013 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.010, 0.013, 0.017), stdev = 0.003
  CI (99.9%): [? 10?³, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 83.24% complete, ETA 03:34:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.014 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.010, 0.014, 0.018), stdev = 0.004
  CI (99.9%): [? 0, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 83.33% complete, ETA 03:32:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.015 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.014 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.010, 0.014, 0.018), stdev = 0.004
  CI (99.9%): [? 0, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 83.43% complete, ETA 03:31:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.014 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.011, 0.014, 0.018), stdev = 0.003
  CI (99.9%): [0.001, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 83.52% complete, ETA 03:30:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.033 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.026 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.020, 0.026, 0.035), stdev = 0.007
  CI (99.9%): [? 0, 0.054] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 83.62% complete, ETA 03:28:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.036 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.027 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (0.020, 0.027, 0.036), stdev = 0.008
  CI (99.9%): [? 0, 0.059] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 83.71% complete, ETA 03:27:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.027 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.022 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.032 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.025 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.034), stdev = 0.007
  CI (99.9%): [? 0, 0.054] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 83.81% complete, ETA 03:25:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.021 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.021 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.027 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (0.021, 0.027, 0.034), stdev = 0.007
  CI (99.9%): [0.001, 0.053] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 83.90% complete, ETA 03:24:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.026 ms/op
# Warmup Iteration   2: 0.021 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.035 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.036 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.029 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (0.020, 0.029, 0.036), stdev = 0.008
  CI (99.9%): [? 0, 0.060] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 84.00% complete, ETA 03:23:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.018 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.035 ms/op
Iteration   4: 0.033 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.028 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.019, 0.028, 0.035), stdev = 0.007
  CI (99.9%): [? 10??, 0.056] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 84.09% complete, ETA 03:21:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.050 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.042 ms/op
Iteration   2: 0.041 ms/op
Iteration   3: 0.049 ms/op
Iteration   4: 0.072 ms/op
Iteration   5: 0.079 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.057 ±(99.9%) 0.068 ms/op [Average]
  (min, avg, max) = (0.041, 0.057, 0.079), stdev = 0.018
  CI (99.9%): [? 0, 0.125] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 84.19% complete, ETA 03:20:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.051 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.042 ms/op
# Warmup Iteration   4: 0.042 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.043 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.054 ms/op
Iteration   4: 0.072 ms/op
Iteration   5: 0.060 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.055 ±(99.9%) 0.046 ms/op [Average]
  (min, avg, max) = (0.043, 0.055, 0.072), stdev = 0.012
  CI (99.9%): [0.009, 0.101] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 84.28% complete, ETA 03:18:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.041 ms/op
# Warmup Iteration   3: 0.043 ms/op
# Warmup Iteration   4: 0.045 ms/op
# Warmup Iteration   5: 0.046 ms/op
Iteration   1: 0.044 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.055 ms/op
Iteration   4: 0.071 ms/op
Iteration   5: 0.069 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.057 ±(99.9%) 0.050 ms/op [Average]
  (min, avg, max) = (0.044, 0.057, 0.071), stdev = 0.013
  CI (99.9%): [0.006, 0.107] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 84.38% complete, ETA 03:17:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.051 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.043 ms/op
# Warmup Iteration   4: 0.044 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.043 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.052 ms/op
Iteration   4: 0.070 ms/op
Iteration   5: 0.068 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.055 ±(99.9%) 0.049 ms/op [Average]
  (min, avg, max) = (0.043, 0.055, 0.070), stdev = 0.013
  CI (99.9%): [0.006, 0.104] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 84.47% complete, ETA 03:16:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.063 ms/op
# Warmup Iteration   2: 0.039 ms/op
# Warmup Iteration   3: 0.043 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.037 ms/op
Iteration   2: 0.042 ms/op
Iteration   3: 0.068 ms/op
Iteration   4: 0.068 ms/op
Iteration   5: 0.062 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.056 ±(99.9%) 0.057 ms/op [Average]
  (min, avg, max) = (0.037, 0.056, 0.068), stdev = 0.015
  CI (99.9%): [? 0, 0.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 84.56% complete, ETA 03:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.067 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.043 ms/op
Iteration   3: 0.074 ms/op
Iteration   4: 0.068 ms/op
Iteration   5: 0.067 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.058 ±(99.9%) 0.062 ms/op [Average]
  (min, avg, max) = (0.039, 0.058, 0.074), stdev = 0.016
  CI (99.9%): [? 0, 0.120] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 84.66% complete, ETA 03:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.102 ms/op
# Warmup Iteration   2: 0.082 ms/op
# Warmup Iteration   3: 0.080 ms/op
# Warmup Iteration   4: 0.080 ms/op
# Warmup Iteration   5: 0.080 ms/op
Iteration   1: 0.079 ms/op
Iteration   2: 0.081 ms/op
Iteration   3: 0.097 ms/op
Iteration   4: 0.138 ms/op
Iteration   5: 0.145 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.108 ±(99.9%) 0.121 ms/op [Average]
  (min, avg, max) = (0.079, 0.108, 0.145), stdev = 0.031
  CI (99.9%): [? 0, 0.228] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 84.75% complete, ETA 03:11:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.102 ms/op
# Warmup Iteration   2: 0.082 ms/op
# Warmup Iteration   3: 0.082 ms/op
# Warmup Iteration   4: 0.084 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: 0.081 ms/op
Iteration   2: 0.080 ms/op
Iteration   3: 0.103 ms/op
Iteration   4: 0.141 ms/op
Iteration   5: 0.138 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.109 ±(99.9%) 0.113 ms/op [Average]
  (min, avg, max) = (0.080, 0.109, 0.141), stdev = 0.029
  CI (99.9%): [? 0, 0.221] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 84.85% complete, ETA 03:10:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.098 ms/op
# Warmup Iteration   2: 0.081 ms/op
# Warmup Iteration   3: 0.081 ms/op
# Warmup Iteration   4: 0.080 ms/op
# Warmup Iteration   5: 0.080 ms/op
Iteration   1: 0.081 ms/op
Iteration   2: 0.080 ms/op
Iteration   3: 0.090 ms/op
Iteration   4: 0.138 ms/op
Iteration   5: 0.126 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.103 ±(99.9%) 0.104 ms/op [Average]
  (min, avg, max) = (0.080, 0.103, 0.138), stdev = 0.027
  CI (99.9%): [? 0, 0.207] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 84.94% complete, ETA 03:09:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.103 ms/op
# Warmup Iteration   2: 0.081 ms/op
# Warmup Iteration   3: 0.078 ms/op
# Warmup Iteration   4: 0.080 ms/op
# Warmup Iteration   5: 0.082 ms/op
Iteration   1: 0.082 ms/op
Iteration   2: 0.079 ms/op
Iteration   3: 0.099 ms/op
Iteration   4: 0.137 ms/op
Iteration   5: 0.152 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.110 ±(99.9%) 0.126 ms/op [Average]
  (min, avg, max) = (0.079, 0.110, 0.152), stdev = 0.033
  CI (99.9%): [? 0, 0.236] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 85.04% complete, ETA 03:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.130 ms/op
# Warmup Iteration   2: 0.084 ms/op
# Warmup Iteration   3: 0.078 ms/op
# Warmup Iteration   4: 0.076 ms/op
# Warmup Iteration   5: 0.076 ms/op
Iteration   1: 0.077 ms/op
Iteration   2: 0.080 ms/op
Iteration   3: 0.124 ms/op
Iteration   4: 0.125 ms/op
Iteration   5: 0.123 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.106 ±(99.9%) 0.096 ms/op [Average]
  (min, avg, max) = (0.077, 0.106, 0.125), stdev = 0.025
  CI (99.9%): [0.010, 0.202] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 85.13% complete, ETA 03:06:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.130 ms/op
# Warmup Iteration   2: 0.082 ms/op
# Warmup Iteration   3: 0.080 ms/op
# Warmup Iteration   4: 0.078 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: 0.082 ms/op
Iteration   2: 0.082 ms/op
Iteration   3: 0.134 ms/op
Iteration   4: 0.135 ms/op
Iteration   5: 0.133 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.113 ±(99.9%) 0.109 ms/op [Average]
  (min, avg, max) = (0.082, 0.113, 0.135), stdev = 0.028
  CI (99.9%): [0.004, 0.222] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 85.23% complete, ETA 03:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.203 ms/op
# Warmup Iteration   2: 0.159 ms/op
# Warmup Iteration   3: 0.163 ms/op
# Warmup Iteration   4: 0.170 ms/op
# Warmup Iteration   5: 0.168 ms/op
Iteration   1: 0.162 ms/op
Iteration   2: 0.165 ms/op
Iteration   3: 0.197 ms/op
Iteration   4: 0.301 ms/op
Iteration   5: 0.300 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.225 ±(99.9%) 0.271 ms/op [Average]
  (min, avg, max) = (0.162, 0.225, 0.301), stdev = 0.070
  CI (99.9%): [? 0, 0.496] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 85.32% complete, ETA 03:03:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.209 ms/op
# Warmup Iteration   2: 0.172 ms/op
# Warmup Iteration   3: 0.173 ms/op
# Warmup Iteration   4: 0.168 ms/op
# Warmup Iteration   5: 0.172 ms/op
Iteration   1: 0.171 ms/op
Iteration   2: 0.170 ms/op
Iteration   3: 0.210 ms/op
Iteration   4: 0.294 ms/op
Iteration   5: 0.304 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.230 ±(99.9%) 0.251 ms/op [Average]
  (min, avg, max) = (0.170, 0.230, 0.304), stdev = 0.065
  CI (99.9%): [? 0, 0.481] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 85.42% complete, ETA 03:02:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.208 ms/op
# Warmup Iteration   2: 0.156 ms/op
# Warmup Iteration   3: 0.159 ms/op
# Warmup Iteration   4: 0.165 ms/op
# Warmup Iteration   5: 0.169 ms/op
Iteration   1: 0.168 ms/op
Iteration   2: 0.171 ms/op
Iteration   3: 0.211 ms/op
Iteration   4: 0.265 ms/op
Iteration   5: 0.262 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.215 ±(99.9%) 0.182 ms/op [Average]
  (min, avg, max) = (0.168, 0.215, 0.265), stdev = 0.047
  CI (99.9%): [0.034, 0.397] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 85.51% complete, ETA 03:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.200 ms/op
# Warmup Iteration   2: 0.170 ms/op
# Warmup Iteration   3: 0.171 ms/op
# Warmup Iteration   4: 0.173 ms/op
# Warmup Iteration   5: 0.182 ms/op
Iteration   1: 0.179 ms/op
Iteration   2: 0.169 ms/op
Iteration   3: 0.216 ms/op
Iteration   4: 0.270 ms/op
Iteration   5: 0.268 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.220 ±(99.9%) 0.184 ms/op [Average]
  (min, avg, max) = (0.169, 0.220, 0.270), stdev = 0.048
  CI (99.9%): [0.037, 0.404] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 85.61% complete, ETA 02:59:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.276 ms/op
# Warmup Iteration   2: 0.183 ms/op
# Warmup Iteration   3: 0.188 ms/op
# Warmup Iteration   4: 0.193 ms/op
# Warmup Iteration   5: 0.196 ms/op
Iteration   1: 0.195 ms/op
Iteration   2: 0.208 ms/op
Iteration   3: 0.328 ms/op
Iteration   4: 0.268 ms/op
Iteration   5: 0.271 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.254 ±(99.9%) 0.207 ms/op [Average]
  (min, avg, max) = (0.195, 0.254, 0.328), stdev = 0.054
  CI (99.9%): [0.047, 0.461] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 85.70% complete, ETA 02:58:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.346 ms/op
# Warmup Iteration   2: 0.177 ms/op
# Warmup Iteration   3: 0.182 ms/op
# Warmup Iteration   4: 0.178 ms/op
# Warmup Iteration   5: 0.178 ms/op
Iteration   1: 0.168 ms/op
Iteration   2: 0.178 ms/op
Iteration   3: 0.259 ms/op
Iteration   4: 0.260 ms/op
Iteration   5: 0.259 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.225 ±(99.9%) 0.183 ms/op [Average]
  (min, avg, max) = (0.168, 0.225, 0.260), stdev = 0.048
  CI (99.9%): [0.041, 0.408] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 85.80% complete, ETA 02:56:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.405 ms/op
# Warmup Iteration   2: 0.323 ms/op
# Warmup Iteration   3: 0.332 ms/op
# Warmup Iteration   4: 0.332 ms/op
# Warmup Iteration   5: 0.331 ms/op
Iteration   1: 0.325 ms/op
Iteration   2: 0.329 ms/op
Iteration   3: 0.427 ms/op
Iteration   4: 0.533 ms/op
Iteration   5: 0.587 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.440 ±(99.9%) 0.456 ms/op [Average]
  (min, avg, max) = (0.325, 0.440, 0.587), stdev = 0.119
  CI (99.9%): [? 0, 0.897] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 85.89% complete, ETA 02:55:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.395 ms/op
# Warmup Iteration   2: 0.337 ms/op
# Warmup Iteration   3: 0.326 ms/op
# Warmup Iteration   4: 0.325 ms/op
# Warmup Iteration   5: 0.315 ms/op
Iteration   1: 0.306 ms/op
Iteration   2: 0.309 ms/op
Iteration   3: 0.377 ms/op
Iteration   4: 0.521 ms/op
Iteration   5: 0.534 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.410 ±(99.9%) 0.430 ms/op [Average]
  (min, avg, max) = (0.306, 0.410, 0.534), stdev = 0.112
  CI (99.9%): [? 0, 0.839] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 85.98% complete, ETA 02:54:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.416 ms/op
# Warmup Iteration   2: 0.339 ms/op
# Warmup Iteration   3: 0.321 ms/op
# Warmup Iteration   4: 0.328 ms/op
# Warmup Iteration   5: 0.329 ms/op
Iteration   1: 0.325 ms/op
Iteration   2: 0.321 ms/op
Iteration   3: 0.426 ms/op
Iteration   4: 0.558 ms/op
Iteration   5: 0.560 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.438 ±(99.9%) 0.454 ms/op [Average]
  (min, avg, max) = (0.321, 0.438, 0.560), stdev = 0.118
  CI (99.9%): [? 0, 0.892] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 86.08% complete, ETA 02:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.401 ms/op
# Warmup Iteration   2: 0.329 ms/op
# Warmup Iteration   3: 0.331 ms/op
# Warmup Iteration   4: 0.333 ms/op
# Warmup Iteration   5: 0.330 ms/op
Iteration   1: 0.331 ms/op
Iteration   2: 0.326 ms/op
Iteration   3: 0.417 ms/op
Iteration   4: 0.573 ms/op
Iteration   5: 0.599 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.449 ±(99.9%) 0.501 ms/op [Average]
  (min, avg, max) = (0.326, 0.449, 0.599), stdev = 0.130
  CI (99.9%): [? 0, 0.951] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 86.17% complete, ETA 02:51:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.476 ms/op
# Warmup Iteration   2: 0.322 ms/op
# Warmup Iteration   3: 0.334 ms/op
# Warmup Iteration   4: 0.336 ms/op
# Warmup Iteration   5: 0.325 ms/op
Iteration   1: 0.325 ms/op
Iteration   2: 0.362 ms/op
Iteration   3: 0.540 ms/op
Iteration   4: 0.498 ms/op
Iteration   5: 0.532 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.451 ±(99.9%) 0.387 ms/op [Average]
  (min, avg, max) = (0.325, 0.451, 0.540), stdev = 0.101
  CI (99.9%): [0.064, 0.839] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 86.27% complete, ETA 02:50:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.464 ms/op
# Warmup Iteration   2: 0.315 ms/op
# Warmup Iteration   3: 0.327 ms/op
# Warmup Iteration   4: 0.325 ms/op
# Warmup Iteration   5: 0.324 ms/op
Iteration   1: 0.316 ms/op
Iteration   2: 0.353 ms/op
Iteration   3: 0.583 ms/op
Iteration   4: 0.542 ms/op
Iteration   5: 0.525 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.464 ±(99.9%) 0.464 ms/op [Average]
  (min, avg, max) = (0.316, 0.464, 0.583), stdev = 0.120
  CI (99.9%): [? 10??, 0.928] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 86.36% complete, ETA 02:48:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.818 ms/op
# Warmup Iteration   2: 0.681 ms/op
# Warmup Iteration   3: 0.677 ms/op
# Warmup Iteration   4: 0.660 ms/op
# Warmup Iteration   5: 0.695 ms/op
Iteration   1: 0.696 ms/op
Iteration   2: 0.697 ms/op
Iteration   3: 0.843 ms/op
Iteration   4: 1.256 ms/op
Iteration   5: 1.144 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.927 ±(99.9%) 0.999 ms/op [Average]
  (min, avg, max) = (0.696, 0.927, 1.256), stdev = 0.259
  CI (99.9%): [? 0, 1.926] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 86.46% complete, ETA 02:47:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.806 ms/op
# Warmup Iteration   2: 0.662 ms/op
# Warmup Iteration   3: 0.648 ms/op
# Warmup Iteration   4: 0.671 ms/op
# Warmup Iteration   5: 0.644 ms/op
Iteration   1: 0.637 ms/op
Iteration   2: 0.652 ms/op
Iteration   3: 0.810 ms/op
Iteration   4: 1.158 ms/op
Iteration   5: 1.056 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.863 ±(99.9%) 0.909 ms/op [Average]
  (min, avg, max) = (0.637, 0.863, 1.158), stdev = 0.236
  CI (99.9%): [? 0, 1.772] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 86.55% complete, ETA 02:46:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.798 ms/op
# Warmup Iteration   2: 0.666 ms/op
# Warmup Iteration   3: 0.671 ms/op
# Warmup Iteration   4: 0.643 ms/op
# Warmup Iteration   5: 0.666 ms/op
Iteration   1: 0.668 ms/op
Iteration   2: 0.657 ms/op
Iteration   3: 0.736 ms/op
Iteration   4: 1.133 ms/op
Iteration   5: 1.037 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.846 ±(99.9%) 0.856 ms/op [Average]
  (min, avg, max) = (0.657, 0.846, 1.133), stdev = 0.222
  CI (99.9%): [? 0, 1.703] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 86.65% complete, ETA 02:44:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.838 ms/op
# Warmup Iteration   2: 0.644 ms/op
# Warmup Iteration   3: 0.650 ms/op
# Warmup Iteration   4: 0.644 ms/op
# Warmup Iteration   5: 0.658 ms/op
Iteration   1: 0.642 ms/op
Iteration   2: 0.653 ms/op
Iteration   3: 0.794 ms/op
Iteration   4: 1.211 ms/op
Iteration   5: 0.995 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.859 ±(99.9%) 0.935 ms/op [Average]
  (min, avg, max) = (0.642, 0.859, 1.211), stdev = 0.243
  CI (99.9%): [? 0, 1.794] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 86.74% complete, ETA 02:43:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.973 ms/op
# Warmup Iteration   2: 0.650 ms/op
# Warmup Iteration   3: 0.630 ms/op
# Warmup Iteration   4: 0.648 ms/op
# Warmup Iteration   5: 0.652 ms/op
Iteration   1: 0.629 ms/op
Iteration   2: 0.665 ms/op
Iteration   3: 1.057 ms/op
Iteration   4: 1.067 ms/op
Iteration   5: 1.045 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.893 ±(99.9%) 0.865 ms/op [Average]
  (min, avg, max) = (0.629, 0.893, 1.067), stdev = 0.225
  CI (99.9%): [0.028, 1.757] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 86.84% complete, ETA 02:42:19
# Fork: 1 of 1
# Warmup Iteration   1: 1.039 ms/op
# Warmup Iteration   2: 0.642 ms/op
# Warmup Iteration   3: 0.619 ms/op
# Warmup Iteration   4: 0.642 ms/op
# Warmup Iteration   5: 0.653 ms/op
Iteration   1: 0.640 ms/op
Iteration   2: 0.692 ms/op
Iteration   3: 1.195 ms/op
Iteration   4: 1.104 ms/op
Iteration   5: 1.021 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  0.930 ±(99.9%) 0.962 ms/op [Average]
  (min, avg, max) = (0.640, 0.930, 1.195), stdev = 0.250
  CI (99.9%): [? 0, 1.892] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 86.93% complete, ETA 02:41:00
# Fork: 1 of 1
# Warmup Iteration   1: 1.573 ms/op
# Warmup Iteration   2: 1.283 ms/op
# Warmup Iteration   3: 1.305 ms/op
# Warmup Iteration   4: 1.308 ms/op
# Warmup Iteration   5: 1.278 ms/op
Iteration   1: 1.349 ms/op
Iteration   2: 1.375 ms/op
Iteration   3: 1.693 ms/op
Iteration   4: 2.236 ms/op
Iteration   5: 2.333 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.797 ±(99.9%) 1.796 ms/op [Average]
  (min, avg, max) = (1.349, 1.797, 2.333), stdev = 0.466
  CI (99.9%): [0.001, 3.593] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 87.03% complete, ETA 02:39:41
# Fork: 1 of 1
# Warmup Iteration   1: 1.585 ms/op
# Warmup Iteration   2: 1.263 ms/op
# Warmup Iteration   3: 1.276 ms/op
# Warmup Iteration   4: 1.312 ms/op
# Warmup Iteration   5: 1.383 ms/op
Iteration   1: 1.397 ms/op
Iteration   2: 1.388 ms/op
Iteration   3: 1.797 ms/op
Iteration   4: 2.329 ms/op
Iteration   5: 2.128 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.808 ±(99.9%) 1.633 ms/op [Average]
  (min, avg, max) = (1.388, 1.808, 2.329), stdev = 0.424
  CI (99.9%): [0.175, 3.440] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 87.12% complete, ETA 02:38:23
# Fork: 1 of 1
# Warmup Iteration   1: 1.582 ms/op
# Warmup Iteration   2: 1.283 ms/op
# Warmup Iteration   3: 1.380 ms/op
# Warmup Iteration   4: 1.409 ms/op
# Warmup Iteration   5: 1.378 ms/op
Iteration   1: 1.380 ms/op
Iteration   2: 1.365 ms/op
Iteration   3: 1.756 ms/op
Iteration   4: 2.167 ms/op
Iteration   5: 2.177 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.769 ±(99.9%) 1.540 ms/op [Average]
  (min, avg, max) = (1.365, 1.769, 2.177), stdev = 0.400
  CI (99.9%): [0.229, 3.309] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 87.22% complete, ETA 02:37:04
# Fork: 1 of 1
# Warmup Iteration   1: 1.623 ms/op
# Warmup Iteration   2: 1.338 ms/op
# Warmup Iteration   3: 1.285 ms/op
# Warmup Iteration   4: 1.263 ms/op
# Warmup Iteration   5: 1.313 ms/op
Iteration   1: 1.295 ms/op
Iteration   2: 1.257 ms/op
Iteration   3: 1.656 ms/op
Iteration   4: 2.312 ms/op
Iteration   5: 2.107 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.725 ±(99.9%) 1.825 ms/op [Average]
  (min, avg, max) = (1.257, 1.725, 2.312), stdev = 0.474
  CI (99.9%): [? 0, 3.550] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 87.31% complete, ETA 02:35:46
# Fork: 1 of 1
# Warmup Iteration   1: 1.943 ms/op
# Warmup Iteration   2: 1.269 ms/op
# Warmup Iteration   3: 1.260 ms/op
# Warmup Iteration   4: 1.257 ms/op
# Warmup Iteration   5: 1.264 ms/op
Iteration   1: 1.284 ms/op
Iteration   2: 1.315 ms/op
Iteration   3: 2.298 ms/op
Iteration   4: 2.128 ms/op
Iteration   5: 1.884 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.782 ±(99.9%) 1.788 ms/op [Average]
  (min, avg, max) = (1.284, 1.782, 2.298), stdev = 0.464
  CI (99.9%): [? 0, 3.570] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 87.41% complete, ETA 02:34:28
# Fork: 1 of 1
# Warmup Iteration   1: 2.086 ms/op
# Warmup Iteration   2: 1.285 ms/op
# Warmup Iteration   3: 1.290 ms/op
# Warmup Iteration   4: 1.252 ms/op
# Warmup Iteration   5: 1.244 ms/op
Iteration   1: 1.231 ms/op
Iteration   2: 1.218 ms/op
Iteration   3: 1.991 ms/op
Iteration   4: 2.162 ms/op
Iteration   5: 1.807 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark":
  1.682 ±(99.9%) 1.678 ms/op [Average]
  (min, avg, max) = (1.218, 1.682, 2.162), stdev = 0.436
  CI (99.9%): [0.003, 3.360] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 87.50% complete, ETA 02:33:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 87.59% complete, ETA 02:31:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 87.69% complete, ETA 02:30:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.001 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 87.78% complete, ETA 02:29:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 87.88% complete, ETA 02:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 87.97% complete, ETA 02:26:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 88.07% complete, ETA 02:25:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 10??, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 88.16% complete, ETA 02:24:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 88.26% complete, ETA 02:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 88.35% complete, ETA 02:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 88.45% complete, ETA 02:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 88.54% complete, ETA 02:19:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 88.64% complete, ETA 02:17:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.001
  CI (99.9%): [0.001, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 88.73% complete, ETA 02:16:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.001
  CI (99.9%): [0.001, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 88.83% complete, ETA 02:15:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 88.92% complete, ETA 02:13:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.004, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 89.02% complete, ETA 02:12:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.001, 0.011] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 89.11% complete, ETA 02:11:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.001
  CI (99.9%): [? 10?³, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 89.20% complete, ETA 02:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.012 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.009, 0.012, 0.017), stdev = 0.004
  CI (99.9%): [? 0, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 89.30% complete, ETA 02:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.012 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.010, 0.012, 0.017), stdev = 0.003
  CI (99.9%): [? 10??, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 89.39% complete, ETA 02:07:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.012 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.009, 0.012, 0.016), stdev = 0.003
  CI (99.9%): [? 0, 0.024] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 89.49% complete, ETA 02:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.012 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.009, 0.012, 0.016), stdev = 0.003
  CI (99.9%): [? 0, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 89.58% complete, ETA 02:05:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.010, 0.013, 0.016), stdev = 0.003
  CI (99.9%): [? 10?³, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 89.68% complete, ETA 02:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.012 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.009, 0.012, 0.016), stdev = 0.003
  CI (99.9%): [? 0, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 89.77% complete, ETA 02:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.032 ms/op
Iteration   5: 0.031 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.020, 0.025, 0.032), stdev = 0.006
  CI (99.9%): [0.003, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 89.87% complete, ETA 02:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.031 ms/op
Iteration   5: 0.031 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.031), stdev = 0.006
  CI (99.9%): [0.003, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 89.96% complete, ETA 02:00:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.018 ms/op
Iteration   3: 0.022 ms/op
Iteration   4: 0.032 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.024 ±(99.9%) 0.024 ms/op [Average]
  (min, avg, max) = (0.018, 0.024, 0.032), stdev = 0.006
  CI (99.9%): [? 0, 0.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 90.06% complete, ETA 01:58:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.031 ms/op
Iteration   5: 0.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.034), stdev = 0.007
  CI (99.9%): [? 0, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 90.15% complete, ETA 01:57:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.026 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.018 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.018 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.033 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.024 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.018, 0.024, 0.033), stdev = 0.006
  CI (99.9%): [0.001, 0.047] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 90.25% complete, ETA 01:56:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.028 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.026 ms/op
Iteration   4: 0.030 ms/op
Iteration   5: 0.028 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.030), stdev = 0.005
  CI (99.9%): [0.005, 0.045] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 90.34% complete, ETA 01:55:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.038 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.039 ms/op
Iteration   1: 0.038 ms/op
Iteration   2: 0.039 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.069 ms/op
Iteration   5: 0.066 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.051 ±(99.9%) 0.057 ms/op [Average]
  (min, avg, max) = (0.038, 0.051, 0.069), stdev = 0.015
  CI (99.9%): [? 0, 0.108] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 90.44% complete, ETA 01:53:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.047 ms/op
# Warmup Iteration   2: 0.039 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.038 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.039 ms/op
Iteration   3: 0.048 ms/op
Iteration   4: 0.069 ms/op
Iteration   5: 0.066 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.052 ±(99.9%) 0.056 ms/op [Average]
  (min, avg, max) = (0.039, 0.052, 0.069), stdev = 0.015
  CI (99.9%): [? 0, 0.108] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 90.53% complete, ETA 01:52:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.047 ms/op
# Warmup Iteration   2: 0.039 ms/op
# Warmup Iteration   3: 0.037 ms/op
# Warmup Iteration   4: 0.038 ms/op
# Warmup Iteration   5: 0.039 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.040 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.061 ms/op
Iteration   5: 0.061 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.050 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (0.039, 0.050, 0.061), stdev = 0.011
  CI (99.9%): [0.009, 0.091] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 90.63% complete, ETA 01:51:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.047 ms/op
# Warmup Iteration   2: 0.039 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.038 ms/op
# Warmup Iteration   5: 0.039 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.039 ms/op
Iteration   3: 0.047 ms/op
Iteration   4: 0.063 ms/op
Iteration   5: 0.062 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.050 ±(99.9%) 0.045 ms/op [Average]
  (min, avg, max) = (0.039, 0.050, 0.063), stdev = 0.012
  CI (99.9%): [0.005, 0.095] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 90.72% complete, ETA 01:50:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.054 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.038 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.038 ms/op
Iteration   1: 0.037 ms/op
Iteration   2: 0.036 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.062 ms/op
Iteration   5: 0.062 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.048 ±(99.9%) 0.050 ms/op [Average]
  (min, avg, max) = (0.036, 0.048, 0.062), stdev = 0.013
  CI (99.9%): [? 0, 0.098] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 90.81% complete, ETA 01:49:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.056 ms/op
# Warmup Iteration   2: 0.038 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.037 ms/op
Iteration   1: 0.036 ms/op
Iteration   2: 0.036 ms/op
Iteration   3: 0.054 ms/op
Iteration   4: 0.062 ms/op
Iteration   5: 0.058 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.049 ±(99.9%) 0.048 ms/op [Average]
  (min, avg, max) = (0.036, 0.049, 0.062), stdev = 0.012
  CI (99.9%): [0.002, 0.097] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 90.91% complete, ETA 01:47:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.093 ms/op
# Warmup Iteration   2: 0.077 ms/op
# Warmup Iteration   3: 0.078 ms/op
# Warmup Iteration   4: 0.077 ms/op
# Warmup Iteration   5: 0.078 ms/op
Iteration   1: 0.079 ms/op
Iteration   2: 0.078 ms/op
Iteration   3: 0.101 ms/op
Iteration   4: 0.118 ms/op
Iteration   5: 0.123 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.100 ±(99.9%) 0.081 ms/op [Average]
  (min, avg, max) = (0.078, 0.100, 0.123), stdev = 0.021
  CI (99.9%): [0.019, 0.182] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 91.00% complete, ETA 01:46:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.099 ms/op
# Warmup Iteration   2: 0.075 ms/op
# Warmup Iteration   3: 0.075 ms/op
# Warmup Iteration   4: 0.078 ms/op
# Warmup Iteration   5: 0.079 ms/op
Iteration   1: 0.078 ms/op
Iteration   2: 0.079 ms/op
Iteration   3: 0.097 ms/op
Iteration   4: 0.126 ms/op
Iteration   5: 0.126 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.101 ±(99.9%) 0.092 ms/op [Average]
  (min, avg, max) = (0.078, 0.101, 0.126), stdev = 0.024
  CI (99.9%): [0.009, 0.194] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 91.10% complete, ETA 01:45:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.090 ms/op
# Warmup Iteration   2: 0.077 ms/op
# Warmup Iteration   3: 0.077 ms/op
# Warmup Iteration   4: 0.079 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: 0.082 ms/op
Iteration   2: 0.083 ms/op
Iteration   3: 0.102 ms/op
Iteration   4: 0.132 ms/op
Iteration   5: 0.130 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.106 ±(99.9%) 0.094 ms/op [Average]
  (min, avg, max) = (0.082, 0.106, 0.132), stdev = 0.024
  CI (99.9%): [0.012, 0.200] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 91.19% complete, ETA 01:44:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.097 ms/op
# Warmup Iteration   2: 0.075 ms/op
# Warmup Iteration   3: 0.078 ms/op
# Warmup Iteration   4: 0.077 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.075 ms/op
Iteration   2: 0.076 ms/op
Iteration   3: 0.093 ms/op
Iteration   4: 0.127 ms/op
Iteration   5: 0.121 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.098 ±(99.9%) 0.095 ms/op [Average]
  (min, avg, max) = (0.075, 0.098, 0.127), stdev = 0.025
  CI (99.9%): [0.003, 0.193] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 91.29% complete, ETA 01:42:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.112 ms/op
# Warmup Iteration   2: 0.078 ms/op
# Warmup Iteration   3: 0.078 ms/op
# Warmup Iteration   4: 0.077 ms/op
# Warmup Iteration   5: 0.075 ms/op
Iteration   1: 0.076 ms/op
Iteration   2: 0.077 ms/op
Iteration   3: 0.102 ms/op
Iteration   4: 0.120 ms/op
Iteration   5: 0.127 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.100 ±(99.9%) 0.091 ms/op [Average]
  (min, avg, max) = (0.076, 0.100, 0.127), stdev = 0.024
  CI (99.9%): [0.009, 0.192] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 91.38% complete, ETA 01:41:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.105 ms/op
# Warmup Iteration   2: 0.078 ms/op
# Warmup Iteration   3: 0.075 ms/op
# Warmup Iteration   4: 0.075 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.077 ms/op
Iteration   2: 0.076 ms/op
Iteration   3: 0.105 ms/op
Iteration   4: 0.123 ms/op
Iteration   5: 0.119 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.100 ±(99.9%) 0.087 ms/op [Average]
  (min, avg, max) = (0.076, 0.100, 0.123), stdev = 0.023
  CI (99.9%): [0.013, 0.187] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 91.48% complete, ETA 01:40:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.202 ms/op
# Warmup Iteration   2: 0.153 ms/op
# Warmup Iteration   3: 0.154 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.152 ms/op
Iteration   1: 0.156 ms/op
Iteration   2: 0.155 ms/op
Iteration   3: 0.180 ms/op
Iteration   4: 0.256 ms/op
Iteration   5: 0.258 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.201 ±(99.9%) 0.201 ms/op [Average]
  (min, avg, max) = (0.155, 0.201, 0.258), stdev = 0.052
  CI (99.9%): [? 0, 0.403] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 91.57% complete, ETA 01:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.186 ms/op
# Warmup Iteration   2: 0.155 ms/op
# Warmup Iteration   3: 0.156 ms/op
# Warmup Iteration   4: 0.155 ms/op
# Warmup Iteration   5: 0.154 ms/op
Iteration   1: 0.154 ms/op
Iteration   2: 0.148 ms/op
Iteration   3: 0.183 ms/op
Iteration   4: 0.252 ms/op
Iteration   5: 0.249 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.197 ±(99.9%) 0.194 ms/op [Average]
  (min, avg, max) = (0.148, 0.197, 0.252), stdev = 0.050
  CI (99.9%): [0.003, 0.392] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 91.67% complete, ETA 01:38:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.191 ms/op
# Warmup Iteration   2: 0.142 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.150 ms/op
# Warmup Iteration   5: 0.146 ms/op
Iteration   1: 0.144 ms/op
Iteration   2: 0.147 ms/op
Iteration   3: 0.177 ms/op
Iteration   4: 0.234 ms/op
Iteration   5: 0.261 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.193 ±(99.9%) 0.202 ms/op [Average]
  (min, avg, max) = (0.144, 0.193, 0.261), stdev = 0.053
  CI (99.9%): [? 0, 0.395] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 91.76% complete, ETA 01:36:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.192 ms/op
# Warmup Iteration   2: 0.154 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.150 ms/op
# Warmup Iteration   5: 0.157 ms/op
Iteration   1: 0.159 ms/op
Iteration   2: 0.154 ms/op
Iteration   3: 0.199 ms/op
Iteration   4: 0.266 ms/op
Iteration   5: 0.246 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.205 ±(99.9%) 0.195 ms/op [Average]
  (min, avg, max) = (0.154, 0.205, 0.266), stdev = 0.051
  CI (99.9%): [0.010, 0.400] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 91.86% complete, ETA 01:35:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.209 ms/op
# Warmup Iteration   2: 0.157 ms/op
# Warmup Iteration   3: 0.152 ms/op
# Warmup Iteration   4: 0.160 ms/op
# Warmup Iteration   5: 0.166 ms/op
Iteration   1: 0.162 ms/op
Iteration   2: 0.166 ms/op
Iteration   3: 0.235 ms/op
Iteration   4: 0.255 ms/op
Iteration   5: 0.235 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.211 ±(99.9%) 0.168 ms/op [Average]
  (min, avg, max) = (0.162, 0.211, 0.255), stdev = 0.044
  CI (99.9%): [0.043, 0.378] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 91.95% complete, ETA 01:34:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.219 ms/op
# Warmup Iteration   2: 0.175 ms/op
# Warmup Iteration   3: 0.164 ms/op
# Warmup Iteration   4: 0.159 ms/op
# Warmup Iteration   5: 0.157 ms/op
Iteration   1: 0.161 ms/op
Iteration   2: 0.159 ms/op
Iteration   3: 0.234 ms/op
Iteration   4: 0.248 ms/op
Iteration   5: 0.270 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.214 ±(99.9%) 0.198 ms/op [Average]
  (min, avg, max) = (0.159, 0.214, 0.270), stdev = 0.051
  CI (99.9%): [0.016, 0.412] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 92.05% complete, ETA 01:33:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.397 ms/op
# Warmup Iteration   2: 0.311 ms/op
# Warmup Iteration   3: 0.333 ms/op
# Warmup Iteration   4: 0.340 ms/op
# Warmup Iteration   5: 0.345 ms/op
Iteration   1: 0.350 ms/op
Iteration   2: 0.340 ms/op
Iteration   3: 0.454 ms/op
Iteration   4: 0.575 ms/op
Iteration   5: 0.477 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.439 ±(99.9%) 0.375 ms/op [Average]
  (min, avg, max) = (0.340, 0.439, 0.575), stdev = 0.097
  CI (99.9%): [0.064, 0.814] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 92.14% complete, ETA 01:32:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.382 ms/op
# Warmup Iteration   2: 0.318 ms/op
# Warmup Iteration   3: 0.317 ms/op
# Warmup Iteration   4: 0.317 ms/op
# Warmup Iteration   5: 0.312 ms/op
Iteration   1: 0.315 ms/op
Iteration   2: 0.318 ms/op
Iteration   3: 0.379 ms/op
Iteration   4: 0.485 ms/op
Iteration   5: 0.487 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.397 ±(99.9%) 0.329 ms/op [Average]
  (min, avg, max) = (0.315, 0.397, 0.487), stdev = 0.085
  CI (99.9%): [0.068, 0.726] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 92.23% complete, ETA 01:31:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.382 ms/op
# Warmup Iteration   2: 0.317 ms/op
# Warmup Iteration   3: 0.303 ms/op
# Warmup Iteration   4: 0.309 ms/op
# Warmup Iteration   5: 0.313 ms/op
Iteration   1: 0.314 ms/op
Iteration   2: 0.298 ms/op
Iteration   3: 0.385 ms/op
Iteration   4: 0.498 ms/op
Iteration   5: 0.512 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.401 ±(99.9%) 0.387 ms/op [Average]
  (min, avg, max) = (0.298, 0.401, 0.512), stdev = 0.100
  CI (99.9%): [0.015, 0.788] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 92.33% complete, ETA 01:29:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.402 ms/op
# Warmup Iteration   2: 0.311 ms/op
# Warmup Iteration   3: 0.327 ms/op
# Warmup Iteration   4: 0.316 ms/op
# Warmup Iteration   5: 0.309 ms/op
Iteration   1: 0.315 ms/op
Iteration   2: 0.322 ms/op
Iteration   3: 0.370 ms/op
Iteration   4: 0.525 ms/op
Iteration   5: 0.493 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.405 ±(99.9%) 0.377 ms/op [Average]
  (min, avg, max) = (0.315, 0.405, 0.525), stdev = 0.098
  CI (99.9%): [0.028, 0.782] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 92.42% complete, ETA 01:28:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.408 ms/op
# Warmup Iteration   2: 0.307 ms/op
# Warmup Iteration   3: 0.306 ms/op
# Warmup Iteration   4: 0.297 ms/op
# Warmup Iteration   5: 0.305 ms/op
Iteration   1: 0.307 ms/op
Iteration   2: 0.298 ms/op
Iteration   3: 0.390 ms/op
Iteration   4: 0.485 ms/op
Iteration   5: 0.470 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.390 ±(99.9%) 0.338 ms/op [Average]
  (min, avg, max) = (0.298, 0.390, 0.485), stdev = 0.088
  CI (99.9%): [0.052, 0.728] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 92.52% complete, ETA 01:27:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.396 ms/op
# Warmup Iteration   2: 0.296 ms/op
# Warmup Iteration   3: 0.287 ms/op
# Warmup Iteration   4: 0.304 ms/op
# Warmup Iteration   5: 0.305 ms/op
Iteration   1: 0.295 ms/op
Iteration   2: 0.294 ms/op
Iteration   3: 0.405 ms/op
Iteration   4: 0.504 ms/op
Iteration   5: 0.445 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.388 ±(99.9%) 0.357 ms/op [Average]
  (min, avg, max) = (0.294, 0.388, 0.504), stdev = 0.093
  CI (99.9%): [0.031, 0.746] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 92.61% complete, ETA 01:26:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.752 ms/op
# Warmup Iteration   2: 0.603 ms/op
# Warmup Iteration   3: 0.605 ms/op
# Warmup Iteration   4: 0.601 ms/op
# Warmup Iteration   5: 0.589 ms/op
Iteration   1: 0.603 ms/op
Iteration   2: 0.629 ms/op
Iteration   3: 0.662 ms/op
Iteration   4: 1.034 ms/op
Iteration   5: 1.006 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.787 ±(99.9%) 0.824 ms/op [Average]
  (min, avg, max) = (0.603, 0.787, 1.034), stdev = 0.214
  CI (99.9%): [? 0, 1.611] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 92.71% complete, ETA 01:25:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.780 ms/op
# Warmup Iteration   2: 0.633 ms/op
# Warmup Iteration   3: 0.603 ms/op
# Warmup Iteration   4: 0.616 ms/op
# Warmup Iteration   5: 0.622 ms/op
Iteration   1: 0.611 ms/op
Iteration   2: 0.610 ms/op
Iteration   3: 0.738 ms/op
Iteration   4: 1.031 ms/op
Iteration   5: 1.000 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.798 ±(99.9%) 0.791 ms/op [Average]
  (min, avg, max) = (0.610, 0.798, 1.031), stdev = 0.205
  CI (99.9%): [0.007, 1.589] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 92.80% complete, ETA 01:23:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.760 ms/op
# Warmup Iteration   2: 0.612 ms/op
# Warmup Iteration   3: 0.632 ms/op
# Warmup Iteration   4: 0.610 ms/op
# Warmup Iteration   5: 0.597 ms/op
Iteration   1: 0.606 ms/op
Iteration   2: 0.625 ms/op
Iteration   3: 0.721 ms/op
Iteration   4: 1.007 ms/op
Iteration   5: 0.988 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.789 ±(99.9%) 0.752 ms/op [Average]
  (min, avg, max) = (0.606, 0.789, 1.007), stdev = 0.195
  CI (99.9%): [0.038, 1.541] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 92.90% complete, ETA 01:22:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.772 ms/op
# Warmup Iteration   2: 0.620 ms/op
# Warmup Iteration   3: 0.581 ms/op
# Warmup Iteration   4: 0.601 ms/op
# Warmup Iteration   5: 0.605 ms/op
Iteration   1: 0.610 ms/op
Iteration   2: 0.586 ms/op
Iteration   3: 0.720 ms/op
Iteration   4: 1.024 ms/op
Iteration   5: 1.045 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.797 ±(99.9%) 0.857 ms/op [Average]
  (min, avg, max) = (0.586, 0.797, 1.045), stdev = 0.223
  CI (99.9%): [? 0, 1.654] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 92.99% complete, ETA 01:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.832 ms/op
# Warmup Iteration   2: 0.589 ms/op
# Warmup Iteration   3: 0.608 ms/op
# Warmup Iteration   4: 0.608 ms/op
# Warmup Iteration   5: 0.607 ms/op
Iteration   1: 0.605 ms/op
Iteration   2: 0.621 ms/op
Iteration   3: 0.816 ms/op
Iteration   4: 1.125 ms/op
Iteration   5: 1.039 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.841 ±(99.9%) 0.913 ms/op [Average]
  (min, avg, max) = (0.605, 0.841, 1.125), stdev = 0.237
  CI (99.9%): [? 0, 1.754] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 93.09% complete, ETA 01:20:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.837 ms/op
# Warmup Iteration   2: 0.609 ms/op
# Warmup Iteration   3: 0.609 ms/op
# Warmup Iteration   4: 0.596 ms/op
# Warmup Iteration   5: 0.587 ms/op
Iteration   1: 0.609 ms/op
Iteration   2: 0.600 ms/op
Iteration   3: 0.838 ms/op
Iteration   4: 0.988 ms/op
Iteration   5: 0.968 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.801 ±(99.9%) 0.724 ms/op [Average]
  (min, avg, max) = (0.600, 0.801, 0.988), stdev = 0.188
  CI (99.9%): [0.077, 1.525] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 93.18% complete, ETA 01:19:13
# Fork: 1 of 1
# Warmup Iteration   1: 1.556 ms/op
# Warmup Iteration   2: 1.240 ms/op
# Warmup Iteration   3: 1.193 ms/op
# Warmup Iteration   4: 1.224 ms/op
# Warmup Iteration   5: 1.229 ms/op
Iteration   1: 1.195 ms/op
Iteration   2: 1.193 ms/op
Iteration   3: 1.478 ms/op
Iteration   4: 1.976 ms/op
Iteration   5: 1.861 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.541 ±(99.9%) 1.410 ms/op [Average]
  (min, avg, max) = (1.193, 1.541, 1.976), stdev = 0.366
  CI (99.9%): [0.131, 2.950] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 93.28% complete, ETA 01:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 1.430 ms/op
# Warmup Iteration   2: 1.189 ms/op
# Warmup Iteration   3: 1.204 ms/op
# Warmup Iteration   4: 1.221 ms/op
# Warmup Iteration   5: 1.191 ms/op
Iteration   1: 1.226 ms/op
Iteration   2: 1.238 ms/op
Iteration   3: 1.458 ms/op
Iteration   4: 2.134 ms/op
Iteration   5: 2.053 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.622 ±(99.9%) 1.699 ms/op [Average]
  (min, avg, max) = (1.226, 1.622, 2.134), stdev = 0.441
  CI (99.9%): [? 0, 3.321] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 93.37% complete, ETA 01:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 1.571 ms/op
# Warmup Iteration   2: 1.227 ms/op
# Warmup Iteration   3: 1.235 ms/op
# Warmup Iteration   4: 1.228 ms/op
# Warmup Iteration   5: 1.220 ms/op
Iteration   1: 1.237 ms/op
Iteration   2: 1.205 ms/op
Iteration   3: 1.562 ms/op
Iteration   4: 1.994 ms/op
Iteration   5: 1.972 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.594 ±(99.9%) 1.469 ms/op [Average]
  (min, avg, max) = (1.205, 1.594, 1.994), stdev = 0.381
  CI (99.9%): [0.125, 3.063] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 93.47% complete, ETA 01:15:43
# Fork: 1 of 1
# Warmup Iteration   1: 1.518 ms/op
# Warmup Iteration   2: 1.235 ms/op
# Warmup Iteration   3: 1.243 ms/op
# Warmup Iteration   4: 1.308 ms/op
# Warmup Iteration   5: 1.316 ms/op
Iteration   1: 1.395 ms/op
Iteration   2: 1.325 ms/op
Iteration   3: 1.648 ms/op
Iteration   4: 2.073 ms/op
Iteration   5: 1.992 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.687 ±(99.9%) 1.305 ms/op [Average]
  (min, avg, max) = (1.325, 1.687, 2.073), stdev = 0.339
  CI (99.9%): [0.381, 2.992] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 93.56% complete, ETA 01:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 1.674 ms/op
# Warmup Iteration   2: 1.233 ms/op
# Warmup Iteration   3: 1.277 ms/op
# Warmup Iteration   4: 1.262 ms/op
# Warmup Iteration   5: 1.301 ms/op
Iteration   1: 1.308 ms/op
Iteration   2: 1.273 ms/op
Iteration   3: 1.762 ms/op
Iteration   4: 1.887 ms/op
Iteration   5: 2.087 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.663 ±(99.9%) 1.385 ms/op [Average]
  (min, avg, max) = (1.273, 1.663, 2.087), stdev = 0.360
  CI (99.9%): [0.278, 3.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 93.66% complete, ETA 01:13:24
# Fork: 1 of 1
# Warmup Iteration   1: 1.780 ms/op
# Warmup Iteration   2: 1.259 ms/op
# Warmup Iteration   3: 1.171 ms/op
# Warmup Iteration   4: 1.209 ms/op
# Warmup Iteration   5: 1.223 ms/op
Iteration   1: 1.189 ms/op
Iteration   2: 1.208 ms/op
Iteration   3: 1.721 ms/op
Iteration   4: 1.936 ms/op
Iteration   5: 1.795 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.570 ±(99.9%) 1.339 ms/op [Average]
  (min, avg, max) = (1.189, 1.570, 1.936), stdev = 0.348
  CI (99.9%): [0.231, 2.909] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 93.75% complete, ETA 01:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 93.84% complete, ETA 01:11:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10?³, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 93.94% complete, ETA 01:09:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 94.03% complete, ETA 01:08:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 94.13% complete, ETA 01:07:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 0, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 94.22% complete, ETA 01:06:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 94.32% complete, ETA 01:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 94.41% complete, ETA 01:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 10??, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 94.51% complete, ETA 01:03:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 94.60% complete, ETA 01:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 94.70% complete, ETA 01:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 94.79% complete, ETA 00:59:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 10??, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 94.89% complete, ETA 00:58:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 94.98% complete, ETA 00:57:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 95.08% complete, ETA 00:56:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 95.17% complete, ETA 00:55:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [? 0, 0.013] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 95.27% complete, ETA 00:54:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.001, 0.011] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 95.36% complete, ETA 00:52:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.008 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.006 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.008), stdev = 0.001
  CI (99.9%): [0.001, 0.012] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 95.45% complete, ETA 00:51:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.009, 0.013, 0.018), stdev = 0.004
  CI (99.9%): [? 0, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 95.55% complete, ETA 00:50:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.010, 0.013, 0.017), stdev = 0.003
  CI (99.9%): [? 0, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 95.64% complete, ETA 00:49:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.016 ms/op
Iteration   5: 0.017 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.009, 0.013, 0.017), stdev = 0.004
  CI (99.9%): [? 0, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 95.74% complete, ETA 00:48:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.009, 0.013, 0.017), stdev = 0.004
  CI (99.9%): [? 0, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 95.83% complete, ETA 00:47:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.017 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.010, 0.013, 0.017), stdev = 0.003
  CI (99.9%): [0.002, 0.025] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 95.93% complete, ETA 00:46:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.015 ms/op
# Warmup Iteration   2: 0.009 ms/op
# Warmup Iteration   3: 0.009 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.009 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.017 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.014 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.013 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.009, 0.013, 0.017), stdev = 0.003
  CI (99.9%): [? 10??, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 96.02% complete, ETA 00:45:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.023 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.034 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.034), stdev = 0.007
  CI (99.9%): [? 0, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 96.12% complete, ETA 00:43:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.032 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.032), stdev = 0.006
  CI (99.9%): [0.003, 0.048] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 96.21% complete, ETA 00:42:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.023 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.032 ms/op
Iteration   5: 0.032 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (0.019, 0.025, 0.032), stdev = 0.006
  CI (99.9%): [0.001, 0.050] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 96.31% complete, ETA 00:41:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.018 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.033 ms/op
Iteration   5: 0.033 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.026 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.019, 0.026, 0.033), stdev = 0.007
  CI (99.9%): [? 0, 0.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 96.40% complete, ETA 00:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.030 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.018 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.018 ms/op
Iteration   1: 0.018 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.034 ms/op
Iteration   4: 0.031 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.026 ±(99.9%) 0.028 ms/op [Average]
  (min, avg, max) = (0.018, 0.026, 0.034), stdev = 0.007
  CI (99.9%): [? 0, 0.054] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 96.50% complete, ETA 00:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.018 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.018 ms/op
Iteration   1: 0.018 ms/op
Iteration   2: 0.018 ms/op
Iteration   3: 0.032 ms/op
Iteration   4: 0.029 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.025 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (0.018, 0.025, 0.032), stdev = 0.007
  CI (99.9%): [? 0, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 96.59% complete, ETA 00:38:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.051 ms/op
# Warmup Iteration   2: 0.038 ms/op
# Warmup Iteration   3: 0.039 ms/op
# Warmup Iteration   4: 0.038 ms/op
# Warmup Iteration   5: 0.036 ms/op
Iteration   1: 0.036 ms/op
Iteration   2: 0.036 ms/op
Iteration   3: 0.041 ms/op
Iteration   4: 0.059 ms/op
Iteration   5: 0.060 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.046 ±(99.9%) 0.047 ms/op [Average]
  (min, avg, max) = (0.036, 0.046, 0.060), stdev = 0.012
  CI (99.9%): [? 0, 0.094] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 96.69% complete, ETA 00:37:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.039 ms/op
# Warmup Iteration   3: 0.038 ms/op
# Warmup Iteration   4: 0.037 ms/op
# Warmup Iteration   5: 0.038 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.037 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.064 ms/op
Iteration   5: 0.064 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.050 ±(99.9%) 0.051 ms/op [Average]
  (min, avg, max) = (0.037, 0.050, 0.064), stdev = 0.013
  CI (99.9%): [? 0, 0.101] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 96.78% complete, ETA 00:36:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.047 ms/op
# Warmup Iteration   2: 0.038 ms/op
# Warmup Iteration   3: 0.038 ms/op
# Warmup Iteration   4: 0.038 ms/op
# Warmup Iteration   5: 0.037 ms/op
Iteration   1: 0.038 ms/op
Iteration   2: 0.039 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.061 ms/op
Iteration   5: 0.064 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.049 ±(99.9%) 0.049 ms/op [Average]
  (min, avg, max) = (0.038, 0.049, 0.064), stdev = 0.013
  CI (99.9%): [0.001, 0.098] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 96.88% complete, ETA 00:35:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.050 ms/op
# Warmup Iteration   2: 0.039 ms/op
# Warmup Iteration   3: 0.038 ms/op
# Warmup Iteration   4: 0.037 ms/op
# Warmup Iteration   5: 0.039 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.041 ms/op
Iteration   3: 0.056 ms/op
Iteration   4: 0.068 ms/op
Iteration   5: 0.063 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.053 ±(99.9%) 0.050 ms/op [Average]
  (min, avg, max) = (0.039, 0.053, 0.068), stdev = 0.013
  CI (99.9%): [0.004, 0.103] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 96.97% complete, ETA 00:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.056 ms/op
# Warmup Iteration   2: 0.038 ms/op
# Warmup Iteration   3: 0.040 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.040 ms/op
Iteration   2: 0.041 ms/op
Iteration   3: 0.070 ms/op
Iteration   4: 0.059 ms/op
Iteration   5: 0.069 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.056 ±(99.9%) 0.055 ms/op [Average]
  (min, avg, max) = (0.040, 0.056, 0.070), stdev = 0.014
  CI (99.9%): [? 10?³, 0.111] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 97.06% complete, ETA 00:32:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.058 ms/op
# Warmup Iteration   2: 0.037 ms/op
# Warmup Iteration   3: 0.037 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.041 ms/op
Iteration   1: 0.039 ms/op
Iteration   2: 0.038 ms/op
Iteration   3: 0.069 ms/op
Iteration   4: 0.054 ms/op
Iteration   5: 0.051 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.050 ±(99.9%) 0.048 ms/op [Average]
  (min, avg, max) = (0.038, 0.050, 0.069), stdev = 0.013
  CI (99.9%): [0.002, 0.099] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 97.16% complete, ETA 00:31:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.102 ms/op
# Warmup Iteration   2: 0.077 ms/op
# Warmup Iteration   3: 0.081 ms/op
# Warmup Iteration   4: 0.078 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.075 ms/op
Iteration   2: 0.077 ms/op
Iteration   3: 0.096 ms/op
Iteration   4: 0.126 ms/op
Iteration   5: 0.120 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.099 ±(99.9%) 0.091 ms/op [Average]
  (min, avg, max) = (0.075, 0.099, 0.126), stdev = 0.024
  CI (99.9%): [0.008, 0.190] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 97.25% complete, ETA 00:30:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.093 ms/op
# Warmup Iteration   2: 0.078 ms/op
# Warmup Iteration   3: 0.077 ms/op
# Warmup Iteration   4: 0.076 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.077 ms/op
Iteration   2: 0.077 ms/op
Iteration   3: 0.099 ms/op
Iteration   4: 0.131 ms/op
Iteration   5: 0.115 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.100 ±(99.9%) 0.090 ms/op [Average]
  (min, avg, max) = (0.077, 0.100, 0.131), stdev = 0.023
  CI (99.9%): [0.010, 0.190] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 97.35% complete, ETA 00:29:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.101 ms/op
# Warmup Iteration   2: 0.078 ms/op
# Warmup Iteration   3: 0.077 ms/op
# Warmup Iteration   4: 0.078 ms/op
# Warmup Iteration   5: 0.079 ms/op
Iteration   1: 0.078 ms/op
Iteration   2: 0.078 ms/op
Iteration   3: 0.103 ms/op
Iteration   4: 0.123 ms/op
Iteration   5: 0.113 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.099 ±(99.9%) 0.078 ms/op [Average]
  (min, avg, max) = (0.078, 0.099, 0.123), stdev = 0.020
  CI (99.9%): [0.020, 0.177] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 97.44% complete, ETA 00:28:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.093 ms/op
# Warmup Iteration   2: 0.081 ms/op
# Warmup Iteration   3: 0.077 ms/op
# Warmup Iteration   4: 0.077 ms/op
# Warmup Iteration   5: 0.075 ms/op
Iteration   1: 0.078 ms/op
Iteration   2: 0.077 ms/op
Iteration   3: 0.098 ms/op
Iteration   4: 0.131 ms/op
Iteration   5: 0.126 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.102 ±(99.9%) 0.099 ms/op [Average]
  (min, avg, max) = (0.077, 0.102, 0.131), stdev = 0.026
  CI (99.9%): [0.003, 0.201] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 97.54% complete, ETA 00:27:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.116 ms/op
# Warmup Iteration   2: 0.076 ms/op
# Warmup Iteration   3: 0.078 ms/op
# Warmup Iteration   4: 0.076 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.077 ms/op
Iteration   2: 0.081 ms/op
Iteration   3: 0.123 ms/op
Iteration   4: 0.118 ms/op
Iteration   5: 0.112 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.102 ±(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (0.077, 0.102, 0.123), stdev = 0.021
  CI (99.9%): [0.020, 0.185] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 97.63% complete, ETA 00:26:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.115 ms/op
# Warmup Iteration   2: 0.075 ms/op
# Warmup Iteration   3: 0.076 ms/op
# Warmup Iteration   4: 0.076 ms/op
# Warmup Iteration   5: 0.076 ms/op
Iteration   1: 0.076 ms/op
Iteration   2: 0.086 ms/op
Iteration   3: 0.128 ms/op
Iteration   4: 0.119 ms/op
Iteration   5: 0.126 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.107 ±(99.9%) 0.093 ms/op [Average]
  (min, avg, max) = (0.076, 0.107, 0.128), stdev = 0.024
  CI (99.9%): [0.014, 0.200] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 97.73% complete, ETA 00:25:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.206 ms/op
# Warmup Iteration   2: 0.162 ms/op
# Warmup Iteration   3: 0.157 ms/op
# Warmup Iteration   4: 0.150 ms/op
# Warmup Iteration   5: 0.154 ms/op
Iteration   1: 0.158 ms/op
Iteration   2: 0.153 ms/op
Iteration   3: 0.183 ms/op
Iteration   4: 0.254 ms/op
Iteration   5: 0.251 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.200 ±(99.9%) 0.191 ms/op [Average]
  (min, avg, max) = (0.153, 0.200, 0.254), stdev = 0.050
  CI (99.9%): [0.009, 0.391] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 97.82% complete, ETA 00:24:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.196 ms/op
# Warmup Iteration   2: 0.153 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.157 ms/op
# Warmup Iteration   5: 0.155 ms/op
Iteration   1: 0.154 ms/op
Iteration   2: 0.158 ms/op
Iteration   3: 0.185 ms/op
Iteration   4: 0.238 ms/op
Iteration   5: 0.272 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.201 ±(99.9%) 0.200 ms/op [Average]
  (min, avg, max) = (0.154, 0.201, 0.272), stdev = 0.052
  CI (99.9%): [0.001, 0.401] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 97.92% complete, ETA 00:23:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.196 ms/op
# Warmup Iteration   2: 0.156 ms/op
# Warmup Iteration   3: 0.155 ms/op
# Warmup Iteration   4: 0.151 ms/op
# Warmup Iteration   5: 0.157 ms/op
Iteration   1: 0.161 ms/op
Iteration   2: 0.158 ms/op
Iteration   3: 0.183 ms/op
Iteration   4: 0.246 ms/op
Iteration   5: 0.257 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.201 ±(99.9%) 0.183 ms/op [Average]
  (min, avg, max) = (0.158, 0.201, 0.257), stdev = 0.047
  CI (99.9%): [0.018, 0.383] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 98.01% complete, ETA 00:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.193 ms/op
# Warmup Iteration   2: 0.150 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.156 ms/op
# Warmup Iteration   5: 0.157 ms/op
Iteration   1: 0.149 ms/op
Iteration   2: 0.153 ms/op
Iteration   3: 0.187 ms/op
Iteration   4: 0.248 ms/op
Iteration   5: 0.245 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.197 ±(99.9%) 0.186 ms/op [Average]
  (min, avg, max) = (0.149, 0.197, 0.248), stdev = 0.048
  CI (99.9%): [0.011, 0.382] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 98.11% complete, ETA 00:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.251 ms/op
# Warmup Iteration   2: 0.149 ms/op
# Warmup Iteration   3: 0.148 ms/op
# Warmup Iteration   4: 0.149 ms/op
# Warmup Iteration   5: 0.149 ms/op
Iteration   1: 0.145 ms/op
Iteration   2: 0.153 ms/op
Iteration   3: 0.243 ms/op
Iteration   4: 0.209 ms/op
Iteration   5: 0.235 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.197 ±(99.9%) 0.175 ms/op [Average]
  (min, avg, max) = (0.145, 0.197, 0.243), stdev = 0.045
  CI (99.9%): [0.022, 0.371] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 98.20% complete, ETA 00:20:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.244 ms/op
# Warmup Iteration   2: 0.153 ms/op
# Warmup Iteration   3: 0.148 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.150 ms/op
Iteration   1: 0.152 ms/op
Iteration   2: 0.161 ms/op
Iteration   3: 0.233 ms/op
Iteration   4: 0.231 ms/op
Iteration   5: 0.225 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.201 ±(99.9%) 0.155 ms/op [Average]
  (min, avg, max) = (0.152, 0.201, 0.233), stdev = 0.040
  CI (99.9%): [0.046, 0.355] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 98.30% complete, ETA 00:18:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.373 ms/op
# Warmup Iteration   2: 0.306 ms/op
# Warmup Iteration   3: 0.317 ms/op
# Warmup Iteration   4: 0.312 ms/op
# Warmup Iteration   5: 0.306 ms/op
Iteration   1: 0.307 ms/op
Iteration   2: 0.304 ms/op
Iteration   3: 0.370 ms/op
Iteration   4: 0.521 ms/op
Iteration   5: 0.536 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.408 ±(99.9%) 0.438 ms/op [Average]
  (min, avg, max) = (0.304, 0.408, 0.536), stdev = 0.114
  CI (99.9%): [? 0, 0.846] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 98.39% complete, ETA 00:17:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.386 ms/op
# Warmup Iteration   2: 0.309 ms/op
# Warmup Iteration   3: 0.301 ms/op
# Warmup Iteration   4: 0.305 ms/op
# Warmup Iteration   5: 0.305 ms/op
Iteration   1: 0.303 ms/op
Iteration   2: 0.300 ms/op
Iteration   3: 0.374 ms/op
Iteration   4: 0.507 ms/op
Iteration   5: 0.515 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.400 ±(99.9%) 0.407 ms/op [Average]
  (min, avg, max) = (0.300, 0.400, 0.515), stdev = 0.106
  CI (99.9%): [? 0, 0.806] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 98.48% complete, ETA 00:16:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.418 ms/op
# Warmup Iteration   2: 0.298 ms/op
# Warmup Iteration   3: 0.307 ms/op
# Warmup Iteration   4: 0.307 ms/op
# Warmup Iteration   5: 0.298 ms/op
Iteration   1: 0.302 ms/op
Iteration   2: 0.311 ms/op
Iteration   3: 0.406 ms/op
Iteration   4: 0.523 ms/op
Iteration   5: 0.501 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.409 ±(99.9%) 0.396 ms/op [Average]
  (min, avg, max) = (0.302, 0.409, 0.523), stdev = 0.103
  CI (99.9%): [0.013, 0.804] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 98.58% complete, ETA 00:15:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.396 ms/op
# Warmup Iteration   2: 0.310 ms/op
# Warmup Iteration   3: 0.309 ms/op
# Warmup Iteration   4: 0.315 ms/op
# Warmup Iteration   5: 0.321 ms/op
Iteration   1: 0.324 ms/op
Iteration   2: 0.318 ms/op
Iteration   3: 0.426 ms/op
Iteration   4: 0.539 ms/op
Iteration   5: 0.493 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.420 ±(99.9%) 0.381 ms/op [Average]
  (min, avg, max) = (0.318, 0.420, 0.539), stdev = 0.099
  CI (99.9%): [0.039, 0.801] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 98.67% complete, ETA 00:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.506 ms/op
# Warmup Iteration   2: 0.316 ms/op
# Warmup Iteration   3: 0.311 ms/op
# Warmup Iteration   4: 0.307 ms/op
# Warmup Iteration   5: 0.314 ms/op
Iteration   1: 0.314 ms/op
Iteration   2: 0.336 ms/op
Iteration   3: 0.546 ms/op
Iteration   4: 0.434 ms/op
Iteration   5: 0.460 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.418 ±(99.9%) 0.365 ms/op [Average]
  (min, avg, max) = (0.314, 0.418, 0.546), stdev = 0.095
  CI (99.9%): [0.052, 0.783] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 98.77% complete, ETA 00:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.591 ms/op
# Warmup Iteration   2: 0.326 ms/op
# Warmup Iteration   3: 0.341 ms/op
# Warmup Iteration   4: 0.339 ms/op
# Warmup Iteration   5: 0.339 ms/op
Iteration   1: 0.337 ms/op
Iteration   2: 0.363 ms/op
Iteration   3: 0.570 ms/op
Iteration   4: 0.496 ms/op
Iteration   5: 0.499 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.453 ±(99.9%) 0.381 ms/op [Average]
  (min, avg, max) = (0.337, 0.453, 0.570), stdev = 0.099
  CI (99.9%): [0.072, 0.834] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 98.86% complete, ETA 00:12:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.733 ms/op
# Warmup Iteration   2: 0.602 ms/op
# Warmup Iteration   3: 0.620 ms/op
# Warmup Iteration   4: 0.624 ms/op
# Warmup Iteration   5: 0.596 ms/op
Iteration   1: 0.578 ms/op
Iteration   2: 0.593 ms/op
Iteration   3: 0.784 ms/op
Iteration   4: 1.051 ms/op
Iteration   5: 0.961 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.793 ±(99.9%) 0.818 ms/op [Average]
  (min, avg, max) = (0.578, 0.793, 1.051), stdev = 0.212
  CI (99.9%): [? 0, 1.612] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 98.96% complete, ETA 00:11:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.777 ms/op
# Warmup Iteration   2: 0.663 ms/op
# Warmup Iteration   3: 0.706 ms/op
# Warmup Iteration   4: 0.702 ms/op
# Warmup Iteration   5: 0.659 ms/op
Iteration   1: 0.653 ms/op
Iteration   2: 0.647 ms/op
Iteration   3: 0.833 ms/op
Iteration   4: 1.067 ms/op
Iteration   5: 1.059 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.852 ±(99.9%) 0.796 ms/op [Average]
  (min, avg, max) = (0.647, 0.852, 1.067), stdev = 0.207
  CI (99.9%): [0.056, 1.648] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 99.05% complete, ETA 00:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.794 ms/op
# Warmup Iteration   2: 0.623 ms/op
# Warmup Iteration   3: 0.616 ms/op
# Warmup Iteration   4: 0.648 ms/op
# Warmup Iteration   5: 0.655 ms/op
Iteration   1: 0.640 ms/op
Iteration   2: 0.639 ms/op
Iteration   3: 0.798 ms/op
Iteration   4: 0.997 ms/op
Iteration   5: 0.939 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.803 ±(99.9%) 0.638 ms/op [Average]
  (min, avg, max) = (0.639, 0.803, 0.997), stdev = 0.166
  CI (99.9%): [0.165, 1.440] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 99.15% complete, ETA 00:09:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.741 ms/op
# Warmup Iteration   2: 0.603 ms/op
# Warmup Iteration   3: 0.583 ms/op
# Warmup Iteration   4: 0.587 ms/op
# Warmup Iteration   5: 0.577 ms/op
Iteration   1: 0.586 ms/op
Iteration   2: 0.580 ms/op
Iteration   3: 0.713 ms/op
Iteration   4: 1.028 ms/op
Iteration   5: 0.948 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.771 ±(99.9%) 0.797 ms/op [Average]
  (min, avg, max) = (0.580, 0.771, 1.028), stdev = 0.207
  CI (99.9%): [? 0, 1.568] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 99.24% complete, ETA 00:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.824 ms/op
# Warmup Iteration   2: 0.609 ms/op
# Warmup Iteration   3: 0.611 ms/op
# Warmup Iteration   4: 0.612 ms/op
# Warmup Iteration   5: 0.604 ms/op
Iteration   1: 0.628 ms/op
Iteration   2: 0.642 ms/op
Iteration   3: 1.126 ms/op
Iteration   4: 0.918 ms/op
Iteration   5: 0.924 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.847 ±(99.9%) 0.814 ms/op [Average]
  (min, avg, max) = (0.628, 0.847, 1.126), stdev = 0.211
  CI (99.9%): [0.033, 1.662] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 99.34% complete, ETA 00:07:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.950 ms/op
# Warmup Iteration   2: 0.596 ms/op
# Warmup Iteration   3: 0.611 ms/op
# Warmup Iteration   4: 0.616 ms/op
# Warmup Iteration   5: 0.604 ms/op
Iteration   1: 0.609 ms/op
Iteration   2: 0.625 ms/op
Iteration   3: 0.990 ms/op
Iteration   4: 0.960 ms/op
Iteration   5: 0.945 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  0.826 ±(99.9%) 0.737 ms/op [Average]
  (min, avg, max) = (0.609, 0.826, 0.990), stdev = 0.191
  CI (99.9%): [0.089, 1.563] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 99.43% complete, ETA 00:06:15
# Fork: 1 of 1
# Warmup Iteration   1: 1.631 ms/op
# Warmup Iteration   2: 1.273 ms/op
# Warmup Iteration   3: 1.222 ms/op
# Warmup Iteration   4: 1.211 ms/op
# Warmup Iteration   5: 1.250 ms/op
Iteration   1: 1.275 ms/op
Iteration   2: 1.225 ms/op
Iteration   3: 1.444 ms/op
Iteration   4: 2.234 ms/op
Iteration   5: 1.921 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.620 ±(99.9%) 1.693 ms/op [Average]
  (min, avg, max) = (1.225, 1.620, 2.234), stdev = 0.440
  CI (99.9%): [? 0, 3.313] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 99.53% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 1.549 ms/op
# Warmup Iteration   2: 1.236 ms/op
# Warmup Iteration   3: 1.221 ms/op
# Warmup Iteration   4: 1.243 ms/op
# Warmup Iteration   5: 1.206 ms/op
Iteration   1: 1.228 ms/op
Iteration   2: 1.235 ms/op
Iteration   3: 1.449 ms/op
Iteration   4: 2.077 ms/op
Iteration   5: 2.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.599 ±(99.9%) 1.595 ms/op [Average]
  (min, avg, max) = (1.228, 1.599, 2.077), stdev = 0.414
  CI (99.9%): [0.004, 3.194] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 99.62% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 1.608 ms/op
# Warmup Iteration   2: 1.265 ms/op
# Warmup Iteration   3: 1.263 ms/op
# Warmup Iteration   4: 1.214 ms/op
# Warmup Iteration   5: 1.238 ms/op
Iteration   1: 1.250 ms/op
Iteration   2: 1.215 ms/op
Iteration   3: 1.485 ms/op
Iteration   4: 2.079 ms/op
Iteration   5: 2.229 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.652 ±(99.9%) 1.822 ms/op [Average]
  (min, avg, max) = (1.215, 1.652, 2.229), stdev = 0.473
  CI (99.9%): [? 0, 3.474] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 99.72% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: 1.543 ms/op
# Warmup Iteration   2: 1.216 ms/op
# Warmup Iteration   3: 1.244 ms/op
# Warmup Iteration   4: 1.241 ms/op
# Warmup Iteration   5: 1.203 ms/op
Iteration   1: 1.205 ms/op
Iteration   2: 1.228 ms/op
Iteration   3: 1.430 ms/op
Iteration   4: 1.883 ms/op
Iteration   5: 1.971 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.544 ±(99.9%) 1.396 ms/op [Average]
  (min, avg, max) = (1.205, 1.544, 1.971), stdev = 0.362
  CI (99.9%): [0.148, 2.939] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 99.81% complete, ETA 00:02:04
# Fork: 1 of 1
# Warmup Iteration   1: 1.892 ms/op
# Warmup Iteration   2: 1.186 ms/op
# Warmup Iteration   3: 1.339 ms/op
# Warmup Iteration   4: 1.234 ms/op
# Warmup Iteration   5: 1.215 ms/op
Iteration   1: 1.193 ms/op
Iteration   2: 1.311 ms/op
Iteration   3: 2.149 ms/op
Iteration   4: 1.996 ms/op
Iteration   5: 1.858 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.701 ±(99.9%) 1.636 ms/op [Average]
  (min, avg, max) = (1.193, 1.701, 2.149), stdev = 0.425
  CI (99.9%): [0.065, 3.337] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous
# Parameters: (nCommit = 100, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 99.91% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 1.701 ms/op
# Warmup Iteration   2: 1.211 ms/op
# Warmup Iteration   3: 1.185 ms/op
# Warmup Iteration   4: 1.212 ms/op
# Warmup Iteration   5: 1.224 ms/op
Iteration   1: 1.138 ms/op
Iteration   2: 1.230 ms/op
Iteration   3: 1.938 ms/op
Iteration   4: 1.936 ms/op
Iteration   5: 1.932 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous":
  1.635 ±(99.9%) 1.589 ms/op [Average]
  (min, avg, max) = (1.138, 1.635, 1.938), stdev = 0.413
  CI (99.9%): [0.046, 3.224] (assumes normal distribution)


# Run complete. Total time: 18:15:41

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                           (nCommit)  (nGetDiffCursor)  (nKeys)  (nValues)  Mode  Cnt       Score        Error  Units
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                16       32          2  avgt    5       0.020 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                16       32          3  avgt    5       0.021 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                16     1000          2  avgt    5       0.649 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                16     1000          3  avgt    5       0.639 ±      0.015  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                16   100000          2  avgt    5     100.201 ±      3.496  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                16   100000          3  avgt    5     100.916 ±      5.313  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                32       32          2  avgt    5       0.046 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                32       32          3  avgt    5       0.045 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                32     1000          2  avgt    5       1.279 ±      0.046  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                32     1000          3  avgt    5       1.280 ±      0.043  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                32   100000          2  avgt    5     220.793 ±     70.767  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                32   100000          3  avgt    5     183.930 ±     17.780  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                64       32          2  avgt    5       0.088 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                64       32          3  avgt    5       0.089 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                64     1000          2  avgt    5       2.558 ±      0.058  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                64     1000          3  avgt    5       2.561 ±      0.069  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                64   100000          2  avgt    5     406.401 ±     20.909  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10                64   100000          3  avgt    5     379.765 ±     29.710  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               128       32          2  avgt    5       0.181 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               128       32          3  avgt    5       0.183 ±      0.010  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               128     1000          2  avgt    5       5.093 ±      0.231  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               128     1000          3  avgt    5       5.139 ±      0.141  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               128   100000          2  avgt    5     797.678 ±     46.635  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               128   100000          3  avgt    5     742.759 ±     58.768  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               256       32          2  avgt    5       0.354 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               256       32          3  avgt    5       0.350 ±      0.010  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               256     1000          2  avgt    5      10.833 ±      2.915  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               256     1000          3  avgt    5      10.204 ±      0.424  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               256   100000          2  avgt    5    1662.909 ±     68.739  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               256   100000          3  avgt    5    1641.271 ±     96.823  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               512       32          2  avgt    5       0.697 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               512       32          3  avgt    5       0.714 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               512     1000          2  avgt    5      20.622 ±      0.565  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               512     1000          3  avgt    5      20.165 ±      0.303  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               512   100000          2  avgt    5    3135.427 ±    138.159  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10               512   100000          3  avgt    5    3173.681 ±     93.578  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              1024       32          2  avgt    5       1.395 ±      0.038  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              1024       32          3  avgt    5       1.403 ±      0.052  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              1024     1000          2  avgt    5      40.714 ±      0.939  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              1024     1000          3  avgt    5      40.793 ±      2.010  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              1024   100000          2  avgt    5    6294.886 ±    106.193  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              1024   100000          3  avgt    5    6222.612 ±    269.226  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              2048       32          2  avgt    5       2.815 ±      0.053  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              2048       32          3  avgt    5       2.755 ±      0.084  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              2048     1000          2  avgt    5      80.819 ±      2.216  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              2048     1000          3  avgt    5      82.028 ±      0.871  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              2048   100000          2  avgt    5   12603.126 ±    250.727  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              2048   100000          3  avgt    5   12221.939 ±    335.946  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              4096       32          2  avgt    5       5.751 ±      0.751  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              4096       32          3  avgt    5       5.671 ±      0.307  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              4096     1000          2  avgt    5     163.551 ±      6.090  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              4096     1000          3  avgt    5     163.255 ±      5.520  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              4096   100000          2  avgt    5   25234.116 ±    333.847  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              4096   100000          3  avgt    5   24149.435 ±    291.588  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              8192       32          2  avgt    5      11.457 ±      0.412  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              8192       32          3  avgt    5      11.267 ±      0.272  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              8192     1000          2  avgt    5     327.468 ±      9.953  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              8192     1000          3  avgt    5     322.650 ±      8.127  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              8192   100000          2  avgt    5   50384.253 ±   1022.884  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10              8192   100000          3  avgt    5   47083.501 ±   1321.422  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10             16384       32          2  avgt    5      22.985 ±      0.921  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10             16384       32          3  avgt    5      22.454 ±      1.442  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10             16384     1000          2  avgt    5     649.593 ±     12.500  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10             16384     1000          3  avgt    5     657.817 ±     20.512  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10             16384   100000          2  avgt    5  100459.636 ±   1507.310  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                    10             16384   100000          3  avgt    5   98201.235 ±    687.008  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                16       32          2  avgt    5       0.020 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                16       32          3  avgt    5       0.020 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                16     1000          2  avgt    5       0.672 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                16     1000          3  avgt    5       0.661 ±      0.021  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                16   100000          2  avgt    5     103.965 ±      5.990  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                16   100000          3  avgt    5      99.275 ±     17.029  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                32       32          2  avgt    5       0.045 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                32       32          3  avgt    5       0.044 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                32     1000          2  avgt    5       1.324 ±      0.038  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                32     1000          3  avgt    5       1.333 ±      0.024  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                32   100000          2  avgt    5     205.002 ±      7.892  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                32   100000          3  avgt    5     201.530 ±     28.735  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                64       32          2  avgt    5       0.089 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                64       32          3  avgt    5       0.089 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                64     1000          2  avgt    5       2.674 ±      0.053  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                64     1000          3  avgt    5       2.650 ±      0.066  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                64   100000          2  avgt    5     400.138 ±     27.457  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100                64   100000          3  avgt    5     391.371 ±     34.994  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               128       32          2  avgt    5       0.185 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               128       32          3  avgt    5       0.178 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               128     1000          2  avgt    5       5.374 ±      0.133  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               128     1000          3  avgt    5       5.478 ±      0.523  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               128   100000          2  avgt    5     832.467 ±    153.704  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               128   100000          3  avgt    5     778.757 ±     57.295  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               256       32          2  avgt    5       0.352 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               256       32          3  avgt    5       0.357 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               256     1000          2  avgt    5      10.888 ±      0.344  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               256     1000          3  avgt    5      10.432 ±      0.333  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               256   100000          2  avgt    5    1683.117 ±    290.665  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               256   100000          3  avgt    5    1514.154 ±    107.611  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               512       32          2  avgt    5       0.698 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               512       32          3  avgt    5       0.698 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               512     1000          2  avgt    5      21.499 ±      0.494  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               512     1000          3  avgt    5      21.195 ±      0.243  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               512   100000          2  avgt    5    4247.135 ±   1330.524  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100               512   100000          3  avgt    5    3766.718 ±   2241.667  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              1024       32          2  avgt    5       1.440 ±      0.027  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              1024       32          3  avgt    5       1.422 ±      0.034  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              1024     1000          2  avgt    5      43.041 ±      2.075  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              1024     1000          3  avgt    5      43.359 ±      0.349  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              1024   100000          2  avgt    5    8643.050 ±    470.662  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              1024   100000          3  avgt    5    8706.584 ±    574.817  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              2048       32          2  avgt    5       2.858 ±      0.051  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              2048       32          3  avgt    5       2.865 ±      0.141  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              2048     1000          2  avgt    5      85.434 ±      3.072  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              2048     1000          3  avgt    5      85.026 ±      2.542  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              2048   100000          2  avgt    5   17466.338 ±    499.964  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              2048   100000          3  avgt    5   16707.243 ±    502.002  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              4096       32          2  avgt    5       5.681 ±      0.133  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              4096       32          3  avgt    5       6.048 ±      0.264  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              4096     1000          2  avgt    5     170.866 ±      5.949  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              4096     1000          3  avgt    5     173.283 ±      3.309  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              4096   100000          2  avgt    5   46756.312 ±  22294.005  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              4096   100000          3  avgt    5   45001.653 ±   9805.006  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              8192       32          2  avgt    5      14.709 ±     14.933  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              8192       32          3  avgt    5      14.602 ±     14.852  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              8192     1000          2  avgt    5     519.464 ±    408.718  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              8192     1000          3  avgt    5     510.770 ±    365.763  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              8192   100000          2  avgt    5  107148.905 ±  38860.596  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100              8192   100000          3  avgt    5  125787.152 ±  37750.900  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100             16384       32          2  avgt    5      46.098 ±     84.391  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100             16384       32          3  avgt    5      49.090 ±     56.867  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100             16384     1000          2  avgt    5    1167.485 ±    282.982  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100             16384     1000          3  avgt    5    1350.473 ±    616.890  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100             16384   100000          2  avgt    5  255189.550 ±  46252.878  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark                   100             16384   100000          3  avgt    5  220902.039 ±  88135.767  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                16       32          2  avgt    5       0.033 ±      0.037  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                16       32          3  avgt    5       0.028 ±      0.037  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                16     1000          2  avgt    5       0.871 ±      1.016  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                16     1000          3  avgt    5       0.847 ±      0.929  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                16   100000          2  avgt    5     138.883 ±    142.256  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                16   100000          3  avgt    5     162.750 ±    161.702  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                32       32          2  avgt    5       0.057 ±      0.067  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                32       32          3  avgt    5       0.059 ±      0.068  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                32     1000          2  avgt    5       1.690 ±      1.832  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                32     1000          3  avgt    5       1.737 ±      2.082  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                32   100000          2  avgt    5     276.074 ±    217.229  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                32   100000          3  avgt    5     274.541 ±    243.054  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                64       32          2  avgt    5       0.117 ±      0.132  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                64       32          3  avgt    5       0.117 ±      0.133  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                64     1000          2  avgt    5       3.406 ±      3.955  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                64     1000          3  avgt    5       3.253 ±      2.877  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                64   100000          2  avgt    5     590.591 ±    455.383  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10                64   100000          3  avgt    5     576.551 ±    424.051  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               128       32          2  avgt    5       0.226 ±      0.235  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               128       32          3  avgt    5       0.229 ±      0.239  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               128     1000          2  avgt    5       6.513 ±      6.122  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               128     1000          3  avgt    5       6.856 ±      8.085  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               128   100000          2  avgt    5    1358.317 ±    653.231  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               128   100000          3  avgt    5    1234.855 ±    311.392  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               256       32          2  avgt    5       0.454 ±      0.435  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               256       32          3  avgt    5       0.482 ±      0.551  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               256     1000          2  avgt    5      12.889 ±     10.908  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               256     1000          3  avgt    5      13.909 ±     15.360  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               256   100000          2  avgt    5    2556.910 ±    453.377  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               256   100000          3  avgt    5    2416.141 ±    372.674  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               512       32          2  avgt    5       0.909 ±      0.830  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               512       32          3  avgt    5       0.925 ±      1.018  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               512     1000          2  avgt    5      27.009 ±     28.869  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               512     1000          3  avgt    5      27.543 ±     27.976  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               512   100000          2  avgt    5    5078.693 ±    645.771  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10               512   100000          3  avgt    5    4941.817 ±    406.274  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              1024       32          2  avgt    5       1.845 ±      2.038  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              1024       32          3  avgt    5       1.958 ±      2.463  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              1024     1000          2  avgt    5      53.425 ±     51.469  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              1024     1000          3  avgt    5      55.631 ±     59.424  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              1024   100000          2  avgt    5   10119.940 ±    638.951  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              1024   100000          3  avgt    5    9466.928 ±    589.814  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              2048       32          2  avgt    5       3.785 ±      4.473  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              2048       32          3  avgt    5       3.774 ±      4.170  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              2048     1000          2  avgt    5     113.033 ±    114.265  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              2048     1000          3  avgt    5     108.274 ±    101.768  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              2048   100000          2  avgt    5   20353.776 ±    912.035  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              2048   100000          3  avgt    5   19920.819 ±   2527.793  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              4096       32          2  avgt    5       7.666 ±      8.991  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              4096       32          3  avgt    5       7.650 ±      8.686  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              4096     1000          2  avgt    5     234.262 ±    227.559  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              4096     1000          3  avgt    5     238.578 ±    270.198  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              4096   100000          2  avgt    5   39480.987 ±   2083.419  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              4096   100000          3  avgt    5   38612.571 ±   1614.601  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              8192       32          2  avgt    5      14.190 ±     12.241  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              8192       32          3  avgt    5      15.247 ±     16.785  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              8192     1000          2  avgt    5     492.595 ±    386.015  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              8192     1000          3  avgt    5     532.174 ±    450.656  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              8192   100000          2  avgt    5   80501.261 ±   2579.560  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10              8192   100000          3  avgt    5   75351.543 ±   3894.032  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10             16384       32          2  avgt    5      29.713 ±     28.583  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10             16384       32          3  avgt    5      31.694 ±     39.574  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10             16384     1000          2  avgt    5    1060.882 ±    715.419  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10             16384     1000          3  avgt    5    1057.992 ±    580.458  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10             16384   100000          2  avgt    5  161121.430 ±   3723.177  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous          10             16384   100000          3  avgt    5  166342.781 ±  41892.211  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                16       32          2  avgt    5       0.028 ±      0.037  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                16       32          3  avgt    5       0.027 ±      0.032  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                16     1000          2  avgt    5       0.885 ±      1.070  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                16     1000          3  avgt    5       0.839 ±      0.853  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                16   100000          2  avgt    5     143.598 ±    125.816  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                16   100000          3  avgt    5     140.947 ±    108.273  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                32       32          2  avgt    5       0.056 ±      0.054  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                32       32          3  avgt    5       0.059 ±      0.073  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                32     1000          2  avgt    5       1.729 ±      2.010  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                32     1000          3  avgt    5       1.653 ±      1.637  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                32   100000          2  avgt    5     304.337 ±    225.751  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                32   100000          3  avgt    5     286.374 ±    238.828  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                64       32          2  avgt    5       0.116 ±      0.137  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                64       32          3  avgt    5       0.115 ±      0.122  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                64     1000          2  avgt    5       4.006 ±      3.631  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                64     1000          3  avgt    5       4.448 ±      3.616  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                64   100000          2  avgt    5     745.184 ±    458.596  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100                64   100000          3  avgt    5     734.460 ±    557.120  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               128       32          2  avgt    5       0.272 ±      0.350  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               128       32          3  avgt    5       0.293 ±      0.347  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               128     1000          2  avgt    5       8.357 ±      9.366  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               128     1000          3  avgt    5       7.745 ±      7.546  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               128   100000          2  avgt    5    1654.263 ±    460.584  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               128   100000          3  avgt    5    1405.392 ±    308.263  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               256       32          2  avgt    5       0.618 ±      0.675  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               256       32          3  avgt    5       0.665 ±      0.607  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               256     1000          2  avgt    5      19.294 ±     25.264  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               256     1000          3  avgt    5      16.144 ±     16.247  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               256   100000          2  avgt    5    3233.448 ±   1116.391  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               256   100000          3  avgt    5    3147.276 ±    422.853  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               512       32          2  avgt    5       1.033 ±      0.829  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               512       32          3  avgt    5       0.992 ±      1.095  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               512     1000          2  avgt    5      33.612 ±     38.572  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               512     1000          3  avgt    5      34.977 ±     32.227  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               512   100000          2  avgt    5    8515.544 ±   3307.176  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100               512   100000          3  avgt    5    7965.831 ±   4076.105  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              1024       32          2  avgt    5       1.969 ±      2.301  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              1024       32          3  avgt    5       1.926 ±      2.384  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              1024     1000          2  avgt    5      56.857 ±     58.381  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              1024     1000          3  avgt    5      60.123 ±     72.030  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              1024   100000          2  avgt    5   12152.476 ±   1176.766  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              1024   100000          3  avgt    5   13088.074 ±   5285.997  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              2048       32          2  avgt    5       3.708 ±      4.248  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              2048       32          3  avgt    5       3.937 ±      4.757  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              2048     1000          2  avgt    5     113.605 ±    120.721  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              2048     1000          3  avgt    5     112.001 ±     99.930  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              2048   100000          2  avgt    5   27223.207 ±   5861.502  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              2048   100000          3  avgt    5   29652.920 ±   8317.553  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              4096       32          2  avgt    5       7.327 ±      6.338  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              4096       32          3  avgt    5       8.036 ±     10.177  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              4096     1000          2  avgt    5     231.644 ±    236.727  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              4096     1000          3  avgt    5     239.674 ±    278.192  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              4096   100000          2  avgt    5   62297.065 ±  32310.062  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              4096   100000          3  avgt    5   63567.856 ±  41900.518  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              8192       32          2  avgt    5      17.296 ±     19.051  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              8192       32          3  avgt    5      17.339 ±     17.696  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              8192     1000          2  avgt    5     595.246 ±    514.002  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              8192     1000          3  avgt    5     706.167 ±    366.387  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              8192   100000          2  avgt    5  110198.189 ±  26771.215  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100              8192   100000          3  avgt    5   98737.288 ±  39829.695  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100             16384       32          2  avgt    5      33.850 ±     24.320  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100             16384       32          3  avgt    5      32.171 ±     22.732  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100             16384     1000          2  avgt    5    1087.237 ±    245.744  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100             16384     1000          3  avgt    5    1118.576 ±    551.761  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100             16384   100000          2  avgt    5  235396.217 ±  62770.404  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmarkContinuous         100             16384   100000          3  avgt    5  205714.364 ±  17712.621  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                16       32          2  avgt    5       0.027 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                16       32          3  avgt    5       0.029 ±      0.024  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                16     1000          2  avgt    5       0.970 ±      0.934  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                16     1000          3  avgt    5       0.998 ±      0.801  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                16   100000          2  avgt    5     150.135 ±    139.909  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                16   100000          3  avgt    5     147.383 ±    155.268  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                32       32          2  avgt    5       0.060 ±      0.071  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                32       32          3  avgt    5       0.055 ±      0.062  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                32     1000          2  avgt    5       1.649 ±      1.569  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                32     1000          3  avgt    5       1.669 ±      1.715  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                32   100000          2  avgt    5     341.685 ±    281.221  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                32   100000          3  avgt    5     294.962 ±    249.771  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                64       32          2  avgt    5       0.134 ±      0.164  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                64       32          3  avgt    5       0.133 ±      0.158  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                64     1000          2  avgt    5       4.293 ±      6.173  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                64     1000          3  avgt    5       3.715 ±      4.092  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                64   100000          2  avgt    5     683.413 ±    326.490  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10                64   100000          3  avgt    5     672.746 ±    418.960  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               128       32          2  avgt    5       0.259 ±      0.240  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               128       32          3  avgt    5       0.268 ±      0.243  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               128     1000          2  avgt    5      11.347 ±     19.653  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               128     1000          3  avgt    5       8.069 ±      5.771  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               128   100000          2  avgt    5    1289.246 ±    516.178  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               128   100000          3  avgt    5    1322.530 ±    438.709  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               256       32          2  avgt    5       0.486 ±      0.573  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               256       32          3  avgt    5       0.456 ±      0.467  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               256     1000          2  avgt    5      14.295 ±     18.235  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               256     1000          3  avgt    5      13.637 ±     14.624  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               256   100000          2  avgt    5    2580.100 ±    476.191  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               256   100000          3  avgt    5    2593.846 ±    219.015  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               512       32          2  avgt    5       0.978 ±      1.266  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               512       32          3  avgt    5       0.928 ±      0.989  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               512     1000          2  avgt    5      27.316 ±     29.564  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               512     1000          3  avgt    5      27.364 ±     29.257  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               512   100000          2  avgt    5    5237.567 ±    945.961  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10               512   100000          3  avgt    5    5099.069 ±    187.210  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              1024       32          2  avgt    5       1.983 ±      2.401  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              1024       32          3  avgt    5       1.934 ±      2.247  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              1024     1000          2  avgt    5      57.257 ±     61.694  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              1024     1000          3  avgt    5      57.313 ±     65.800  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              1024   100000          2  avgt    5   10371.913 ±    430.075  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              1024   100000          3  avgt    5    9895.307 ±    803.310  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              2048       32          2  avgt    5       3.895 ±      4.857  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              2048       32          3  avgt    5       3.823 ±      4.430  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              2048     1000          2  avgt    5     112.053 ±    112.328  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              2048     1000          3  avgt    5     109.377 ±    101.860  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              2048   100000          2  avgt    5   20405.429 ±    711.993  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              2048   100000          3  avgt    5   20033.334 ±   1104.513  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              4096       32          2  avgt    5       7.350 ±      7.542  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              4096       32          3  avgt    5       7.755 ±      8.451  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              4096     1000          2  avgt    5     255.931 ±    307.831  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              4096     1000          3  avgt    5     238.210 ±    264.928  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              4096   100000          2  avgt    5   41704.632 ±   3010.766  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              4096   100000          3  avgt    5   44129.684 ±  15078.483  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              8192       32          2  avgt    5      15.990 ±     18.855  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              8192       32          3  avgt    5      15.897 ±     19.198  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              8192     1000          2  avgt    5     496.865 ±    414.367  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              8192     1000          3  avgt    5     473.942 ±    456.893  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              8192   100000          2  avgt    5   84854.925 ±   4535.510  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10              8192   100000          3  avgt    5   69267.338 ±  50743.166  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10             16384       32          2  avgt    5      23.866 ±      0.775  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10             16384       32          3  avgt    5      23.813 ±      1.069  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10             16384     1000          2  avgt    5     678.946 ±     26.261  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10             16384     1000          3  avgt    5     671.614 ±     17.633  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10             16384   100000          2  avgt    5  140468.884 ±  53941.747  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                             10             16384   100000          3  avgt    5  127948.430 ±  27217.792  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                16       32          2  avgt    5       0.039 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                16       32          3  avgt    5       0.049 ±      0.044  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                16     1000          2  avgt    5       1.048 ±      0.026  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                16     1000          3  avgt    5       1.327 ±      0.910  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                16   100000          2  avgt    5     372.721 ±    272.429  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                16   100000          3  avgt    5     542.290 ±    630.650  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                32       32          2  avgt    5       0.138 ±      0.084  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                32       32          3  avgt    5       0.209 ±      0.295  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                32     1000          2  avgt    5       2.720 ±      0.210  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                32     1000          3  avgt    5       2.905 ±      1.406  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                32   100000          2  avgt    5     380.058 ±    208.404  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                32   100000          3  avgt    5     332.320 ±    219.455  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                64       32          2  avgt    5       0.114 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                64       32          3  avgt    5       0.107 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                64     1000          2  avgt    5       3.389 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                64     1000          3  avgt    5       3.324 ±      0.059  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                64   100000          2  avgt    5     505.761 ±     80.605  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100                64   100000          3  avgt    5     512.867 ±     25.036  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               128       32          2  avgt    5       0.204 ±      0.032  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               128       32          3  avgt    5       0.211 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               128     1000          2  avgt    5       6.928 ±      1.209  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               128     1000          3  avgt    5       6.688 ±      0.229  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               128   100000          2  avgt    5    1084.782 ±    265.776  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               128   100000          3  avgt    5    1140.674 ±    541.396  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               256       32          2  avgt    5       0.429 ±      0.046  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               256       32          3  avgt    5       0.421 ±      0.047  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               256     1000          2  avgt    5      12.335 ±      0.234  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               256     1000          3  avgt    5      12.494 ±      0.148  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               256   100000          2  avgt    5    2057.450 ±    885.462  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               256   100000          3  avgt    5    2080.266 ±    729.982  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               512       32          2  avgt    5       0.898 ±      0.155  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               512       32          3  avgt    5       0.898 ±      0.341  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               512     1000          2  avgt    5      27.642 ±      5.973  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               512     1000          3  avgt    5      26.272 ±      5.467  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               512   100000          2  avgt    5    6532.847 ±   1608.029  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100               512   100000          3  avgt    5    6242.554 ±   3913.005  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              1024       32          2  avgt    5       1.942 ±      1.798  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              1024       32          3  avgt    5       2.012 ±      0.656  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              1024     1000          2  avgt    5      58.556 ±      1.247  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              1024     1000          3  avgt    5      62.525 ±      8.109  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              1024   100000          2  avgt    5   16275.914 ±  18614.326  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              1024   100000          3  avgt    5   17513.417 ±  25094.380  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              2048       32          2  avgt    5       3.611 ±      0.117  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              2048       32          3  avgt    5       3.700 ±      0.147  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              2048     1000          2  avgt    5     118.165 ±      1.597  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              2048     1000          3  avgt    5     127.582 ±    113.238  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              2048   100000          2  avgt    5   31455.581 ±  28936.825  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              2048   100000          3  avgt    5   30204.660 ±   9442.546  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              4096       32          2  avgt    5      10.094 ±      1.130  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              4096       32          3  avgt    5      10.277 ±      1.277  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              4096     1000          2  avgt    5     239.161 ±    100.180  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              4096     1000          3  avgt    5     221.670 ±      5.529  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              4096   100000          2  avgt    5   48754.014 ±  12483.194  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              4096   100000          3  avgt    5   48267.739 ±   6398.424  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              8192       32          2  avgt    5      13.909 ±      2.438  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              8192       32          3  avgt    5      13.671 ±      0.724  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              8192     1000          2  avgt    5     456.897 ±    205.695  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              8192     1000          3  avgt    5     493.073 ±    318.596  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              8192   100000          2  avgt    5  118282.182 ± 110103.123  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100              8192   100000          3  avgt    5  114420.250 ±  44319.823  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100             16384       32          2  avgt    5      29.131 ±      2.689  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100             16384       32          3  avgt    5      31.887 ±      2.293  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100             16384     1000          2  avgt    5     897.273 ±    138.829  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100             16384     1000          3  avgt    5     953.947 ±    382.380  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100             16384   100000          2  avgt    5  208644.324 ± 185947.046  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmark                            100             16384   100000          3  avgt    5  140108.735 ±   2859.611  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                16       32          2  avgt    5       0.020 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                16       32          3  avgt    5       0.020 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                16     1000          2  avgt    5       0.642 ±      0.018  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                16     1000          3  avgt    5       0.644 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                16   100000          2  avgt    5     100.768 ±      7.146  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                16   100000          3  avgt    5     107.616 ±      9.182  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                32       32          2  avgt    5       0.045 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                32       32          3  avgt    5       0.045 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                32     1000          2  avgt    5       1.289 ±      0.034  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                32     1000          3  avgt    5       1.285 ±      0.041  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                32   100000          2  avgt    5     199.604 ±     18.497  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                32   100000          3  avgt    5     194.351 ±     10.454  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                64       32          2  avgt    5       0.091 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                64       32          3  avgt    5       0.090 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                64     1000          2  avgt    5       2.563 ±      0.074  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                64     1000          3  avgt    5       2.577 ±      0.051  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                64   100000          2  avgt    5     396.086 ±     41.122  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10                64   100000          3  avgt    5     382.542 ±     51.899  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               128       32          2  avgt    5       0.175 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               128       32          3  avgt    5       0.179 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               128     1000          2  avgt    5       5.160 ±      0.152  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               128     1000          3  avgt    5       5.119 ±      0.064  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               128   100000          2  avgt    5     788.899 ±     47.047  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               128   100000          3  avgt    5     794.373 ±     55.380  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               256       32          2  avgt    5       0.352 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               256       32          3  avgt    5       0.355 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               256     1000          2  avgt    5      10.194 ±      0.289  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               256     1000          3  avgt    5      10.172 ±      0.181  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               256   100000          2  avgt    5    1589.875 ±    114.831  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               256   100000          3  avgt    5    1578.544 ±    109.632  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               512       32          2  avgt    5       0.703 ±      0.021  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               512       32          3  avgt    5       0.715 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               512     1000          2  avgt    5      20.574 ±      0.406  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               512     1000          3  avgt    5      20.611 ±      0.347  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               512   100000          2  avgt    5    3116.537 ±    165.955  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10               512   100000          3  avgt    5    3053.282 ±    214.509  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              1024       32          2  avgt    5       1.434 ±      0.019  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              1024       32          3  avgt    5       1.423 ±      0.036  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              1024     1000          2  avgt    5      41.035 ±      0.990  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              1024     1000          3  avgt    5      41.176 ±      1.026  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              1024   100000          2  avgt    5    6470.604 ±    148.606  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              1024   100000          3  avgt    5    6293.270 ±    404.029  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              2048       32          2  avgt    5       2.844 ±      0.034  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              2048       32          3  avgt    5       2.855 ±      0.099  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              2048     1000          2  avgt    5      82.607 ±      3.842  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              2048     1000          3  avgt    5      82.503 ±      1.840  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              2048   100000          2  avgt    5   12850.984 ±    210.230  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              2048   100000          3  avgt    5   11845.741 ±    103.674  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              4096       32          2  avgt    5       5.667 ±      0.103  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              4096       32          3  avgt    5       5.639 ±      0.237  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              4096     1000          2  avgt    5     166.041 ±      4.994  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              4096     1000          3  avgt    5     162.764 ±      2.947  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              4096   100000          2  avgt    5   25388.293 ±    667.348  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              4096   100000          3  avgt    5   25921.857 ±    662.392  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              8192       32          2  avgt    5      11.260 ±      0.406  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              8192       32          3  avgt    5      11.461 ±      0.354  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              8192     1000          2  avgt    5     332.986 ±     10.768  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              8192     1000          3  avgt    5     327.043 ±      8.926  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              8192   100000          2  avgt    5   51047.226 ±   1176.373  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10              8192   100000          3  avgt    5   84119.638 ±   5970.726  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10             16384       32          2  avgt    5      32.907 ±     32.603  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10             16384       32          3  avgt    5      34.146 ±     44.457  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10             16384     1000          2  avgt    5    1179.585 ±    669.807  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10             16384     1000          3  avgt    5    1164.492 ±    827.913  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10             16384   100000          2  avgt    5  172732.804 ±   3003.919  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                   10             16384   100000          3  avgt    5  170752.112 ±   7679.980  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                16       32          2  avgt    5       0.029 ±      0.041  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                16       32          3  avgt    5       0.029 ±      0.039  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                16     1000          2  avgt    5       0.901 ±      1.112  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                16     1000          3  avgt    5       0.911 ±      1.114  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                16   100000          2  avgt    5     150.635 ±    145.308  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                16   100000          3  avgt    5     156.779 ±    144.379  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                32       32          2  avgt    5       0.062 ±      0.072  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                32       32          3  avgt    5       0.064 ±      0.079  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                32     1000          2  avgt    5       1.805 ±      2.162  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                32     1000          3  avgt    5       1.780 ±      2.148  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                32   100000          2  avgt    5     322.933 ±    273.324  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                32   100000          3  avgt    5     296.037 ±    259.944  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                64       32          2  avgt    5       0.124 ±      0.149  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                64       32          3  avgt    5       0.124 ±      0.162  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                64     1000          2  avgt    5       3.714 ±      4.645  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                64     1000          3  avgt    5       3.650 ±      4.612  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                64   100000          2  avgt    5     647.828 ±    371.158  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100                64   100000          3  avgt    5     668.153 ±    290.425  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               128       32          2  avgt    5       0.259 ±      0.343  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               128       32          3  avgt    5       0.247 ±      0.311  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               128     1000          2  avgt    5       7.380 ±      8.192  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               128     1000          3  avgt    5       7.402 ±      8.844  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               128   100000          2  avgt    5    1372.846 ±    346.861  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               128   100000          3  avgt    5    1381.656 ±    262.946  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               256       32          2  avgt    5       0.501 ±      0.666  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               256       32          3  avgt    5       0.482 ±      0.568  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               256     1000          2  avgt    5      15.096 ±     19.097  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               256     1000          3  avgt    5      14.572 ±     15.385  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               256   100000          2  avgt    5    2860.775 ±   1049.179  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               256   100000          3  avgt    5    2781.958 ±    120.772  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               512       32          2  avgt    5       0.927 ±      0.931  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               512       32          3  avgt    5       0.992 ±      1.319  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               512     1000          2  avgt    5      30.512 ±     36.603  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               512     1000          3  avgt    5      31.179 ±     36.695  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               512   100000          2  avgt    5    6351.233 ±    910.163  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100               512   100000          3  avgt    5    6280.492 ±   1353.568  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              1024       32          2  avgt    5       1.835 ±      1.831  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              1024       32          3  avgt    5       1.924 ±      2.189  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              1024     1000          2  avgt    5      61.261 ±     64.591  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              1024     1000          3  avgt    5      60.203 ±     69.171  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              1024   100000          2  avgt    5   12264.902 ±   1077.847  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              1024   100000          3  avgt    5   11502.220 ±   1461.793  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              2048       32          2  avgt    5       3.924 ±      5.099  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              2048       32          3  avgt    5       3.883 ±      4.775  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              2048     1000          2  avgt    5     114.584 ±    112.019  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              2048     1000          3  avgt    5     124.425 ±    142.493  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              2048   100000          2  avgt    5   23330.119 ±   1986.603  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              2048   100000          3  avgt    5   25567.950 ±   6151.999  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              4096       32          2  avgt    5       7.821 ±      9.052  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              4096       32          3  avgt    5       7.854 ±      9.663  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              4096     1000          2  avgt    5     260.511 ±    300.222  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              4096     1000          3  avgt    5     256.475 ±    292.182  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              4096   100000          2  avgt    5   59807.834 ±  34714.022  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              4096   100000          3  avgt    5   59130.930 ±  21745.048  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              8192       32          2  avgt    5      16.128 ±     20.557  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              8192       32          3  avgt    5      17.383 ±     20.060  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              8192     1000          2  avgt    5     602.307 ±    544.708  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              8192     1000          3  avgt    5     591.021 ±    471.839  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              8192   100000          2  avgt    5  102769.994 ±  19169.628  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100              8192   100000          3  avgt    5  103046.735 ±  10670.825  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100             16384       32          2  avgt    5      33.960 ±     47.638  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100             16384       32          3  avgt    5      32.081 ±     41.370  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100             16384     1000          2  avgt    5    1228.785 ±    452.550  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100             16384     1000          3  avgt    5    1227.772 ±    424.176  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100             16384   100000          2  avgt    5  212315.402 ±  27017.016  ms/op
ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorBenchmarkContinuous                  100             16384   100000          3  avgt    5  201995.872 ±   5759.462  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                16       32          2  avgt    5       0.003 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                16       32          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                16     1000          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                16     1000          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                16   100000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                16   100000          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                32       32          2  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                32       32          3  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                32     1000          2  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                32     1000          3  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                32   100000          2  avgt    5       0.005 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                32   100000          3  avgt    5       0.005 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                64       32          2  avgt    5       0.009 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                64       32          3  avgt    5       0.010 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                64     1000          2  avgt    5       0.011 ±      0.008  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                64     1000          3  avgt    5       0.009 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                64   100000          2  avgt    5       0.009 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10                64   100000          3  avgt    5       0.008 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               128       32          2  avgt    5       0.017 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               128       32          3  avgt    5       0.017 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               128     1000          2  avgt    5       0.016 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               128     1000          3  avgt    5       0.016 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               128   100000          2  avgt    5       0.017 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               128   100000          3  avgt    5       0.016 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               256       32          2  avgt    5       0.031 ±      0.016  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               256       32          3  avgt    5       0.032 ±      0.020  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               256     1000          2  avgt    5       0.035 ±      0.029  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               256     1000          3  avgt    5       0.035 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               256   100000          2  avgt    5       0.037 ±      0.033  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               256   100000          3  avgt    5       0.040 ±      0.038  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               512       32          2  avgt    5       0.076 ±      0.054  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               512       32          3  avgt    5       0.086 ±      0.076  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               512     1000          2  avgt    5       0.089 ±      0.082  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               512     1000          3  avgt    5       0.082 ±      0.050  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               512   100000          2  avgt    5       0.079 ±      0.062  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10               512   100000          3  avgt    5       0.081 ±      0.071  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              1024       32          2  avgt    5       0.129 ±      0.092  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              1024       32          3  avgt    5       0.127 ±      0.067  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              1024     1000          2  avgt    5       0.131 ±      0.090  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              1024     1000          3  avgt    5       0.126 ±      0.082  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              1024   100000          2  avgt    5       0.131 ±      0.092  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              1024   100000          3  avgt    5       0.130 ±      0.117  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              2048       32          2  avgt    5       0.276 ±      0.211  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              2048       32          3  avgt    5       0.281 ±      0.179  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              2048     1000          2  avgt    5       0.285 ±      0.230  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              2048     1000          3  avgt    5       0.289 ±      0.242  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              2048   100000          2  avgt    5       0.313 ±      0.325  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              2048   100000          3  avgt    5       0.318 ±      0.308  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              4096       32          2  avgt    5       0.677 ±      0.607  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              4096       32          3  avgt    5       0.586 ±      0.450  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              4096     1000          2  avgt    5       0.520 ±      0.331  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              4096     1000          3  avgt    5       0.543 ±      0.400  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              4096   100000          2  avgt    5       0.553 ±      0.421  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              4096   100000          3  avgt    5       0.547 ±      0.463  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              8192       32          2  avgt    5       1.013 ±      0.735  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              8192       32          3  avgt    5       1.079 ±      0.697  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              8192     1000          2  avgt    5       1.134 ±      0.790  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              8192     1000          3  avgt    5       1.142 ±      0.628  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              8192   100000          2  avgt    5       1.141 ±      0.996  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10              8192   100000          3  avgt    5       1.211 ±      0.999  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10             16384       32          2  avgt    5       2.760 ±      3.674  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10             16384       32          3  avgt    5       2.391 ±      2.289  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10             16384     1000          2  avgt    5       2.347 ±      1.572  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10             16384     1000          3  avgt    5       2.055 ±      1.244  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10             16384   100000          2  avgt    5       2.150 ±      1.576  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                   10             16384   100000          3  avgt    5       2.070 ±      1.441  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                16       32          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                16       32          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                16     1000          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                16     1000          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                16   100000          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                16   100000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                32       32          2  avgt    5       0.005 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                32       32          3  avgt    5       0.005 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                32     1000          2  avgt    5       0.005 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                32     1000          3  avgt    5       0.005 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                32   100000          2  avgt    5       0.005 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                32   100000          3  avgt    5       0.006 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                64       32          2  avgt    5       0.010 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                64       32          3  avgt    5       0.009 ±      0.008  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                64     1000          2  avgt    5       0.009 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                64     1000          3  avgt    5       0.008 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                64   100000          2  avgt    5       0.009 ±      0.008  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100                64   100000          3  avgt    5       0.009 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               128       32          2  avgt    5       0.017 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               128       32          3  avgt    5       0.018 ±      0.012  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               128     1000          2  avgt    5       0.018 ±      0.012  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               128     1000          3  avgt    5       0.019 ±      0.015  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               128   100000          2  avgt    5       0.020 ±      0.016  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               128   100000          3  avgt    5       0.019 ±      0.016  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               256       32          2  avgt    5       0.032 ±      0.016  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               256       32          3  avgt    5       0.033 ±      0.020  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               256     1000          2  avgt    5       0.034 ±      0.023  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               256     1000          3  avgt    5       0.035 ±      0.023  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               256   100000          2  avgt    5       0.039 ±      0.041  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               256   100000          3  avgt    5       0.038 ±      0.033  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               512       32          2  avgt    5       0.080 ±      0.075  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               512       32          3  avgt    5       0.070 ±      0.048  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               512     1000          2  avgt    5       0.068 ±      0.044  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               512     1000          3  avgt    5       0.064 ±      0.033  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               512   100000          2  avgt    5       0.074 ±      0.070  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100               512   100000          3  avgt    5       0.069 ±      0.039  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              1024       32          2  avgt    5       0.142 ±      0.121  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              1024       32          3  avgt    5       0.148 ±      0.105  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              1024     1000          2  avgt    5       0.160 ±      0.144  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              1024     1000          3  avgt    5       0.169 ±      0.139  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              1024   100000          2  avgt    5       0.165 ±      0.133  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              1024   100000          3  avgt    5       0.154 ±      0.169  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              2048       32          2  avgt    5       0.260 ±      0.149  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              2048       32          3  avgt    5       0.274 ±      0.176  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              2048     1000          2  avgt    5       0.270 ±      0.183  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              2048     1000          3  avgt    5       0.290 ±      0.197  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              2048   100000          2  avgt    5       0.285 ±      0.197  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              2048   100000          3  avgt    5       0.291 ±      0.261  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              4096       32          2  avgt    5       0.558 ±      0.360  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              4096       32          3  avgt    5       0.588 ±      0.383  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              4096     1000          2  avgt    5       0.604 ±      0.462  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              4096     1000          3  avgt    5       0.588 ±      0.372  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              4096   100000          2  avgt    5       0.688 ±      0.797  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              4096   100000          3  avgt    5       0.565 ±      0.405  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              8192       32          2  avgt    5       1.023 ±      0.735  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              8192       32          3  avgt    5       1.118 ±      0.812  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              8192     1000          2  avgt    5       1.176 ±      0.929  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              8192     1000          3  avgt    5       1.163 ±      0.882  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              8192   100000          2  avgt    5       1.257 ±      1.063  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100              8192   100000          3  avgt    5       1.286 ±      1.157  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100             16384       32          2  avgt    5       2.137 ±      1.459  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100             16384       32          3  avgt    5       2.109 ±      1.409  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100             16384     1000          2  avgt    5       2.153 ±      1.657  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100             16384     1000          3  avgt    5       2.168 ±      1.474  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100             16384   100000          2  avgt    5       2.341 ±      2.455  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmark                  100             16384   100000          3  avgt    5       2.487 ±      2.808  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                16       32          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                16       32          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                16     1000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                16     1000          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                16   100000          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                16   100000          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                32       32          2  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                32       32          3  avgt    5       0.004 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                32     1000          2  avgt    5       0.004 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                32     1000          3  avgt    5       0.004 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                32   100000          2  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                32   100000          3  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                64       32          2  avgt    5       0.009 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                64       32          3  avgt    5       0.009 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                64     1000          2  avgt    5       0.009 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                64     1000          3  avgt    5       0.008 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                64   100000          2  avgt    5       0.009 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10                64   100000          3  avgt    5       0.008 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               128       32          2  avgt    5       0.016 ±      0.010  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               128       32          3  avgt    5       0.015 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               128     1000          2  avgt    5       0.016 ±      0.010  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               128     1000          3  avgt    5       0.015 ±      0.010  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               128   100000          2  avgt    5       0.016 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               128   100000          3  avgt    5       0.016 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               256       32          2  avgt    5       0.033 ±      0.020  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               256       32          3  avgt    5       0.036 ±      0.035  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               256     1000          2  avgt    5       0.036 ±      0.024  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               256     1000          3  avgt    5       0.040 ±      0.033  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               256   100000          2  avgt    5       0.034 ±      0.021  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               256   100000          3  avgt    5       0.034 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               512       32          2  avgt    5       0.064 ±      0.035  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               512       32          3  avgt    5       0.063 ±      0.038  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               512     1000          2  avgt    5       0.060 ±      0.034  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               512     1000          3  avgt    5       0.059 ±      0.029  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               512   100000          2  avgt    5       0.067 ±      0.045  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10               512   100000          3  avgt    5       0.065 ±      0.032  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              1024       32          2  avgt    5       0.133 ±      0.081  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              1024       32          3  avgt    5       0.138 ±      0.103  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              1024     1000          2  avgt    5       0.147 ±      0.103  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              1024     1000          3  avgt    5       0.151 ±      0.128  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              1024   100000          2  avgt    5       0.158 ±      0.128  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              1024   100000          3  avgt    5       0.143 ±      0.141  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              2048       32          2  avgt    5       0.257 ±      0.162  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              2048       32          3  avgt    5       0.266 ±      0.186  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              2048     1000          2  avgt    5       0.242 ±      0.132  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              2048     1000          3  avgt    5       0.257 ±      0.213  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              2048   100000          2  avgt    5       0.252 ±      0.172  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              2048   100000          3  avgt    5       0.254 ±      0.126  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              4096       32          2  avgt    5       0.499 ±      0.230  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              4096       32          3  avgt    5       0.555 ±      0.378  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              4096     1000          2  avgt    5       0.569 ±      0.440  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              4096     1000          3  avgt    5       0.580 ±      0.430  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              4096   100000          2  avgt    5       0.637 ±      0.628  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              4096   100000          3  avgt    5       0.565 ±      0.400  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              8192       32          2  avgt    5       1.093 ±      0.739  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              8192       32          3  avgt    5       0.993 ±      0.516  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              8192     1000          2  avgt    5       0.993 ±      0.600  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              8192     1000          3  avgt    5       0.956 ±      0.560  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              8192   100000          2  avgt    5       0.959 ±      0.457  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10              8192   100000          3  avgt    5       1.116 ±      0.797  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10             16384       32          2  avgt    5       2.124 ±      0.927  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10             16384       32          3  avgt    5       2.060 ±      1.322  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10             16384     1000          2  avgt    5       2.233 ±      1.520  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10             16384     1000          3  avgt    5       2.353 ±      1.766  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10             16384   100000          2  avgt    5       2.189 ±      1.258  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous         10             16384   100000          3  avgt    5       2.063 ±      1.056  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                16       32          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                16       32          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                16     1000          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                16     1000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                16   100000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                16   100000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                32       32          2  avgt    5       0.005 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                32       32          3  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                32     1000          2  avgt    5       0.004 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                32     1000          3  avgt    5       0.004 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                32   100000          2  avgt    5       0.004 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                32   100000          3  avgt    5       0.004 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                64       32          2  avgt    5       0.009 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                64       32          3  avgt    5       0.008 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                64     1000          2  avgt    5       0.009 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                64     1000          3  avgt    5       0.008 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                64   100000          2  avgt    5       0.008 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100                64   100000          3  avgt    5       0.008 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               128       32          2  avgt    5       0.016 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               128       32          3  avgt    5       0.016 ±      0.008  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               128     1000          2  avgt    5       0.017 ±      0.009  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               128     1000          3  avgt    5       0.019 ±      0.020  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               128   100000          2  avgt    5       0.019 ±      0.017  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               128   100000          3  avgt    5       0.020 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               256       32          2  avgt    5       0.036 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               256       32          3  avgt    5       0.036 ±      0.027  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               256     1000          2  avgt    5       0.032 ±      0.019  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               256     1000          3  avgt    5       0.031 ±      0.018  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               256   100000          2  avgt    5       0.030 ±      0.018  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               256   100000          3  avgt    5       0.032 ±      0.020  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               512       32          2  avgt    5       0.063 ±      0.032  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               512       32          3  avgt    5       0.065 ±      0.035  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               512     1000          2  avgt    5       0.064 ±      0.039  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               512     1000          3  avgt    5       0.068 ±      0.041  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               512   100000          2  avgt    5       0.076 ±      0.083  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100               512   100000          3  avgt    5       0.070 ±      0.049  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              1024       32          2  avgt    5       0.135 ±      0.090  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              1024       32          3  avgt    5       0.126 ±      0.073  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              1024     1000          2  avgt    5       0.126 ±      0.071  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              1024     1000          3  avgt    5       0.124 ±      0.077  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              1024   100000          2  avgt    5       0.145 ±      0.158  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              1024   100000          3  avgt    5       0.149 ±      0.158  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              2048       32          2  avgt    5       0.292 ±      0.211  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              2048       32          3  avgt    5       0.287 ±      0.209  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              2048     1000          2  avgt    5       0.315 ±      0.286  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              2048     1000          3  avgt    5       0.276 ±      0.193  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              2048   100000          2  avgt    5       0.282 ±      0.256  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              2048   100000          3  avgt    5       0.274 ±      0.182  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              4096       32          2  avgt    5       0.472 ±      0.249  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              4096       32          3  avgt    5       0.499 ±      0.371  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              4096     1000          2  avgt    5       0.505 ±      0.286  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              4096     1000          3  avgt    5       0.496 ±      0.215  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              4096   100000          2  avgt    5       0.569 ±      0.544  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              4096   100000          3  avgt    5       0.608 ±      0.795  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              8192       32          2  avgt    5       1.133 ±      0.858  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              8192       32          3  avgt    5       1.204 ±      0.914  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              8192     1000          2  avgt    5       1.294 ±      1.266  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              8192     1000          3  avgt    5       1.176 ±      0.696  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              8192   100000          2  avgt    5       1.158 ±      1.074  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100              8192   100000          3  avgt    5       1.086 ±      0.702  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100             16384       32          2  avgt    5       1.996 ±      0.970  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100             16384       32          3  avgt    5       1.906 ±      1.073  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100             16384     1000          2  avgt    5       1.961 ±      1.221  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100             16384     1000          3  avgt    5       2.044 ±      0.969  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100             16384   100000          2  avgt    5       2.128 ±      1.447  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorAndCommitBenchmarkContinuous        100             16384   100000          3  avgt    5       2.327 ±      2.537  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                16       32          2  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                16       32          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                16     1000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                16     1000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                16   100000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                16   100000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                32       32          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                32       32          3  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                32     1000          2  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                32     1000          3  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                32   100000          2  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                32   100000          3  avgt    5       0.004 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                64       32          2  avgt    5       0.007 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                64       32          3  avgt    5       0.008 ±      0.008  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                64     1000          2  avgt    5       0.007 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                64     1000          3  avgt    5       0.007 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                64   100000          2  avgt    5       0.007 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10                64   100000          3  avgt    5       0.007 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               128       32          2  avgt    5       0.014 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               128       32          3  avgt    5       0.015 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               128     1000          2  avgt    5       0.015 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               128     1000          3  avgt    5       0.014 ±      0.012  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               128   100000          2  avgt    5       0.013 ±      0.012  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               128   100000          3  avgt    5       0.013 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               256       32          2  avgt    5       0.026 ±      0.029  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               256       32          3  avgt    5       0.027 ±      0.029  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               256     1000          2  avgt    5       0.027 ±      0.033  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               256     1000          3  avgt    5       0.026 ±      0.032  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               256   100000          2  avgt    5       0.027 ±      0.025  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               256   100000          3  avgt    5       0.028 ±      0.025  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               512       32          2  avgt    5       0.054 ±      0.047  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               512       32          3  avgt    5       0.056 ±      0.052  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               512     1000          2  avgt    5       0.053 ±      0.053  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               512     1000          3  avgt    5       0.053 ±      0.056  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               512   100000          2  avgt    5       0.056 ±      0.066  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10               512   100000          3  avgt    5       0.052 ±      0.049  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              1024       32          2  avgt    5       0.109 ±      0.114  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              1024       32          3  avgt    5       0.105 ±      0.101  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              1024     1000          2  avgt    5       0.113 ±      0.116  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              1024     1000          3  avgt    5       0.111 ±      0.130  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              1024   100000          2  avgt    5       0.101 ±      0.096  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              1024   100000          3  avgt    5       0.112 ±      0.111  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              2048       32          2  avgt    5       0.222 ±      0.212  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              2048       32          3  avgt    5       0.217 ±      0.196  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              2048     1000          2  avgt    5       0.217 ±      0.242  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              2048     1000          3  avgt    5       0.208 ±      0.193  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              2048   100000          2  avgt    5       0.223 ±      0.206  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              2048   100000          3  avgt    5       0.216 ±      0.171  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              4096       32          2  avgt    5       0.414 ±      0.347  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              4096       32          3  avgt    5       0.422 ±      0.421  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              4096     1000          2  avgt    5       0.424 ±      0.416  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              4096     1000          3  avgt    5       0.408 ±      0.440  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              4096   100000          2  avgt    5       0.437 ±      0.423  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              4096   100000          3  avgt    5       0.400 ±      0.376  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              8192       32          2  avgt    5       0.848 ±      0.764  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              8192       32          3  avgt    5       0.879 ±      0.811  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              8192     1000          2  avgt    5       0.890 ±      0.811  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              8192     1000          3  avgt    5       0.883 ±      0.690  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              8192   100000          2  avgt    5       0.860 ±      0.751  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10              8192   100000          3  avgt    5       0.831 ±      0.689  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10             16384       32          2  avgt    5       1.691 ±      1.789  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10             16384       32          3  avgt    5       1.669 ±      1.599  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10             16384     1000          2  avgt    5       1.714 ±      1.706  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10             16384     1000          3  avgt    5       1.725 ±      1.434  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10             16384   100000          2  avgt    5       1.818 ±      1.728  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                            10             16384   100000          3  avgt    5       1.800 ±      1.532  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                16       32          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                16       32          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                16     1000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                16     1000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                16   100000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                16   100000          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                32       32          2  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                32       32          3  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                32     1000          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                32     1000          3  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                32   100000          2  avgt    5       0.004 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                32   100000          3  avgt    5       0.004 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                64       32          2  avgt    5       0.007 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                64       32          3  avgt    5       0.007 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                64     1000          2  avgt    5       0.007 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                64     1000          3  avgt    5       0.006 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                64   100000          2  avgt    5       0.007 ±      0.008  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100                64   100000          3  avgt    5       0.007 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               128       32          2  avgt    5       0.013 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               128       32          3  avgt    5       0.013 ±      0.015  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               128     1000          2  avgt    5       0.013 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               128     1000          3  avgt    5       0.014 ±      0.015  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               128   100000          2  avgt    5       0.014 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               128   100000          3  avgt    5       0.014 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               256       32          2  avgt    5       0.026 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               256       32          3  avgt    5       0.027 ±      0.032  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               256     1000          2  avgt    5       0.025 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               256     1000          3  avgt    5       0.027 ±      0.026  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               256   100000          2  avgt    5       0.029 ±      0.031  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               256   100000          3  avgt    5       0.028 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               512       32          2  avgt    5       0.057 ±      0.068  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               512       32          3  avgt    5       0.055 ±      0.046  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               512     1000          2  avgt    5       0.057 ±      0.050  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               512     1000          3  avgt    5       0.055 ±      0.049  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               512   100000          2  avgt    5       0.056 ±      0.057  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100               512   100000          3  avgt    5       0.058 ±      0.062  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              1024       32          2  avgt    5       0.108 ±      0.121  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              1024       32          3  avgt    5       0.109 ±      0.113  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              1024     1000          2  avgt    5       0.103 ±      0.104  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              1024     1000          3  avgt    5       0.110 ±      0.126  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              1024   100000          2  avgt    5       0.106 ±      0.096  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              1024   100000          3  avgt    5       0.113 ±      0.109  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              2048       32          2  avgt    5       0.225 ±      0.271  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              2048       32          3  avgt    5       0.230 ±      0.251  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              2048     1000          2  avgt    5       0.215 ±      0.182  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              2048     1000          3  avgt    5       0.220 ±      0.184  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              2048   100000          2  avgt    5       0.254 ±      0.207  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              2048   100000          3  avgt    5       0.225 ±      0.183  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              4096       32          2  avgt    5       0.440 ±      0.456  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              4096       32          3  avgt    5       0.410 ±      0.430  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              4096     1000          2  avgt    5       0.438 ±      0.454  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              4096     1000          3  avgt    5       0.449 ±      0.501  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              4096   100000          2  avgt    5       0.451 ±      0.387  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              4096   100000          3  avgt    5       0.464 ±      0.464  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              8192       32          2  avgt    5       0.927 ±      0.999  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              8192       32          3  avgt    5       0.863 ±      0.909  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              8192     1000          2  avgt    5       0.846 ±      0.856  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              8192     1000          3  avgt    5       0.859 ±      0.935  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              8192   100000          2  avgt    5       0.893 ±      0.865  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100              8192   100000          3  avgt    5       0.930 ±      0.962  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100             16384       32          2  avgt    5       1.797 ±      1.796  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100             16384       32          3  avgt    5       1.808 ±      1.633  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100             16384     1000          2  avgt    5       1.769 ±      1.540  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100             16384     1000          3  avgt    5       1.725 ±      1.825  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100             16384   100000          2  avgt    5       1.782 ±      1.788  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmark                           100             16384   100000          3  avgt    5       1.682 ±      1.678  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                16       32          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                16       32          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                16     1000          2  avgt    5       0.001 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                16     1000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                16   100000          2  avgt    5       0.001 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                16   100000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                32       32          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                32       32          3  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                32     1000          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                32     1000          3  avgt    5       0.003 ±      0.004  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                32   100000          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                32   100000          3  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                64       32          2  avgt    5       0.006 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                64       32          3  avgt    5       0.006 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                64     1000          2  avgt    5       0.006 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                64     1000          3  avgt    5       0.006 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                64   100000          2  avgt    5       0.006 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10                64   100000          3  avgt    5       0.006 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               128       32          2  avgt    5       0.012 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               128       32          3  avgt    5       0.012 ±      0.012  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               128     1000          2  avgt    5       0.012 ±      0.012  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               128     1000          3  avgt    5       0.012 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               128   100000          2  avgt    5       0.013 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               128   100000          3  avgt    5       0.012 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               256       32          2  avgt    5       0.025 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               256       32          3  avgt    5       0.025 ±      0.022  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               256     1000          2  avgt    5       0.024 ±      0.024  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               256     1000          3  avgt    5       0.025 ±      0.026  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               256   100000          2  avgt    5       0.024 ±      0.023  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               256   100000          3  avgt    5       0.025 ±      0.020  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               512       32          2  avgt    5       0.051 ±      0.057  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               512       32          3  avgt    5       0.052 ±      0.056  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               512     1000          2  avgt    5       0.050 ±      0.041  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               512     1000          3  avgt    5       0.050 ±      0.045  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               512   100000          2  avgt    5       0.048 ±      0.050  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10               512   100000          3  avgt    5       0.049 ±      0.048  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              1024       32          2  avgt    5       0.100 ±      0.081  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              1024       32          3  avgt    5       0.101 ±      0.092  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              1024     1000          2  avgt    5       0.106 ±      0.094  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              1024     1000          3  avgt    5       0.098 ±      0.095  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              1024   100000          2  avgt    5       0.100 ±      0.091  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              1024   100000          3  avgt    5       0.100 ±      0.087  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              2048       32          2  avgt    5       0.201 ±      0.201  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              2048       32          3  avgt    5       0.197 ±      0.194  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              2048     1000          2  avgt    5       0.193 ±      0.202  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              2048     1000          3  avgt    5       0.205 ±      0.195  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              2048   100000          2  avgt    5       0.211 ±      0.168  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              2048   100000          3  avgt    5       0.214 ±      0.198  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              4096       32          2  avgt    5       0.439 ±      0.375  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              4096       32          3  avgt    5       0.397 ±      0.329  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              4096     1000          2  avgt    5       0.401 ±      0.387  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              4096     1000          3  avgt    5       0.405 ±      0.377  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              4096   100000          2  avgt    5       0.390 ±      0.338  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              4096   100000          3  avgt    5       0.388 ±      0.357  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              8192       32          2  avgt    5       0.787 ±      0.824  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              8192       32          3  avgt    5       0.798 ±      0.791  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              8192     1000          2  avgt    5       0.789 ±      0.752  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              8192     1000          3  avgt    5       0.797 ±      0.857  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              8192   100000          2  avgt    5       0.841 ±      0.913  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10              8192   100000          3  avgt    5       0.801 ±      0.724  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10             16384       32          2  avgt    5       1.541 ±      1.410  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10             16384       32          3  avgt    5       1.622 ±      1.699  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10             16384     1000          2  avgt    5       1.594 ±      1.469  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10             16384     1000          3  avgt    5       1.687 ±      1.305  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10             16384   100000          2  avgt    5       1.663 ±      1.385  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                  10             16384   100000          3  avgt    5       1.570 ±      1.339  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                16       32          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                16       32          3  avgt    5       0.002 ±      0.001  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                16     1000          2  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                16     1000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                16   100000          2  avgt    5       0.002 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                16   100000          3  avgt    5       0.002 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                32       32          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                32       32          3  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                32     1000          2  avgt    5       0.003 ±      0.002  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                32     1000          3  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                32   100000          2  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                32   100000          3  avgt    5       0.003 ±      0.003  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                64       32          2  avgt    5       0.006 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                64       32          3  avgt    5       0.006 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                64     1000          2  avgt    5       0.006 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                64     1000          3  avgt    5       0.006 ±      0.007  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                64   100000          2  avgt    5       0.006 ±      0.005  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100                64   100000          3  avgt    5       0.006 ±      0.006  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               128       32          2  avgt    5       0.013 ±      0.015  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               128       32          3  avgt    5       0.013 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               128     1000          2  avgt    5       0.013 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               128     1000          3  avgt    5       0.013 ±      0.014  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               128   100000          2  avgt    5       0.013 ±      0.011  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               128   100000          3  avgt    5       0.013 ±      0.013  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               256       32          2  avgt    5       0.025 ±      0.026  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               256       32          3  avgt    5       0.025 ±      0.023  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               256     1000          2  avgt    5       0.025 ±      0.025  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               256     1000          3  avgt    5       0.026 ±      0.027  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               256   100000          2  avgt    5       0.026 ±      0.028  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               256   100000          3  avgt    5       0.025 ±      0.026  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               512       32          2  avgt    5       0.046 ±      0.047  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               512       32          3  avgt    5       0.050 ±      0.051  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               512     1000          2  avgt    5       0.049 ±      0.049  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               512     1000          3  avgt    5       0.053 ±      0.050  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               512   100000          2  avgt    5       0.056 ±      0.055  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100               512   100000          3  avgt    5       0.050 ±      0.048  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              1024       32          2  avgt    5       0.099 ±      0.091  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              1024       32          3  avgt    5       0.100 ±      0.090  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              1024     1000          2  avgt    5       0.099 ±      0.078  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              1024     1000          3  avgt    5       0.102 ±      0.099  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              1024   100000          2  avgt    5       0.102 ±      0.082  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              1024   100000          3  avgt    5       0.107 ±      0.093  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              2048       32          2  avgt    5       0.200 ±      0.191  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              2048       32          3  avgt    5       0.201 ±      0.200  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              2048     1000          2  avgt    5       0.201 ±      0.183  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              2048     1000          3  avgt    5       0.197 ±      0.186  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              2048   100000          2  avgt    5       0.197 ±      0.175  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              2048   100000          3  avgt    5       0.201 ±      0.155  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              4096       32          2  avgt    5       0.408 ±      0.438  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              4096       32          3  avgt    5       0.400 ±      0.407  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              4096     1000          2  avgt    5       0.409 ±      0.396  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              4096     1000          3  avgt    5       0.420 ±      0.381  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              4096   100000          2  avgt    5       0.418 ±      0.365  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              4096   100000          3  avgt    5       0.453 ±      0.381  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              8192       32          2  avgt    5       0.793 ±      0.818  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              8192       32          3  avgt    5       0.852 ±      0.796  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              8192     1000          2  avgt    5       0.803 ±      0.638  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              8192     1000          3  avgt    5       0.771 ±      0.797  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              8192   100000          2  avgt    5       0.847 ±      0.814  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100              8192   100000          3  avgt    5       0.826 ±      0.737  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100             16384       32          2  avgt    5       1.620 ±      1.693  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100             16384       32          3  avgt    5       1.599 ±      1.595  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100             16384     1000          2  avgt    5       1.652 ±      1.822  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100             16384     1000          3  avgt    5       1.544 ±      1.396  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100             16384   100000          2  avgt    5       1.701 ±      1.636  ms/op
ImmutableGetDiffCursorBenchmark.immutableGetDiffCursorBenchmarkContinuous                 100             16384   100000          3  avgt    5       1.635 ±      1.589  ms/op

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.3.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 18h 15m 54s
13 actionable tasks: 2 executed, 11 up-to-date
