Type-safe dependency accessors is an incubating feature.
> Task :buildSrc:extractPluginRequests UP-TO-DATE
> Task :buildSrc:generatePluginAdapters UP-TO-DATE
> Task :buildSrc:compileJava UP-TO-DATE
> Task :buildSrc:compileGroovy NO-SOURCE
> Task :buildSrc:compileGroovyPlugins UP-TO-DATE
> Task :buildSrc:pluginDescriptors UP-TO-DATE
> Task :buildSrc:processResources UP-TO-DATE
> Task :buildSrc:classes UP-TO-DATE
> Task :buildSrc:jar UP-TO-DATE
> Task :buildSrc:assemble UP-TO-DATE
> Task :buildSrc:pluginUnderTestMetadata UP-TO-DATE
> Task :buildSrc:compileTestJava NO-SOURCE
> Task :buildSrc:compileTestGroovy NO-SOURCE
> Task :buildSrc:processTestResources NO-SOURCE
> Task :buildSrc:testClasses UP-TO-DATE
> Task :buildSrc:test NO-SOURCE
> Task :buildSrc:validatePlugins UP-TO-DATE
> Task :buildSrc:check UP-TO-DATE
> Task :buildSrc:build UP-TO-DATE
> Task :refinery-store:compileJava UP-TO-DATE
> Task :refinery-store:processResources NO-SOURCE
> Task :refinery-store:classes UP-TO-DATE
> Task :refinery-store:compileTestJava UP-TO-DATE
> Task :refinery-store:processTestResources NO-SOURCE
> Task :refinery-store:testClasses UP-TO-DATE
> Task :refinery-store:compileJmhJava
> Task :refinery-store:processJmhResources NO-SOURCE
> Task :refinery-store:jmhClasses

> Task :refinery-store:jmh
# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 0.00% complete, ETA 00:44:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 0.38% complete, ETA 00:45:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 0.76% complete, ETA 00:45:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.029 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.028 ms/op
Iteration   5: 0.028 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.029 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.028, 0.029, 0.030), stdev = 0.001
  CI (99.9%): [0.027, 0.031] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 1.14% complete, ETA 00:45:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.029 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.028 ms/op
Iteration   4: 0.029 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.029 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.028, 0.029, 0.030), stdev = 0.001
  CI (99.9%): [0.026, 0.032] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 1.52% complete, ETA 00:45:21
# Fork: 1 of 1
# Warmup Iteration   1: 8.353 ms/op
# Warmup Iteration   2: 7.403 ms/op
# Warmup Iteration   3: 6.841 ms/op
# Warmup Iteration   4: 7.702 ms/op
# Warmup Iteration   5: 7.772 ms/op
Iteration   1: 7.518 ms/op
Iteration   2: 8.986 ms/op
Iteration   3: 8.006 ms/op
Iteration   4: 7.525 ms/op
Iteration   5: 8.965 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  8.200 ±(99.9%) 2.830 ms/op [Average]
  (min, avg, max) = (7.518, 8.200, 8.986), stdev = 0.735
  CI (99.9%): [5.369, 11.030] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 1.89% complete, ETA 00:45:25
# Fork: 1 of 1
# Warmup Iteration   1: 8.205 ms/op
# Warmup Iteration   2: 7.867 ms/op
# Warmup Iteration   3: 7.471 ms/op
# Warmup Iteration   4: 7.057 ms/op
# Warmup Iteration   5: 7.657 ms/op
Iteration   1: 7.903 ms/op
Iteration   2: 7.305 ms/op
Iteration   3: 8.190 ms/op
Iteration   4: 7.945 ms/op
Iteration   5: 7.582 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  7.785 ±(99.9%) 1.327 ms/op [Average]
  (min, avg, max) = (7.305, 7.785, 8.190), stdev = 0.345
  CI (99.9%): [6.458, 9.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 2.27% complete, ETA 00:45:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 2.65% complete, ETA 00:45:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 3.03% complete, ETA 00:45:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.064 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.060 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.058 ms/op
Iteration   1: 0.059 ms/op
Iteration   2: 0.058 ms/op
Iteration   3: 0.060 ms/op
Iteration   4: 0.059 ms/op
Iteration   5: 0.057 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.059 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.057, 0.059, 0.060), stdev = 0.001
  CI (99.9%): [0.055, 0.062] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 3.41% complete, ETA 00:44:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.063 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.060 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.057 ms/op
Iteration   1: 0.058 ms/op
Iteration   2: 0.058 ms/op
Iteration   3: 0.058 ms/op
Iteration   4: 0.059 ms/op
Iteration   5: 0.057 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.058 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.057, 0.058, 0.059), stdev = 0.001
  CI (99.9%): [0.055, 0.061] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 3.79% complete, ETA 00:44:36
# Fork: 1 of 1
# Warmup Iteration   1: 16.270 ms/op
# Warmup Iteration   2: 14.995 ms/op
# Warmup Iteration   3: 14.528 ms/op
# Warmup Iteration   4: 14.813 ms/op
# Warmup Iteration   5: 14.728 ms/op
Iteration   1: 15.244 ms/op
Iteration   2: 15.641 ms/op
Iteration   3: 15.484 ms/op
Iteration   4: 17.394 ms/op
Iteration   5: 15.511 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  15.855 ±(99.9%) 3.360 ms/op [Average]
  (min, avg, max) = (15.244, 15.855, 17.394), stdev = 0.872
  CI (99.9%): [12.495, 19.214] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 4.17% complete, ETA 00:44:31
# Fork: 1 of 1
# Warmup Iteration   1: 16.696 ms/op
# Warmup Iteration   2: 15.893 ms/op
# Warmup Iteration   3: 14.303 ms/op
# Warmup Iteration   4: 15.454 ms/op
# Warmup Iteration   5: 15.167 ms/op
Iteration   1: 17.168 ms/op
Iteration   2: 16.628 ms/op
Iteration   3: 17.171 ms/op
Iteration   4: 15.781 ms/op
Iteration   5: 18.173 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  16.984 ±(99.9%) 3.366 ms/op [Average]
  (min, avg, max) = (15.781, 16.984, 18.173), stdev = 0.874
  CI (99.9%): [13.618, 20.350] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 4.55% complete, ETA 00:44:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 4.92% complete, ETA 00:44:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 5.30% complete, ETA 00:44:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.110 ms/op
# Warmup Iteration   2: 0.102 ms/op
# Warmup Iteration   3: 0.100 ms/op
# Warmup Iteration   4: 0.103 ms/op
# Warmup Iteration   5: 0.100 ms/op
Iteration   1: 0.101 ms/op
Iteration   2: 0.100 ms/op
Iteration   3: 0.100 ms/op
Iteration   4: 0.100 ms/op
Iteration   5: 0.103 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.101 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.100, 0.101, 0.103), stdev = 0.001
  CI (99.9%): [0.096, 0.105] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 5.68% complete, ETA 00:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.114 ms/op
# Warmup Iteration   2: 0.102 ms/op
# Warmup Iteration   3: 0.100 ms/op
# Warmup Iteration   4: 0.101 ms/op
# Warmup Iteration   5: 0.103 ms/op
Iteration   1: 0.101 ms/op
Iteration   2: 0.100 ms/op
Iteration   3: 0.100 ms/op
Iteration   4: 0.100 ms/op
Iteration   5: 0.102 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.101 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.100, 0.101, 0.102), stdev = 0.001
  CI (99.9%): [0.097, 0.104] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 6.06% complete, ETA 00:43:35
# Fork: 1 of 1
# Warmup Iteration   1: 28.402 ms/op
# Warmup Iteration   2: 26.524 ms/op
# Warmup Iteration   3: 25.449 ms/op
# Warmup Iteration   4: 26.291 ms/op
# Warmup Iteration   5: 29.012 ms/op
Iteration   1: 30.845 ms/op
Iteration   2: 27.816 ms/op
Iteration   3: 26.047 ms/op
Iteration   4: 26.298 ms/op
Iteration   5: 28.025 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  27.806 ±(99.9%) 7.370 ms/op [Average]
  (min, avg, max) = (26.047, 27.806, 30.845), stdev = 1.914
  CI (99.9%): [20.437, 35.176] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 6.44% complete, ETA 00:43:28
# Fork: 1 of 1
# Warmup Iteration   1: 26.685 ms/op
# Warmup Iteration   2: 30.786 ms/op
# Warmup Iteration   3: 30.768 ms/op
# Warmup Iteration   4: 25.052 ms/op
# Warmup Iteration   5: 26.916 ms/op
Iteration   1: 29.649 ms/op
Iteration   2: 26.530 ms/op
Iteration   3: 36.167 ms/op
Iteration   4: 32.852 ms/op
Iteration   5: 30.223 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  31.084 ±(99.9%) 13.951 ms/op [Average]
  (min, avg, max) = (26.530, 31.084, 36.167), stdev = 3.623
  CI (99.9%): [17.133, 45.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 6.82% complete, ETA 00:43:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.006 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 7.20% complete, ETA 00:43:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.006 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 7.58% complete, ETA 00:42:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.205 ms/op
# Warmup Iteration   2: 0.189 ms/op
# Warmup Iteration   3: 0.186 ms/op
# Warmup Iteration   4: 0.186 ms/op
# Warmup Iteration   5: 0.191 ms/op
Iteration   1: 0.186 ms/op
Iteration   2: 0.188 ms/op
Iteration   3: 0.186 ms/op
Iteration   4: 0.187 ms/op
Iteration   5: 0.191 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.188 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.186, 0.188, 0.191), stdev = 0.002
  CI (99.9%): [0.179, 0.196] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 7.95% complete, ETA 00:42:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.208 ms/op
# Warmup Iteration   2: 0.188 ms/op
# Warmup Iteration   3: 0.191 ms/op
# Warmup Iteration   4: 0.191 ms/op
# Warmup Iteration   5: 0.192 ms/op
Iteration   1: 0.186 ms/op
Iteration   2: 0.187 ms/op
Iteration   3: 0.187 ms/op
Iteration   4: 0.185 ms/op
Iteration   5: 0.193 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.187 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.185, 0.187, 0.193), stdev = 0.003
  CI (99.9%): [0.175, 0.199] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 8.33% complete, ETA 00:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 52.377 ms/op
# Warmup Iteration   2: 47.782 ms/op
# Warmup Iteration   3: 49.171 ms/op
# Warmup Iteration   4: 48.218 ms/op
# Warmup Iteration   5: 54.742 ms/op
Iteration   1: 52.094 ms/op
Iteration   2: 55.757 ms/op
Iteration   3: 48.554 ms/op
Iteration   4: 56.343 ms/op
Iteration   5: 56.560 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  53.862 ±(99.9%) 13.384 ms/op [Average]
  (min, avg, max) = (48.554, 53.862, 56.560), stdev = 3.476
  CI (99.9%): [40.477, 67.246] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 8.71% complete, ETA 00:42:25
# Fork: 1 of 1
# Warmup Iteration   1: 52.790 ms/op
# Warmup Iteration   2: 48.383 ms/op
# Warmup Iteration   3: 56.244 ms/op
# Warmup Iteration   4: 50.878 ms/op
# Warmup Iteration   5: 57.891 ms/op
Iteration   1: 73.095 ms/op
Iteration   2: 89.666 ms/op
Iteration   3: 103.162 ms/op
Iteration   4: 79.841 ms/op
Iteration   5: 65.509 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  82.255 ±(99.9%) 56.533 ms/op [Average]
  (min, avg, max) = (65.509, 82.255, 103.162), stdev = 14.682
  CI (99.9%): [25.721, 138.788] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 9.09% complete, ETA 00:42:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.014 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.011, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 9.47% complete, ETA 00:42:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.015 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.013 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.012, 0.013, 0.014), stdev = 0.001
  CI (99.9%): [0.011, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 9.85% complete, ETA 00:41:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.414 ms/op
# Warmup Iteration   2: 0.402 ms/op
# Warmup Iteration   3: 0.379 ms/op
# Warmup Iteration   4: 0.374 ms/op
# Warmup Iteration   5: 0.375 ms/op
Iteration   1: 0.377 ms/op
Iteration   2: 0.396 ms/op
Iteration   3: 0.397 ms/op
Iteration   4: 0.374 ms/op
Iteration   5: 0.374 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.383 ±(99.9%) 0.046 ms/op [Average]
  (min, avg, max) = (0.374, 0.383, 0.397), stdev = 0.012
  CI (99.9%): [0.337, 0.430] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 10.23% complete, ETA 00:41:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.421 ms/op
# Warmup Iteration   2: 0.383 ms/op
# Warmup Iteration   3: 0.393 ms/op
# Warmup Iteration   4: 0.372 ms/op
# Warmup Iteration   5: 0.368 ms/op
Iteration   1: 0.378 ms/op
Iteration   2: 0.383 ms/op
Iteration   3: 0.405 ms/op
Iteration   4: 0.390 ms/op
Iteration   5: 0.397 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.391 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (0.378, 0.391, 0.405), stdev = 0.011
  CI (99.9%): [0.349, 0.432] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 10.61% complete, ETA 00:41:34
# Fork: 1 of 1
# Warmup Iteration   1: 113.439 ms/op
# Warmup Iteration   2: 93.778 ms/op
# Warmup Iteration   3: 110.937 ms/op
# Warmup Iteration   4: 104.007 ms/op
# Warmup Iteration   5: 105.386 ms/op
Iteration   1: 101.663 ms/op
Iteration   2: 108.954 ms/op
Iteration   3: 95.881 ms/op
Iteration   4: 100.539 ms/op
Iteration   5: 97.049 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  100.817 ±(99.9%) 19.783 ms/op [Average]
  (min, avg, max) = (95.881, 100.817, 108.954), stdev = 5.138
  CI (99.9%): [81.034, 120.600] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 10.98% complete, ETA 00:41:29
# Fork: 1 of 1
# Warmup Iteration   1: 113.815 ms/op
# Warmup Iteration   2: 97.096 ms/op
# Warmup Iteration   3: 121.145 ms/op
# Warmup Iteration   4: 118.127 ms/op
# Warmup Iteration   5: 115.476 ms/op
Iteration   1: 116.914 ms/op
Iteration   2: 119.448 ms/op
Iteration   3: 118.197 ms/op
Iteration   4: 107.641 ms/op
Iteration   5: 120.171 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  116.474 ±(99.9%) 19.606 ms/op [Average]
  (min, avg, max) = (107.641, 116.474, 120.171), stdev = 5.092
  CI (99.9%): [96.868, 136.080] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 11.36% complete, ETA 00:41:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.027 ms/op
# Warmup Iteration   2: 0.025 ms/op
# Warmup Iteration   3: 0.025 ms/op
# Warmup Iteration   4: 0.025 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.025 ms/op
Iteration   2: 0.025 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.025 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.025 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.025, 0.025, 0.027), stdev = 0.001
  CI (99.9%): [0.022, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 11.74% complete, ETA 00:41:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.030 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.026 ms/op
# Warmup Iteration   4: 0.025 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.025 ms/op
Iteration   3: 0.025 ms/op
Iteration   4: 0.025 ms/op
Iteration   5: 0.025 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.025 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.025, 0.025, 0.026), stdev = 0.001
  CI (99.9%): [0.024, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 12.12% complete, ETA 00:40:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.851 ms/op
# Warmup Iteration   2: 0.762 ms/op
# Warmup Iteration   3: 0.752 ms/op
# Warmup Iteration   4: 0.743 ms/op
# Warmup Iteration   5: 0.751 ms/op
Iteration   1: 0.799 ms/op
Iteration   2: 0.759 ms/op
Iteration   3: 0.748 ms/op
Iteration   4: 0.744 ms/op
Iteration   5: 0.749 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.760 ±(99.9%) 0.087 ms/op [Average]
  (min, avg, max) = (0.744, 0.760, 0.799), stdev = 0.023
  CI (99.9%): [0.673, 0.847] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 12.50% complete, ETA 00:40:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.887 ms/op
# Warmup Iteration   2: 0.756 ms/op
# Warmup Iteration   3: 0.745 ms/op
# Warmup Iteration   4: 0.751 ms/op
# Warmup Iteration   5: 0.746 ms/op
Iteration   1: 0.784 ms/op
Iteration   2: 0.763 ms/op
Iteration   3: 0.744 ms/op
Iteration   4: 0.744 ms/op
Iteration   5: 0.744 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.756 ±(99.9%) 0.068 ms/op [Average]
  (min, avg, max) = (0.744, 0.756, 0.784), stdev = 0.018
  CI (99.9%): [0.688, 0.824] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 12.88% complete, ETA 00:40:36
# Fork: 1 of 1
# Warmup Iteration   1: 237.930 ms/op
# Warmup Iteration   2: 224.964 ms/op
# Warmup Iteration   3: 194.418 ms/op
# Warmup Iteration   4: 211.875 ms/op
# Warmup Iteration   5: 217.687 ms/op
Iteration   1: 231.390 ms/op
Iteration   2: 211.263 ms/op
Iteration   3: 201.353 ms/op
Iteration   4: 207.696 ms/op
Iteration   5: 204.464 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  211.233 ±(99.9%) 45.653 ms/op [Average]
  (min, avg, max) = (201.353, 211.233, 231.390), stdev = 11.856
  CI (99.9%): [165.580, 256.886] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 13.26% complete, ETA 00:40:34
# Fork: 1 of 1
# Warmup Iteration   1: 262.721 ms/op
# Warmup Iteration   2: 214.289 ms/op
# Warmup Iteration   3: 261.791 ms/op
# Warmup Iteration   4: 252.465 ms/op
# Warmup Iteration   5: 248.350 ms/op
Iteration   1: 250.553 ms/op
Iteration   2: 245.785 ms/op
Iteration   3: 230.343 ms/op
Iteration   4: 255.605 ms/op
Iteration   5: 245.075 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  245.472 ±(99.9%) 36.411 ms/op [Average]
  (min, avg, max) = (230.343, 245.472, 255.605), stdev = 9.456
  CI (99.9%): [209.062, 281.883] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 13.64% complete, ETA 00:40:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.058 ms/op
# Warmup Iteration   2: 0.050 ms/op
# Warmup Iteration   3: 0.049 ms/op
# Warmup Iteration   4: 0.048 ms/op
# Warmup Iteration   5: 0.048 ms/op
Iteration   1: 0.049 ms/op
Iteration   2: 0.052 ms/op
Iteration   3: 0.048 ms/op
Iteration   4: 0.048 ms/op
Iteration   5: 0.049 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.049 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.048, 0.049, 0.052), stdev = 0.002
  CI (99.9%): [0.043, 0.055] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 14.02% complete, ETA 00:40:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.052 ms/op
# Warmup Iteration   2: 0.051 ms/op
# Warmup Iteration   3: 0.051 ms/op
# Warmup Iteration   4: 0.048 ms/op
# Warmup Iteration   5: 0.048 ms/op
Iteration   1: 0.048 ms/op
Iteration   2: 0.050 ms/op
Iteration   3: 0.048 ms/op
Iteration   4: 0.047 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.048 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.047, 0.048, 0.050), stdev = 0.001
  CI (99.9%): [0.044, 0.052] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 14.39% complete, ETA 00:40:08
# Fork: 1 of 1
# Warmup Iteration   1: 1.680 ms/op
# Warmup Iteration   2: 1.560 ms/op
# Warmup Iteration   3: 1.490 ms/op
# Warmup Iteration   4: 1.480 ms/op
# Warmup Iteration   5: 1.490 ms/op
Iteration   1: 1.483 ms/op
Iteration   2: 1.503 ms/op
Iteration   3: 1.508 ms/op
Iteration   4: 1.477 ms/op
Iteration   5: 1.488 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1.492 ±(99.9%) 0.051 ms/op [Average]
  (min, avg, max) = (1.477, 1.492, 1.508), stdev = 0.013
  CI (99.9%): [1.441, 1.543] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 14.77% complete, ETA 00:39:56
# Fork: 1 of 1
# Warmup Iteration   1: 1.691 ms/op
# Warmup Iteration   2: 1.503 ms/op
# Warmup Iteration   3: 1.527 ms/op
# Warmup Iteration   4: 1.479 ms/op
# Warmup Iteration   5: 1.480 ms/op
Iteration   1: 1.471 ms/op
Iteration   2: 1.498 ms/op
Iteration   3: 1.533 ms/op
Iteration   4: 1.478 ms/op
Iteration   5: 1.509 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1.498 ±(99.9%) 0.096 ms/op [Average]
  (min, avg, max) = (1.471, 1.498, 1.533), stdev = 0.025
  CI (99.9%): [1.402, 1.594] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 15.15% complete, ETA 00:39:44
# Fork: 1 of 1
# Warmup Iteration   1: 431.729 ms/op
# Warmup Iteration   2: 473.965 ms/op
# Warmup Iteration   3: 438.899 ms/op
# Warmup Iteration   4: 419.942 ms/op
# Warmup Iteration   5: 411.081 ms/op
Iteration   1: 450.267 ms/op
Iteration   2: 435.213 ms/op
Iteration   3: 410.271 ms/op
Iteration   4: 473.490 ms/op
Iteration   5: 446.341 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  443.117 ±(99.9%) 88.761 ms/op [Average]
  (min, avg, max) = (410.271, 443.117, 473.490), stdev = 23.051
  CI (99.9%): [354.355, 531.878] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 15.53% complete, ETA 00:39:52
# Fork: 1 of 1
# Warmup Iteration   1: 461.394 ms/op
# Warmup Iteration   2: 457.355 ms/op
# Warmup Iteration   3: 510.142 ms/op
# Warmup Iteration   4: 519.560 ms/op
# Warmup Iteration   5: 479.283 ms/op
Iteration   1: 471.467 ms/op
Iteration   2: 469.071 ms/op
Iteration   3: 463.740 ms/op
Iteration   4: 475.709 ms/op
Iteration   5: 456.679 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  467.333 ±(99.9%) 28.341 ms/op [Average]
  (min, avg, max) = (456.679, 467.333, 475.709), stdev = 7.360
  CI (99.9%): [438.993, 495.674] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 15.91% complete, ETA 00:39:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.114 ms/op
# Warmup Iteration   2: 0.097 ms/op
# Warmup Iteration   3: 0.096 ms/op
# Warmup Iteration   4: 0.100 ms/op
# Warmup Iteration   5: 0.097 ms/op
Iteration   1: 0.096 ms/op
Iteration   2: 0.096 ms/op
Iteration   3: 0.096 ms/op
Iteration   4: 0.101 ms/op
Iteration   5: 0.096 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.097 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.096, 0.097, 0.101), stdev = 0.002
  CI (99.9%): [0.088, 0.107] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 16.29% complete, ETA 00:39:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.109 ms/op
# Warmup Iteration   2: 0.098 ms/op
# Warmup Iteration   3: 0.098 ms/op
# Warmup Iteration   4: 0.101 ms/op
# Warmup Iteration   5: 0.097 ms/op
Iteration   1: 0.098 ms/op
Iteration   2: 0.097 ms/op
Iteration   3: 0.098 ms/op
Iteration   4: 0.102 ms/op
Iteration   5: 0.098 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.098 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.097, 0.098, 0.102), stdev = 0.002
  CI (99.9%): [0.090, 0.106] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 16.67% complete, ETA 00:39:33
# Fork: 1 of 1
# Warmup Iteration   1: 3.435 ms/op
# Warmup Iteration   2: 2.937 ms/op
# Warmup Iteration   3: 2.900 ms/op
# Warmup Iteration   4: 3.045 ms/op
# Warmup Iteration   5: 2.910 ms/op
Iteration   1: 2.936 ms/op
Iteration   2: 2.890 ms/op
Iteration   3: 2.942 ms/op
Iteration   4: 2.993 ms/op
Iteration   5: 2.947 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2.942 ±(99.9%) 0.141 ms/op [Average]
  (min, avg, max) = (2.890, 2.942, 2.993), stdev = 0.037
  CI (99.9%): [2.801, 3.083] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 17.05% complete, ETA 00:39:20
# Fork: 1 of 1
# Warmup Iteration   1: 3.300 ms/op
# Warmup Iteration   2: 3.087 ms/op
# Warmup Iteration   3: 2.921 ms/op
# Warmup Iteration   4: 3.046 ms/op
# Warmup Iteration   5: 2.967 ms/op
Iteration   1: 2.916 ms/op
Iteration   2: 2.929 ms/op
Iteration   3: 2.964 ms/op
Iteration   4: 2.964 ms/op
Iteration   5: 3.052 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2.965 ±(99.9%) 0.204 ms/op [Average]
  (min, avg, max) = (2.916, 2.965, 3.052), stdev = 0.053
  CI (99.9%): [2.761, 3.169] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 17.42% complete, ETA 00:39:08
# Fork: 1 of 1
# Warmup Iteration   1: 906.003 ms/op
# Warmup Iteration   2: 867.929 ms/op
# Warmup Iteration   3: 886.088 ms/op
# Warmup Iteration   4: 1301.580 ms/op
# Warmup Iteration   5: 885.983 ms/op
Iteration   1: 764.468 ms/op
Iteration   2: 1346.068 ms/op
Iteration   3: 881.994 ms/op
Iteration   4: 1062.356 ms/op
Iteration   5: 1122.171 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1035.411 ±(99.9%) 864.699 ms/op [Average]
  (min, avg, max) = (764.468, 1035.411, 1346.068), stdev = 224.559
  CI (99.9%): [170.713, 1900.110] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 17.80% complete, ETA 00:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 922.172 ms/op
# Warmup Iteration   2: 1231.085 ms/op
# Warmup Iteration   3: 1011.519 ms/op
# Warmup Iteration   4: 1038.024 ms/op
# Warmup Iteration   5: 1003.909 ms/op
Iteration   1: 1069.888 ms/op
Iteration   2: 1169.769 ms/op
Iteration   3: 849.102 ms/op
Iteration   4: 1814.720 ms/op
Iteration   5: 1154.005 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1211.496 ±(99.9%) 1388.780 ms/op [Average]
  (min, avg, max) = (849.102, 1211.496, 1814.720), stdev = 360.662
  CI (99.9%): [? 0, 2600.277] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 18.18% complete, ETA 00:39:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.238 ms/op
# Warmup Iteration   2: 0.197 ms/op
# Warmup Iteration   3: 0.195 ms/op
# Warmup Iteration   4: 0.194 ms/op
# Warmup Iteration   5: 0.207 ms/op
Iteration   1: 0.195 ms/op
Iteration   2: 0.194 ms/op
Iteration   3: 0.197 ms/op
Iteration   4: 0.196 ms/op
Iteration   5: 0.204 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.197 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.194, 0.197, 0.204), stdev = 0.004
  CI (99.9%): [0.182, 0.213] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 18.56% complete, ETA 00:39:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.211 ms/op
# Warmup Iteration   2: 0.193 ms/op
# Warmup Iteration   3: 0.194 ms/op
# Warmup Iteration   4: 0.191 ms/op
# Warmup Iteration   5: 0.200 ms/op
Iteration   1: 0.192 ms/op
Iteration   2: 0.191 ms/op
Iteration   3: 0.192 ms/op
Iteration   4: 0.191 ms/op
Iteration   5: 0.199 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.193 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.191, 0.193, 0.199), stdev = 0.003
  CI (99.9%): [0.180, 0.206] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 18.94% complete, ETA 00:39:15
# Fork: 1 of 1
# Warmup Iteration   1: 6.802 ms/op
# Warmup Iteration   2: 5.955 ms/op
# Warmup Iteration   3: 5.924 ms/op
# Warmup Iteration   4: 5.908 ms/op
# Warmup Iteration   5: 6.160 ms/op
Iteration   1: 5.961 ms/op
Iteration   2: 5.984 ms/op
Iteration   3: 5.827 ms/op
Iteration   4: 5.949 ms/op
Iteration   5: 5.903 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  5.925 ±(99.9%) 0.240 ms/op [Average]
  (min, avg, max) = (5.827, 5.925, 5.984), stdev = 0.062
  CI (99.9%): [5.685, 6.164] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 19.32% complete, ETA 00:39:01
# Fork: 1 of 1
# Warmup Iteration   1: 6.863 ms/op
# Warmup Iteration   2: 5.937 ms/op
# Warmup Iteration   3: 5.943 ms/op
# Warmup Iteration   4: 5.979 ms/op
# Warmup Iteration   5: 6.027 ms/op
Iteration   1: 6.036 ms/op
Iteration   2: 6.012 ms/op
Iteration   3: 5.909 ms/op
Iteration   4: 5.926 ms/op
Iteration   5: 5.868 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  5.950 ±(99.9%) 0.275 ms/op [Average]
  (min, avg, max) = (5.868, 5.950, 6.036), stdev = 0.071
  CI (99.9%): [5.676, 6.225] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 19.70% complete, ETA 00:38:48
# Fork: 1 of 1
# Warmup Iteration   1: 1909.061 ms/op
# Warmup Iteration   2: 2168.068 ms/op
# Warmup Iteration   3: 1894.477 ms/op
# Warmup Iteration   4: 1703.411 ms/op
# Warmup Iteration   5: 1805.563 ms/op
Iteration   1: 2203.488 ms/op
Iteration   2: 2543.765 ms/op
Iteration   3: 2066.129 ms/op
Iteration   4: 2609.592 ms/op
Iteration   5: 2054.318 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2295.458 ±(99.9%) 1017.938 ms/op [Average]
  (min, avg, max) = (2054.318, 2295.458, 2609.592), stdev = 264.355
  CI (99.9%): [1277.520, 3313.396] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 20.08% complete, ETA 00:39:24
# Fork: 1 of 1
# Warmup Iteration   1: 2110.084 ms/op
# Warmup Iteration   2: 2581.303 ms/op
# Warmup Iteration   3: 2368.458 ms/op
# Warmup Iteration   4: 2164.925 ms/op
# Warmup Iteration   5: 2114.123 ms/op
Iteration   1: 2434.925 ms/op
Iteration   2: 2069.989 ms/op
Iteration   3: 2077.394 ms/op
Iteration   4: 2136.720 ms/op
Iteration   5: 2162.246 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2176.255 ±(99.9%) 576.747 ms/op [Average]
  (min, avg, max) = (2069.989, 2176.255, 2434.925), stdev = 149.779
  CI (99.9%): [1599.508, 2753.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 20.45% complete, ETA 00:40:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.466 ms/op
# Warmup Iteration   2: 0.388 ms/op
# Warmup Iteration   3: 0.381 ms/op
# Warmup Iteration   4: 0.385 ms/op
# Warmup Iteration   5: 0.384 ms/op
Iteration   1: 0.406 ms/op
Iteration   2: 0.386 ms/op
Iteration   3: 0.386 ms/op
Iteration   4: 0.387 ms/op
Iteration   5: 0.383 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.390 ±(99.9%) 0.035 ms/op [Average]
  (min, avg, max) = (0.383, 0.390, 0.406), stdev = 0.009
  CI (99.9%): [0.355, 0.424] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 20.83% complete, ETA 00:39:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.474 ms/op
# Warmup Iteration   2: 0.417 ms/op
# Warmup Iteration   3: 0.420 ms/op
# Warmup Iteration   4: 0.420 ms/op
# Warmup Iteration   5: 0.412 ms/op
Iteration   1: 0.425 ms/op
Iteration   2: 0.418 ms/op
Iteration   3: 0.412 ms/op
Iteration   4: 0.421 ms/op
Iteration   5: 0.429 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.421 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (0.412, 0.421, 0.429), stdev = 0.006
  CI (99.9%): [0.396, 0.446] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 21.21% complete, ETA 00:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 19.161 ms/op
# Warmup Iteration   2: 12.760 ms/op
# Warmup Iteration   3: 11.827 ms/op
# Warmup Iteration   4: 11.753 ms/op
# Warmup Iteration   5: 11.727 ms/op
Iteration   1: 12.000 ms/op
Iteration   2: 12.055 ms/op
Iteration   3: 11.747 ms/op
Iteration   4: 11.788 ms/op
Iteration   5: 11.967 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  11.911 ±(99.9%) 0.523 ms/op [Average]
  (min, avg, max) = (11.747, 11.911, 12.055), stdev = 0.136
  CI (99.9%): [11.389, 12.434] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 21.59% complete, ETA 00:39:17
# Fork: 1 of 1
# Warmup Iteration   1: 17.342 ms/op
# Warmup Iteration   2: 12.081 ms/op
# Warmup Iteration   3: 11.589 ms/op
# Warmup Iteration   4: 11.645 ms/op
# Warmup Iteration   5: 11.673 ms/op
Iteration   1: 11.501 ms/op
Iteration   2: 12.219 ms/op
Iteration   3: 11.717 ms/op
Iteration   4: 11.706 ms/op
Iteration   5: 11.669 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  11.762 ±(99.9%) 1.038 ms/op [Average]
  (min, avg, max) = (11.501, 11.762, 12.219), stdev = 0.269
  CI (99.9%): [10.725, 12.800] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 21.97% complete, ETA 00:39:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 22.35% complete, ETA 00:38:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 22.73% complete, ETA 00:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 1.020 ms/op
# Warmup Iteration   2: 0.847 ms/op
# Warmup Iteration   3: 0.808 ms/op
# Warmup Iteration   4: 0.814 ms/op
# Warmup Iteration   5: 0.839 ms/op
Iteration   1: 0.826 ms/op
Iteration   2: 0.813 ms/op
Iteration   3: 0.810 ms/op
Iteration   4: 0.812 ms/op
Iteration   5: 0.809 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.814 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.809, 0.814, 0.826), stdev = 0.007
  CI (99.9%): [0.787, 0.840] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 23.11% complete, ETA 00:38:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.897 ms/op
# Warmup Iteration   2: 0.804 ms/op
# Warmup Iteration   3: 0.815 ms/op
# Warmup Iteration   4: 0.809 ms/op
# Warmup Iteration   5: 0.802 ms/op
Iteration   1: 0.846 ms/op
Iteration   2: 0.809 ms/op
Iteration   3: 0.793 ms/op
Iteration   4: 0.798 ms/op
Iteration   5: 0.801 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.809 ±(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (0.793, 0.809, 0.846), stdev = 0.021
  CI (99.9%): [0.728, 0.891] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 23.48% complete, ETA 00:38:25
# Fork: 1 of 1
# Warmup Iteration   1: 39.234 ms/op
# Warmup Iteration   2: 24.238 ms/op
# Warmup Iteration   3: 24.073 ms/op
# Warmup Iteration   4: 24.121 ms/op
# Warmup Iteration   5: 24.163 ms/op
Iteration   1: 25.189 ms/op
Iteration   2: 24.125 ms/op
Iteration   3: 24.355 ms/op
Iteration   4: 24.105 ms/op
Iteration   5: 24.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  24.357 ±(99.9%) 1.855 ms/op [Average]
  (min, avg, max) = (24.013, 24.357, 25.189), stdev = 0.482
  CI (99.9%): [22.502, 26.212] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 23.86% complete, ETA 00:38:11
# Fork: 1 of 1
# Warmup Iteration   1: 38.259 ms/op
# Warmup Iteration   2: 23.343 ms/op
# Warmup Iteration   3: 23.604 ms/op
# Warmup Iteration   4: 23.175 ms/op
# Warmup Iteration   5: 23.328 ms/op
Iteration   1: 24.665 ms/op
Iteration   2: 23.390 ms/op
Iteration   3: 23.331 ms/op
Iteration   4: 24.094 ms/op
Iteration   5: 23.368 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  23.769 ±(99.9%) 2.282 ms/op [Average]
  (min, avg, max) = (23.331, 23.769, 24.665), stdev = 0.593
  CI (99.9%): [21.488, 26.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 24.24% complete, ETA 00:37:57
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 24.62% complete, ETA 00:37:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 25.00% complete, ETA 00:37:43
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 25.38% complete, ETA 00:37:28
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 25.76% complete, ETA 00:37:14
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 26.14% complete, ETA 00:37:00
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 26.52% complete, ETA 00:36:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 26.89% complete, ETA 00:36:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 27.27% complete, ETA 00:36:19
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 27.65% complete, ETA 00:36:05
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 28.03% complete, ETA 00:35:51
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 28.41% complete, ETA 00:35:38
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 28.79% complete, ETA 00:35:24
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 29.17% complete, ETA 00:35:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 29.55% complete, ETA 00:34:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 29.92% complete, ETA 00:34:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 30.30% complete, ETA 00:34:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 30.68% complete, ETA 00:34:18
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 31.06% complete, ETA 00:34:05
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 31.44% complete, ETA 00:33:53
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 31.82% complete, ETA 00:33:40
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 32.20% complete, ETA 00:33:27
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 32.58% complete, ETA 00:33:14
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 32.95% complete, ETA 00:33:01
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 33.33% complete, ETA 00:32:49
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 33.71% complete, ETA 00:32:36
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 34.09% complete, ETA 00:32:24
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 34.47% complete, ETA 00:32:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 34.85% complete, ETA 00:31:59
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 35.23% complete, ETA 00:31:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 35.61% complete, ETA 00:31:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 35.98% complete, ETA 00:31:21
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 36.36% complete, ETA 00:31:09
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 36.74% complete, ETA 00:30:57
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 37.12% complete, ETA 00:30:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 37.50% complete, ETA 00:30:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 37.88% complete, ETA 00:30:20
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 38.26% complete, ETA 00:30:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 38.64% complete, ETA 00:29:56
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 39.02% complete, ETA 00:29:44
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 39.39% complete, ETA 00:29:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 39.77% complete, ETA 00:29:20
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 40.15% complete, ETA 00:29:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 40.53% complete, ETA 00:28:56
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 40.91% complete, ETA 00:28:44
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 41.29% complete, ETA 00:28:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 41.67% complete, ETA 00:28:20
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 42.05% complete, ETA 00:28:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 42.42% complete, ETA 00:27:56
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 42.80% complete, ETA 00:27:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 43.18% complete, ETA 00:27:33
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 43.56% complete, ETA 00:27:21
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 43.94% complete, ETA 00:27:09
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 44.32% complete, ETA 00:26:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 44.70% complete, ETA 00:26:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 45.08% complete, ETA 00:26:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 45.45% complete, ETA 00:26:23
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 45.83% complete, ETA 00:26:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 46.21% complete, ETA 00:25:59
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 46.59% complete, ETA 00:25:48
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 46.97% complete, ETA 00:25:36
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 47.35% complete, ETA 00:25:25
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 47.73% complete, ETA 00:25:13
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 48.11% complete, ETA 00:25:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 48.48% complete, ETA 00:24:50
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 48.86% complete, ETA 00:24:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 49.24% complete, ETA 00:24:27
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 49.62% complete, ETA 00:24:16
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 50.00% complete, ETA 00:24:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 50.38% complete, ETA 00:23:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 50.76% complete, ETA 00:23:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 51.14% complete, ETA 00:23:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 51.52% complete, ETA 00:23:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 51.89% complete, ETA 00:23:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 52.27% complete, ETA 00:23:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 52.65% complete, ETA 00:22:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 53.03% complete, ETA 00:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10?³, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 53.41% complete, ETA 00:22:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10??, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 53.79% complete, ETA 00:22:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 54.17% complete, ETA 00:22:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [? 10?³, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 54.55% complete, ETA 00:22:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 54.92% complete, ETA 00:21:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 55.30% complete, ETA 00:21:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 55.68% complete, ETA 00:21:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 56.06% complete, ETA 00:21:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 10??, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 56.44% complete, ETA 00:21:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 56.82% complete, ETA 00:20:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 57.20% complete, ETA 00:20:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 57.58% complete, ETA 00:20:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.005 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 57.95% complete, ETA 00:20:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.004, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 58.33% complete, ETA 00:20:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 58.71% complete, ETA 00:20:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 59.09% complete, ETA 00:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.011 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.012), stdev = 0.001
  CI (99.9%): [0.007, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 59.47% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.011 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.012), stdev = 0.001
  CI (99.9%): [0.007, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 59.85% complete, ETA 00:19:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.015 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.011 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.012), stdev = 0.001
  CI (99.9%): [0.008, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 60.23% complete, ETA 00:19:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.010 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.011 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.012), stdev = 0.001
  CI (99.9%): [0.007, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 60.61% complete, ETA 00:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.010 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.011 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.012), stdev = 0.001
  CI (99.9%): [0.007, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 60.98% complete, ETA 00:18:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.010 ms/op
# Warmup Iteration   5: 0.009 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.011 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.012), stdev = 0.001
  CI (99.9%): [0.006, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 61.36% complete, ETA 00:18:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.022 ms/op
Iteration   2: 0.021 ms/op
Iteration   3: 0.019 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.023 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.021 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.019, 0.021, 0.023), stdev = 0.001
  CI (99.9%): [0.016, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 61.74% complete, ETA 00:18:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.023 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.022 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.024 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.021 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.019, 0.021, 0.024), stdev = 0.002
  CI (99.9%): [0.015, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 62.12% complete, ETA 00:18:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.024 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.022 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.019 ms/op
Iteration   4: 0.020 ms/op
Iteration   5: 0.025 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.021 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.019, 0.021, 0.025), stdev = 0.002
  CI (99.9%): [0.013, 0.029] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 62.50% complete, ETA 00:18:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.024 ms/op
# Warmup Iteration   3: 0.022 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.024 ms/op
Iteration   2: 0.020 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.025 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.022 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.020, 0.022, 0.025), stdev = 0.003
  CI (99.9%): [0.012, 0.032] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 62.88% complete, ETA 00:18:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.022 ms/op
# Warmup Iteration   4: 0.020 ms/op
# Warmup Iteration   5: 0.019 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.023 ms/op
Iteration   5: 0.023 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.022 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.019, 0.022, 0.023), stdev = 0.002
  CI (99.9%): [0.014, 0.030] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 63.26% complete, ETA 00:17:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.021 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.025 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.022 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.019, 0.022, 0.025), stdev = 0.002
  CI (99.9%): [0.013, 0.031] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 63.64% complete, ETA 00:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.064 ms/op
# Warmup Iteration   2: 0.043 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.039 ms/op
# Warmup Iteration   5: 0.038 ms/op
Iteration   1: 0.046 ms/op
Iteration   2: 0.037 ms/op
Iteration   3: 0.039 ms/op
Iteration   4: 0.043 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.043 ±(99.9%) 0.017 ms/op [Average]
  (min, avg, max) = (0.037, 0.043, 0.048), stdev = 0.004
  CI (99.9%): [0.026, 0.059] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 64.02% complete, ETA 00:17:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.065 ms/op
# Warmup Iteration   2: 0.043 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.043 ms/op
# Warmup Iteration   5: 0.042 ms/op
Iteration   1: 0.048 ms/op
Iteration   2: 0.041 ms/op
Iteration   3: 0.039 ms/op
Iteration   4: 0.041 ms/op
Iteration   5: 0.050 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.044 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.039, 0.044, 0.050), stdev = 0.005
  CI (99.9%): [0.025, 0.063] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 64.39% complete, ETA 00:17:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.067 ms/op
# Warmup Iteration   2: 0.044 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.040 ms/op
# Warmup Iteration   5: 0.038 ms/op
Iteration   1: 0.048 ms/op
Iteration   2: 0.037 ms/op
Iteration   3: 0.040 ms/op
Iteration   4: 0.042 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.043 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.037, 0.043, 0.048), stdev = 0.005
  CI (99.9%): [0.024, 0.062] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 64.77% complete, ETA 00:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.064 ms/op
# Warmup Iteration   2: 0.048 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.038 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.046 ms/op
Iteration   2: 0.039 ms/op
Iteration   3: 0.038 ms/op
Iteration   4: 0.041 ms/op
Iteration   5: 0.050 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.043 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.038, 0.043, 0.050), stdev = 0.005
  CI (99.9%): [0.024, 0.062] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 65.15% complete, ETA 00:16:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.069 ms/op
# Warmup Iteration   2: 0.045 ms/op
# Warmup Iteration   3: 0.043 ms/op
# Warmup Iteration   4: 0.042 ms/op
# Warmup Iteration   5: 0.039 ms/op
Iteration   1: 0.048 ms/op
Iteration   2: 0.038 ms/op
Iteration   3: 0.040 ms/op
Iteration   4: 0.041 ms/op
Iteration   5: 0.049 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.043 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.038, 0.043, 0.049), stdev = 0.005
  CI (99.9%): [0.024, 0.063] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 65.53% complete, ETA 00:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.070 ms/op
# Warmup Iteration   2: 0.047 ms/op
# Warmup Iteration   3: 0.040 ms/op
# Warmup Iteration   4: 0.042 ms/op
# Warmup Iteration   5: 0.040 ms/op
Iteration   1: 0.047 ms/op
Iteration   2: 0.038 ms/op
Iteration   3: 0.039 ms/op
Iteration   4: 0.042 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.043 ±(99.9%) 0.018 ms/op [Average]
  (min, avg, max) = (0.038, 0.043, 0.048), stdev = 0.005
  CI (99.9%): [0.025, 0.061] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 65.91% complete, ETA 00:16:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.133 ms/op
# Warmup Iteration   2: 0.094 ms/op
# Warmup Iteration   3: 0.082 ms/op
# Warmup Iteration   4: 0.081 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.093 ms/op
Iteration   2: 0.078 ms/op
Iteration   3: 0.074 ms/op
Iteration   4: 0.087 ms/op
Iteration   5: 0.097 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.086 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.074, 0.086, 0.097), stdev = 0.010
  CI (99.9%): [0.047, 0.124] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 66.29% complete, ETA 00:16:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.119 ms/op
# Warmup Iteration   2: 0.087 ms/op
# Warmup Iteration   3: 0.089 ms/op
# Warmup Iteration   4: 0.077 ms/op
# Warmup Iteration   5: 0.077 ms/op
Iteration   1: 0.092 ms/op
Iteration   2: 0.072 ms/op
Iteration   3: 0.077 ms/op
Iteration   4: 0.089 ms/op
Iteration   5: 0.096 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.085 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.072, 0.085, 0.096), stdev = 0.010
  CI (99.9%): [0.047, 0.124] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 66.67% complete, ETA 00:16:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.124 ms/op
# Warmup Iteration   2: 0.086 ms/op
# Warmup Iteration   3: 0.087 ms/op
# Warmup Iteration   4: 0.079 ms/op
# Warmup Iteration   5: 0.076 ms/op
Iteration   1: 0.092 ms/op
Iteration   2: 0.075 ms/op
Iteration   3: 0.078 ms/op
Iteration   4: 0.087 ms/op
Iteration   5: 0.095 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.085 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (0.075, 0.085, 0.095), stdev = 0.009
  CI (99.9%): [0.052, 0.119] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 67.05% complete, ETA 00:15:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.131 ms/op
# Warmup Iteration   2: 0.086 ms/op
# Warmup Iteration   3: 0.088 ms/op
# Warmup Iteration   4: 0.077 ms/op
# Warmup Iteration   5: 0.078 ms/op
Iteration   1: 0.092 ms/op
Iteration   2: 0.074 ms/op
Iteration   3: 0.079 ms/op
Iteration   4: 0.084 ms/op
Iteration   5: 0.094 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.085 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.074, 0.085, 0.094), stdev = 0.008
  CI (99.9%): [0.052, 0.117] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 67.42% complete, ETA 00:15:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.135 ms/op
# Warmup Iteration   2: 0.089 ms/op
# Warmup Iteration   3: 0.086 ms/op
# Warmup Iteration   4: 0.085 ms/op
# Warmup Iteration   5: 0.076 ms/op
Iteration   1: 0.096 ms/op
Iteration   2: 0.076 ms/op
Iteration   3: 0.079 ms/op
Iteration   4: 0.086 ms/op
Iteration   5: 0.099 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.087 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (0.076, 0.087, 0.099), stdev = 0.010
  CI (99.9%): [0.048, 0.126] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 67.80% complete, ETA 00:15:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.140 ms/op
# Warmup Iteration   2: 0.091 ms/op
# Warmup Iteration   3: 0.087 ms/op
# Warmup Iteration   4: 0.076 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: 0.087 ms/op
Iteration   2: 0.079 ms/op
Iteration   3: 0.077 ms/op
Iteration   4: 0.086 ms/op
Iteration   5: 0.095 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.085 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.077, 0.085, 0.095), stdev = 0.007
  CI (99.9%): [0.057, 0.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 68.18% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.253 ms/op
# Warmup Iteration   2: 0.176 ms/op
# Warmup Iteration   3: 0.166 ms/op
# Warmup Iteration   4: 0.161 ms/op
# Warmup Iteration   5: 0.163 ms/op
Iteration   1: 0.175 ms/op
Iteration   2: 0.150 ms/op
Iteration   3: 0.157 ms/op
Iteration   4: 0.171 ms/op
Iteration   5: 0.194 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.169 ±(99.9%) 0.066 ms/op [Average]
  (min, avg, max) = (0.150, 0.169, 0.194), stdev = 0.017
  CI (99.9%): [0.104, 0.235] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 68.56% complete, ETA 00:15:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.242 ms/op
# Warmup Iteration   2: 0.194 ms/op
# Warmup Iteration   3: 0.166 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.163 ms/op
Iteration   1: 0.180 ms/op
Iteration   2: 0.149 ms/op
Iteration   3: 0.155 ms/op
Iteration   4: 0.165 ms/op
Iteration   5: 0.194 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.169 ±(99.9%) 0.071 ms/op [Average]
  (min, avg, max) = (0.149, 0.169, 0.194), stdev = 0.019
  CI (99.9%): [0.097, 0.240] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 68.94% complete, ETA 00:15:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.233 ms/op
# Warmup Iteration   2: 0.169 ms/op
# Warmup Iteration   3: 0.168 ms/op
# Warmup Iteration   4: 0.160 ms/op
# Warmup Iteration   5: 0.162 ms/op
Iteration   1: 0.171 ms/op
Iteration   2: 0.157 ms/op
Iteration   3: 0.154 ms/op
Iteration   4: 0.174 ms/op
Iteration   5: 0.185 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.168 ±(99.9%) 0.050 ms/op [Average]
  (min, avg, max) = (0.154, 0.168, 0.185), stdev = 0.013
  CI (99.9%): [0.118, 0.218] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 69.32% complete, ETA 00:14:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.252 ms/op
# Warmup Iteration   2: 0.171 ms/op
# Warmup Iteration   3: 0.174 ms/op
# Warmup Iteration   4: 0.156 ms/op
# Warmup Iteration   5: 0.151 ms/op
Iteration   1: 0.186 ms/op
Iteration   2: 0.149 ms/op
Iteration   3: 0.155 ms/op
Iteration   4: 0.170 ms/op
Iteration   5: 0.186 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.169 ±(99.9%) 0.067 ms/op [Average]
  (min, avg, max) = (0.149, 0.169, 0.186), stdev = 0.017
  CI (99.9%): [0.102, 0.237] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 69.70% complete, ETA 00:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.266 ms/op
# Warmup Iteration   2: 0.178 ms/op
# Warmup Iteration   3: 0.177 ms/op
# Warmup Iteration   4: 0.156 ms/op
# Warmup Iteration   5: 0.166 ms/op
Iteration   1: 0.179 ms/op
Iteration   2: 0.151 ms/op
Iteration   3: 0.160 ms/op
Iteration   4: 0.175 ms/op
Iteration   5: 0.195 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.172 ±(99.9%) 0.065 ms/op [Average]
  (min, avg, max) = (0.151, 0.172, 0.195), stdev = 0.017
  CI (99.9%): [0.107, 0.237] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 70.08% complete, ETA 00:14:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.261 ms/op
# Warmup Iteration   2: 0.175 ms/op
# Warmup Iteration   3: 0.176 ms/op
# Warmup Iteration   4: 0.158 ms/op
# Warmup Iteration   5: 0.151 ms/op
Iteration   1: 0.186 ms/op
Iteration   2: 0.149 ms/op
Iteration   3: 0.156 ms/op
Iteration   4: 0.174 ms/op
Iteration   5: 0.201 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.173 ±(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (0.149, 0.173, 0.201), stdev = 0.021
  CI (99.9%): [0.091, 0.255] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 70.45% complete, ETA 00:14:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.501 ms/op
# Warmup Iteration   2: 0.343 ms/op
# Warmup Iteration   3: 0.360 ms/op
# Warmup Iteration   4: 0.305 ms/op
# Warmup Iteration   5: 0.330 ms/op
Iteration   1: 0.354 ms/op
Iteration   2: 0.299 ms/op
Iteration   3: 0.322 ms/op
Iteration   4: 0.334 ms/op
Iteration   5: 0.402 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.342 ±(99.9%) 0.150 ms/op [Average]
  (min, avg, max) = (0.299, 0.342, 0.402), stdev = 0.039
  CI (99.9%): [0.192, 0.492] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 70.83% complete, ETA 00:14:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.522 ms/op
# Warmup Iteration   2: 0.350 ms/op
# Warmup Iteration   3: 0.352 ms/op
# Warmup Iteration   4: 0.317 ms/op
# Warmup Iteration   5: 0.303 ms/op
Iteration   1: 0.373 ms/op
Iteration   2: 0.297 ms/op
Iteration   3: 0.313 ms/op
Iteration   4: 0.345 ms/op
Iteration   5: 0.400 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.346 ±(99.9%) 0.162 ms/op [Average]
  (min, avg, max) = (0.297, 0.346, 0.400), stdev = 0.042
  CI (99.9%): [0.184, 0.508] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 71.21% complete, ETA 00:13:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.519 ms/op
# Warmup Iteration   2: 0.340 ms/op
# Warmup Iteration   3: 0.353 ms/op
# Warmup Iteration   4: 0.320 ms/op
# Warmup Iteration   5: 0.301 ms/op
Iteration   1: 0.372 ms/op
Iteration   2: 0.294 ms/op
Iteration   3: 0.314 ms/op
Iteration   4: 0.347 ms/op
Iteration   5: 0.399 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.345 ±(99.9%) 0.163 ms/op [Average]
  (min, avg, max) = (0.294, 0.345, 0.399), stdev = 0.042
  CI (99.9%): [0.182, 0.508] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 71.59% complete, ETA 00:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.518 ms/op
# Warmup Iteration   2: 0.349 ms/op
# Warmup Iteration   3: 0.333 ms/op
# Warmup Iteration   4: 0.325 ms/op
# Warmup Iteration   5: 0.324 ms/op
Iteration   1: 0.351 ms/op
Iteration   2: 0.303 ms/op
Iteration   3: 0.319 ms/op
Iteration   4: 0.327 ms/op
Iteration   5: 0.393 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.339 ±(99.9%) 0.135 ms/op [Average]
  (min, avg, max) = (0.303, 0.339, 0.393), stdev = 0.035
  CI (99.9%): [0.204, 0.474] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 71.97% complete, ETA 00:13:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.538 ms/op
# Warmup Iteration   2: 0.343 ms/op
# Warmup Iteration   3: 0.362 ms/op
# Warmup Iteration   4: 0.323 ms/op
# Warmup Iteration   5: 0.347 ms/op
Iteration   1: 0.404 ms/op
Iteration   2: 0.330 ms/op
Iteration   3: 0.336 ms/op
Iteration   4: 0.341 ms/op
Iteration   5: 0.398 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.362 ±(99.9%) 0.140 ms/op [Average]
  (min, avg, max) = (0.330, 0.362, 0.404), stdev = 0.036
  CI (99.9%): [0.222, 0.502] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 72.35% complete, ETA 00:13:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.528 ms/op
# Warmup Iteration   2: 0.338 ms/op
# Warmup Iteration   3: 0.355 ms/op
# Warmup Iteration   4: 0.321 ms/op
# Warmup Iteration   5: 0.311 ms/op
Iteration   1: 0.352 ms/op
Iteration   2: 0.296 ms/op
Iteration   3: 0.308 ms/op
Iteration   4: 0.363 ms/op
Iteration   5: 0.394 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.343 ±(99.9%) 0.155 ms/op [Average]
  (min, avg, max) = (0.296, 0.343, 0.394), stdev = 0.040
  CI (99.9%): [0.188, 0.497] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 72.73% complete, ETA 00:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 1.031 ms/op
# Warmup Iteration   2: 0.738 ms/op
# Warmup Iteration   3: 0.677 ms/op
# Warmup Iteration   4: 0.656 ms/op
# Warmup Iteration   5: 0.607 ms/op
Iteration   1: 0.753 ms/op
Iteration   2: 0.609 ms/op
Iteration   3: 0.629 ms/op
Iteration   4: 0.651 ms/op
Iteration   5: 0.797 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.688 ±(99.9%) 0.317 ms/op [Average]
  (min, avg, max) = (0.609, 0.688, 0.797), stdev = 0.082
  CI (99.9%): [0.371, 1.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 73.11% complete, ETA 00:13:02
# Fork: 1 of 1
# Warmup Iteration   1: 1.019 ms/op
# Warmup Iteration   2: 0.704 ms/op
# Warmup Iteration   3: 0.667 ms/op
# Warmup Iteration   4: 0.641 ms/op
# Warmup Iteration   5: 0.650 ms/op
Iteration   1: 0.697 ms/op
Iteration   2: 0.629 ms/op
Iteration   3: 0.616 ms/op
Iteration   4: 0.647 ms/op
Iteration   5: 0.811 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.680 ±(99.9%) 0.307 ms/op [Average]
  (min, avg, max) = (0.616, 0.680, 0.811), stdev = 0.080
  CI (99.9%): [0.373, 0.987] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 73.48% complete, ETA 00:12:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.997 ms/op
# Warmup Iteration   2: 0.771 ms/op
# Warmup Iteration   3: 0.658 ms/op
# Warmup Iteration   4: 0.600 ms/op
# Warmup Iteration   5: 0.672 ms/op
Iteration   1: 0.698 ms/op
Iteration   2: 0.624 ms/op
Iteration   3: 0.611 ms/op
Iteration   4: 0.652 ms/op
Iteration   5: 0.818 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.681 ±(99.9%) 0.322 ms/op [Average]
  (min, avg, max) = (0.611, 0.681, 0.818), stdev = 0.084
  CI (99.9%): [0.358, 1.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 73.86% complete, ETA 00:12:40
# Fork: 1 of 1
# Warmup Iteration   1: 1.039 ms/op
# Warmup Iteration   2: 0.734 ms/op
# Warmup Iteration   3: 0.676 ms/op
# Warmup Iteration   4: 0.632 ms/op
# Warmup Iteration   5: 0.645 ms/op
Iteration   1: 0.697 ms/op
Iteration   2: 0.606 ms/op
Iteration   3: 0.631 ms/op
Iteration   4: 0.649 ms/op
Iteration   5: 0.789 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.674 ±(99.9%) 0.278 ms/op [Average]
  (min, avg, max) = (0.606, 0.674, 0.789), stdev = 0.072
  CI (99.9%): [0.396, 0.952] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 74.24% complete, ETA 00:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.956 ms/op
# Warmup Iteration   2: 0.654 ms/op
# Warmup Iteration   3: 0.709 ms/op
# Warmup Iteration   4: 0.631 ms/op
# Warmup Iteration   5: 0.623 ms/op
Iteration   1: 0.728 ms/op
Iteration   2: 0.599 ms/op
Iteration   3: 0.621 ms/op
Iteration   4: 0.707 ms/op
Iteration   5: 0.787 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.689 ±(99.9%) 0.299 ms/op [Average]
  (min, avg, max) = (0.599, 0.689, 0.787), stdev = 0.078
  CI (99.9%): [0.390, 0.987] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 74.62% complete, ETA 00:12:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.955 ms/op
# Warmup Iteration   2: 0.684 ms/op
# Warmup Iteration   3: 0.709 ms/op
# Warmup Iteration   4: 0.638 ms/op
# Warmup Iteration   5: 0.618 ms/op
Iteration   1: 0.713 ms/op
Iteration   2: 0.619 ms/op
Iteration   3: 0.614 ms/op
Iteration   4: 0.715 ms/op
Iteration   5: 0.788 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.690 ±(99.9%) 0.283 ms/op [Average]
  (min, avg, max) = (0.614, 0.690, 0.788), stdev = 0.073
  CI (99.9%): [0.407, 0.973] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 75.00% complete, ETA 00:12:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 75.38% complete, ETA 00:11:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 75.76% complete, ETA 00:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 76.14% complete, ETA 00:11:33
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 76.52% complete, ETA 00:11:22
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 76.89% complete, ETA 00:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 77.27% complete, ETA 00:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 77.65% complete, ETA 00:10:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 78.03% complete, ETA 00:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 78.41% complete, ETA 00:10:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 78.79% complete, ETA 00:10:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 79.17% complete, ETA 00:10:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 79.55% complete, ETA 00:09:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 79.92% complete, ETA 00:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 80.30% complete, ETA 00:09:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 80.68% complete, ETA 00:09:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 81.06% complete, ETA 00:09:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 81.44% complete, ETA 00:08:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 81.82% complete, ETA 00:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 82.20% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 82.58% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 82.95% complete, ETA 00:08:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 83.33% complete, ETA 00:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 83.71% complete, ETA 00:07:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 84.09% complete, ETA 00:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 84.47% complete, ETA 00:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 84.85% complete, ETA 00:07:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 85.23% complete, ETA 00:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 85.61% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 85.98% complete, ETA 00:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 86.36% complete, ETA 00:06:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 86.74% complete, ETA 00:06:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 87.12% complete, ETA 00:06:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.014), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 87.50% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.014), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 87.88% complete, ETA 00:05:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 88.26% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.016 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 88.64% complete, ETA 00:05:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.027 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.027, 0.027, 0.027), stdev = 0.001
  CI (99.9%): [0.027, 0.027] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 89.02% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.027 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.027, 0.027, 0.027), stdev = 0.001
  CI (99.9%): [0.026, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 89.39% complete, ETA 00:05:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.027 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.027, 0.027, 0.027), stdev = 0.001
  CI (99.9%): [0.026, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 89.77% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.028 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.027, 0.028, 0.030), stdev = 0.002
  CI (99.9%): [0.022, 0.034] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 90.15% complete, ETA 00:04:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.036 ms/op
# Warmup Iteration   2: 0.028 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.026 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.026 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.027 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.026, 0.027, 0.028), stdev = 0.001
  CI (99.9%): [0.025, 0.029] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 90.53% complete, ETA 00:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.026 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.026 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.026 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.027 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.026, 0.027, 0.027), stdev = 0.001
  CI (99.9%): [0.025, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 90.91% complete, ETA 00:04:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.066 ms/op
# Warmup Iteration   2: 0.054 ms/op
# Warmup Iteration   3: 0.053 ms/op
# Warmup Iteration   4: 0.053 ms/op
# Warmup Iteration   5: 0.053 ms/op
Iteration   1: 0.056 ms/op
Iteration   2: 0.053 ms/op
Iteration   3: 0.053 ms/op
Iteration   4: 0.053 ms/op
Iteration   5: 0.053 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.054 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.053, 0.054, 0.056), stdev = 0.001
  CI (99.9%): [0.049, 0.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 91.29% complete, ETA 00:04:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.066 ms/op
# Warmup Iteration   2: 0.054 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.053 ms/op
# Warmup Iteration   5: 0.054 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.053 ms/op
Iteration   3: 0.053 ms/op
Iteration   4: 0.054 ms/op
Iteration   5: 0.053 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.054 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.053, 0.054, 0.055), stdev = 0.001
  CI (99.9%): [0.050, 0.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 91.67% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.066 ms/op
# Warmup Iteration   2: 0.053 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.054 ms/op
# Warmup Iteration   5: 0.054 ms/op
Iteration   1: 0.056 ms/op
Iteration   2: 0.055 ms/op
Iteration   3: 0.055 ms/op
Iteration   4: 0.054 ms/op
Iteration   5: 0.054 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.055 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.054, 0.055, 0.056), stdev = 0.001
  CI (99.9%): [0.052, 0.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 92.05% complete, ETA 00:03:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.064 ms/op
# Warmup Iteration   2: 0.054 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.055 ms/op
# Warmup Iteration   5: 0.053 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.054 ms/op
Iteration   3: 0.053 ms/op
Iteration   4: 0.054 ms/op
Iteration   5: 0.053 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.054 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.053, 0.054, 0.055), stdev = 0.001
  CI (99.9%): [0.051, 0.057] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 92.42% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.069 ms/op
# Warmup Iteration   2: 0.053 ms/op
# Warmup Iteration   3: 0.052 ms/op
# Warmup Iteration   4: 0.053 ms/op
# Warmup Iteration   5: 0.053 ms/op
Iteration   1: 0.054 ms/op
Iteration   2: 0.053 ms/op
Iteration   3: 0.053 ms/op
Iteration   4: 0.053 ms/op
Iteration   5: 0.053 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.053 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.053, 0.053, 0.054), stdev = 0.001
  CI (99.9%): [0.051, 0.055] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 92.80% complete, ETA 00:03:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.072 ms/op
# Warmup Iteration   2: 0.053 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.053 ms/op
# Warmup Iteration   5: 0.054 ms/op
Iteration   1: 0.055 ms/op
Iteration   2: 0.053 ms/op
Iteration   3: 0.053 ms/op
Iteration   4: 0.052 ms/op
Iteration   5: 0.052 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.053 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.052, 0.053, 0.055), stdev = 0.001
  CI (99.9%): [0.049, 0.057] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 93.18% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.129 ms/op
# Warmup Iteration   2: 0.108 ms/op
# Warmup Iteration   3: 0.106 ms/op
# Warmup Iteration   4: 0.106 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.109 ms/op
Iteration   2: 0.106 ms/op
Iteration   3: 0.106 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.107 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.107 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.106, 0.107, 0.109), stdev = 0.001
  CI (99.9%): [0.103, 0.111] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 93.56% complete, ETA 00:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.134 ms/op
# Warmup Iteration   2: 0.107 ms/op
# Warmup Iteration   3: 0.107 ms/op
# Warmup Iteration   4: 0.107 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.110 ms/op
Iteration   2: 0.107 ms/op
Iteration   3: 0.108 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.108 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.108 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.107, 0.108, 0.110), stdev = 0.001
  CI (99.9%): [0.103, 0.113] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 93.94% complete, ETA 00:02:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.131 ms/op
# Warmup Iteration   2: 0.109 ms/op
# Warmup Iteration   3: 0.106 ms/op
# Warmup Iteration   4: 0.107 ms/op
# Warmup Iteration   5: 0.108 ms/op
Iteration   1: 0.109 ms/op
Iteration   2: 0.106 ms/op
Iteration   3: 0.106 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.107 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.107 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.106, 0.107, 0.109), stdev = 0.001
  CI (99.9%): [0.102, 0.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 94.32% complete, ETA 00:02:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.132 ms/op
# Warmup Iteration   2: 0.108 ms/op
# Warmup Iteration   3: 0.107 ms/op
# Warmup Iteration   4: 0.107 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.110 ms/op
Iteration   2: 0.109 ms/op
Iteration   3: 0.106 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.106 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.108 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.106, 0.108, 0.110), stdev = 0.002
  CI (99.9%): [0.101, 0.114] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 94.70% complete, ETA 00:02:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.145 ms/op
# Warmup Iteration   2: 0.106 ms/op
# Warmup Iteration   3: 0.106 ms/op
# Warmup Iteration   4: 0.106 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.109 ms/op
Iteration   2: 0.105 ms/op
Iteration   3: 0.104 ms/op
Iteration   4: 0.104 ms/op
Iteration   5: 0.105 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.106 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.104, 0.106, 0.109), stdev = 0.002
  CI (99.9%): [0.099, 0.112] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 95.08% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.148 ms/op
# Warmup Iteration   2: 0.107 ms/op
# Warmup Iteration   3: 0.107 ms/op
# Warmup Iteration   4: 0.108 ms/op
# Warmup Iteration   5: 0.106 ms/op
Iteration   1: 0.111 ms/op
Iteration   2: 0.106 ms/op
Iteration   3: 0.107 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.107 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.108 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.106, 0.108, 0.111), stdev = 0.002
  CI (99.9%): [0.100, 0.115] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 95.45% complete, ETA 00:02:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.275 ms/op
# Warmup Iteration   2: 0.218 ms/op
# Warmup Iteration   3: 0.217 ms/op
# Warmup Iteration   4: 0.218 ms/op
# Warmup Iteration   5: 0.216 ms/op
Iteration   1: 0.226 ms/op
Iteration   2: 0.218 ms/op
Iteration   3: 0.216 ms/op
Iteration   4: 0.216 ms/op
Iteration   5: 0.214 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.218 ±(99.9%) 0.017 ms/op [Average]
  (min, avg, max) = (0.214, 0.218, 0.226), stdev = 0.004
  CI (99.9%): [0.201, 0.235] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 95.83% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.258 ms/op
# Warmup Iteration   2: 0.218 ms/op
# Warmup Iteration   3: 0.212 ms/op
# Warmup Iteration   4: 0.213 ms/op
# Warmup Iteration   5: 0.213 ms/op
Iteration   1: 0.222 ms/op
Iteration   2: 0.214 ms/op
Iteration   3: 0.212 ms/op
Iteration   4: 0.213 ms/op
Iteration   5: 0.213 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.215 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.212, 0.215, 0.222), stdev = 0.004
  CI (99.9%): [0.200, 0.230] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 96.21% complete, ETA 00:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.268 ms/op
# Warmup Iteration   2: 0.216 ms/op
# Warmup Iteration   3: 0.212 ms/op
# Warmup Iteration   4: 0.213 ms/op
# Warmup Iteration   5: 0.212 ms/op
Iteration   1: 0.220 ms/op
Iteration   2: 0.214 ms/op
Iteration   3: 0.212 ms/op
Iteration   4: 0.213 ms/op
Iteration   5: 0.213 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.214 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.212, 0.214, 0.220), stdev = 0.003
  CI (99.9%): [0.201, 0.227] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 96.59% complete, ETA 00:01:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.267 ms/op
# Warmup Iteration   2: 0.216 ms/op
# Warmup Iteration   3: 0.215 ms/op
# Warmup Iteration   4: 0.213 ms/op
# Warmup Iteration   5: 0.214 ms/op
Iteration   1: 0.223 ms/op
Iteration   2: 0.214 ms/op
Iteration   3: 0.213 ms/op
Iteration   4: 0.212 ms/op
Iteration   5: 0.213 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.215 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.212, 0.215, 0.223), stdev = 0.004
  CI (99.9%): [0.199, 0.232] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 96.97% complete, ETA 00:01:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.272 ms/op
# Warmup Iteration   2: 0.216 ms/op
# Warmup Iteration   3: 0.213 ms/op
# Warmup Iteration   4: 0.213 ms/op
# Warmup Iteration   5: 0.213 ms/op
Iteration   1: 0.217 ms/op
Iteration   2: 0.213 ms/op
Iteration   3: 0.212 ms/op
Iteration   4: 0.215 ms/op
Iteration   5: 0.214 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.214 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.212, 0.214, 0.217), stdev = 0.002
  CI (99.9%): [0.206, 0.222] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 97.35% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.275 ms/op
# Warmup Iteration   2: 0.213 ms/op
# Warmup Iteration   3: 0.213 ms/op
# Warmup Iteration   4: 0.214 ms/op
# Warmup Iteration   5: 0.216 ms/op
Iteration   1: 0.221 ms/op
Iteration   2: 0.214 ms/op
Iteration   3: 0.214 ms/op
Iteration   4: 0.213 ms/op
Iteration   5: 0.214 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.215 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.213, 0.215, 0.221), stdev = 0.003
  CI (99.9%): [0.203, 0.228] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 97.73% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.545 ms/op
# Warmup Iteration   2: 0.427 ms/op
# Warmup Iteration   3: 0.433 ms/op
# Warmup Iteration   4: 0.429 ms/op
# Warmup Iteration   5: 0.429 ms/op
Iteration   1: 0.448 ms/op
Iteration   2: 0.428 ms/op
Iteration   3: 0.426 ms/op
Iteration   4: 0.429 ms/op
Iteration   5: 0.430 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.432 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (0.426, 0.432, 0.448), stdev = 0.009
  CI (99.9%): [0.398, 0.466] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 98.11% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.536 ms/op
# Warmup Iteration   2: 0.431 ms/op
# Warmup Iteration   3: 0.430 ms/op
# Warmup Iteration   4: 0.427 ms/op
# Warmup Iteration   5: 0.427 ms/op
Iteration   1: 0.442 ms/op
Iteration   2: 0.427 ms/op
Iteration   3: 0.429 ms/op
Iteration   4: 0.427 ms/op
Iteration   5: 0.430 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.431 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (0.427, 0.431, 0.442), stdev = 0.006
  CI (99.9%): [0.406, 0.456] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 98.48% complete, ETA 00:00:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.530 ms/op
# Warmup Iteration   2: 0.430 ms/op
# Warmup Iteration   3: 0.428 ms/op
# Warmup Iteration   4: 0.429 ms/op
# Warmup Iteration   5: 0.428 ms/op
Iteration   1: 0.440 ms/op
Iteration   2: 0.431 ms/op
Iteration   3: 0.425 ms/op
Iteration   4: 0.427 ms/op
Iteration   5: 0.431 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.431 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.425, 0.431, 0.440), stdev = 0.006
  CI (99.9%): [0.408, 0.454] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 98.86% complete, ETA 00:00:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.536 ms/op
# Warmup Iteration   2: 0.423 ms/op
# Warmup Iteration   3: 0.424 ms/op
# Warmup Iteration   4: 0.425 ms/op
# Warmup Iteration   5: 0.428 ms/op
Iteration   1: 0.430 ms/op
Iteration   2: 0.435 ms/op
Iteration   3: 0.429 ms/op
Iteration   4: 0.427 ms/op
Iteration   5: 0.421 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.429 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.421, 0.429, 0.435), stdev = 0.005
  CI (99.9%): [0.409, 0.448] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 99.24% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.528 ms/op
# Warmup Iteration   2: 0.433 ms/op
# Warmup Iteration   3: 0.433 ms/op
# Warmup Iteration   4: 0.427 ms/op
# Warmup Iteration   5: 0.431 ms/op
Iteration   1: 0.438 ms/op
Iteration   2: 0.434 ms/op
Iteration   3: 0.427 ms/op
Iteration   4: 0.432 ms/op
Iteration   5: 0.431 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.432 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.427, 0.432, 0.438), stdev = 0.004
  CI (99.9%): [0.417, 0.448] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 99.62% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.568 ms/op
# Warmup Iteration   2: 0.428 ms/op
# Warmup Iteration   3: 0.418 ms/op
# Warmup Iteration   4: 0.424 ms/op
# Warmup Iteration   5: 0.421 ms/op
Iteration   1: 0.432 ms/op
Iteration   2: 0.430 ms/op
Iteration   3: 0.420 ms/op
Iteration   4: 0.421 ms/op
Iteration   5: 0.421 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.425 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.420, 0.425, 0.432), stdev = 0.006
  CI (99.9%): [0.403, 0.446] (assumes normal distribution)


# Run complete. Total time: 00:47:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                        (nGet)  (nKeys)  (nValues)  Mode  Cnt     Score      Error  Units
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16     1000          2  avgt    5     0.029 ±    0.002  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16     1000          3  avgt    5     0.029 ±    0.003  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16   100000          2  avgt    5     8.200 ±    2.830  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16   100000          3  avgt    5     7.785 ±    1.327  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32       32          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32       32          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32     1000          2  avgt    5     0.059 ±    0.004  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32     1000          3  avgt    5     0.058 ±    0.003  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32   100000          2  avgt    5    15.855 ±    3.360  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32   100000          3  avgt    5    16.984 ±    3.366  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64       32          2  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64       32          3  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64     1000          2  avgt    5     0.101 ±    0.005  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64     1000          3  avgt    5     0.101 ±    0.004  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64   100000          2  avgt    5    27.806 ±    7.370  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64   100000          3  avgt    5    31.084 ±   13.951  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128       32          2  avgt    5     0.006 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128       32          3  avgt    5     0.006 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128     1000          2  avgt    5     0.188 ±    0.009  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128     1000          3  avgt    5     0.187 ±    0.012  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128   100000          2  avgt    5    53.862 ±   13.384  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128   100000          3  avgt    5    82.255 ±   56.533  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256       32          2  avgt    5     0.014 ±    0.003  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256       32          3  avgt    5     0.013 ±    0.002  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256     1000          2  avgt    5     0.383 ±    0.046  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256     1000          3  avgt    5     0.391 ±    0.041  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256   100000          2  avgt    5   100.817 ±   19.783  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256   100000          3  avgt    5   116.474 ±   19.606  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512       32          2  avgt    5     0.025 ±    0.003  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512       32          3  avgt    5     0.025 ±    0.002  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512     1000          2  avgt    5     0.760 ±    0.087  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512     1000          3  avgt    5     0.756 ±    0.068  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512   100000          2  avgt    5   211.233 ±   45.653  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512   100000          3  avgt    5   245.472 ±   36.411  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024       32          2  avgt    5     0.049 ±    0.006  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024       32          3  avgt    5     0.048 ±    0.004  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024     1000          2  avgt    5     1.492 ±    0.051  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024     1000          3  avgt    5     1.498 ±    0.096  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024   100000          2  avgt    5   443.117 ±   88.761  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024   100000          3  avgt    5   467.333 ±   28.341  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048       32          2  avgt    5     0.097 ±    0.009  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048       32          3  avgt    5     0.098 ±    0.008  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048     1000          2  avgt    5     2.942 ±    0.141  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048     1000          3  avgt    5     2.965 ±    0.204  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048   100000          2  avgt    5  1035.411 ±  864.699  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048   100000          3  avgt    5  1211.496 ± 1388.780  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096       32          2  avgt    5     0.197 ±    0.015  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096       32          3  avgt    5     0.193 ±    0.013  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096     1000          2  avgt    5     5.925 ±    0.240  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096     1000          3  avgt    5     5.950 ±    0.275  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096   100000          2  avgt    5  2295.458 ± 1017.938  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096   100000          3  avgt    5  2176.255 ±  576.747  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192       32          2  avgt    5     0.390 ±    0.035  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192       32          3  avgt    5     0.421 ±    0.025  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192     1000          2  avgt    5    11.911 ±    0.523  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192     1000          3  avgt    5    11.762 ±    1.038  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384       32          2  avgt    5     0.814 ±    0.027  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384       32          3  avgt    5     0.809 ±    0.082  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384     1000          2  avgt    5    24.357 ±    1.855  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384     1000          3  avgt    5    23.769 ±    2.282  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16     1000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16     1000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16   100000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16   100000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32       32          2  avgt    5     0.002 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32       32          3  avgt    5     0.002 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32     1000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32     1000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32   100000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32   100000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64       32          2  avgt    5     0.003 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64       32          3  avgt    5     0.003 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64     1000          2  avgt    5     0.003 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64     1000          3  avgt    5     0.003 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64   100000          2  avgt    5     0.003 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64   100000          3  avgt    5     0.003 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128       32          2  avgt    5     0.005 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128       32          3  avgt    5     0.005 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128     1000          2  avgt    5     0.005 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128     1000          3  avgt    5     0.005 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128   100000          2  avgt    5     0.005 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128   100000          3  avgt    5     0.005 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256       32          2  avgt    5     0.011 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256       32          3  avgt    5     0.011 ±    0.004  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256     1000          2  avgt    5     0.011 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256     1000          3  avgt    5     0.011 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256   100000          2  avgt    5     0.011 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256   100000          3  avgt    5     0.011 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512       32          2  avgt    5     0.021 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512       32          3  avgt    5     0.021 ±    0.007  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512     1000          2  avgt    5     0.021 ±    0.008  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512     1000          3  avgt    5     0.022 ±    0.010  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512   100000          2  avgt    5     0.022 ±    0.008  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512   100000          3  avgt    5     0.022 ±    0.009  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024       32          2  avgt    5     0.043 ±    0.017  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024       32          3  avgt    5     0.044 ±    0.019  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024     1000          2  avgt    5     0.043 ±    0.019  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024     1000          3  avgt    5     0.043 ±    0.019  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024   100000          2  avgt    5     0.043 ±    0.020  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024   100000          3  avgt    5     0.043 ±    0.018  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048       32          2  avgt    5     0.086 ±    0.038  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048       32          3  avgt    5     0.085 ±    0.038  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048     1000          2  avgt    5     0.085 ±    0.034  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048     1000          3  avgt    5     0.085 ±    0.033  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048   100000          2  avgt    5     0.087 ±    0.039  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048   100000          3  avgt    5     0.085 ±    0.027  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096       32          2  avgt    5     0.169 ±    0.066  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096       32          3  avgt    5     0.169 ±    0.071  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096     1000          2  avgt    5     0.168 ±    0.050  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096     1000          3  avgt    5     0.169 ±    0.067  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096   100000          2  avgt    5     0.172 ±    0.065  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096   100000          3  avgt    5     0.173 ±    0.082  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192       32          2  avgt    5     0.342 ±    0.150  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192       32          3  avgt    5     0.346 ±    0.162  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192     1000          2  avgt    5     0.345 ±    0.163  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192     1000          3  avgt    5     0.339 ±    0.135  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192   100000          2  avgt    5     0.362 ±    0.140  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192   100000          3  avgt    5     0.343 ±    0.155  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384       32          2  avgt    5     0.688 ±    0.317  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384       32          3  avgt    5     0.680 ±    0.307  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384     1000          2  avgt    5     0.681 ±    0.322  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384     1000          3  avgt    5     0.674 ±    0.278  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384   100000          2  avgt    5     0.689 ±    0.299  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384   100000          3  avgt    5     0.690 ±    0.283  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16       32          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16       32          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16     1000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16     1000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16   100000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16   100000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32     1000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32     1000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32   100000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32   100000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64       32          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64       32          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64     1000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64     1000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64   100000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64   100000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128       32          2  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128       32          3  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128     1000          2  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128     1000          3  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128   100000          2  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128   100000          3  avgt    5     0.003 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256       32          2  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256       32          3  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256     1000          2  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256     1000          3  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256   100000          2  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256   100000          3  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512       32          2  avgt    5     0.013 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512       32          3  avgt    5     0.013 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512     1000          2  avgt    5     0.013 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512     1000          3  avgt    5     0.013 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512   100000          2  avgt    5     0.013 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512   100000          3  avgt    5     0.013 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024       32          2  avgt    5     0.027 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024       32          3  avgt    5     0.027 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024     1000          2  avgt    5     0.027 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024     1000          3  avgt    5     0.028 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024   100000          2  avgt    5     0.027 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024   100000          3  avgt    5     0.027 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048       32          2  avgt    5     0.054 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048       32          3  avgt    5     0.054 ±    0.004  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048     1000          2  avgt    5     0.055 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048     1000          3  avgt    5     0.054 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048   100000          2  avgt    5     0.053 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048   100000          3  avgt    5     0.053 ±    0.004  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096       32          2  avgt    5     0.107 ±    0.004  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096       32          3  avgt    5     0.108 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096     1000          2  avgt    5     0.107 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096     1000          3  avgt    5     0.108 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096   100000          2  avgt    5     0.106 ±    0.007  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096   100000          3  avgt    5     0.108 ±    0.007  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192       32          2  avgt    5     0.218 ±    0.017  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192       32          3  avgt    5     0.215 ±    0.015  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192     1000          2  avgt    5     0.214 ±    0.013  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192     1000          3  avgt    5     0.215 ±    0.016  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192   100000          2  avgt    5     0.214 ±    0.008  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192   100000          3  avgt    5     0.215 ±    0.012  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384       32          2  avgt    5     0.432 ±    0.034  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384       32          3  avgt    5     0.431 ±    0.025  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384     1000          2  avgt    5     0.431 ±    0.023  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384     1000          3  avgt    5     0.429 ±    0.019  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384   100000          2  avgt    5     0.432 ±    0.016  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384   100000          3  avgt    5     0.425 ±    0.022  ms/op

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.3.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 47m 56s
13 actionable tasks: 2 executed, 11 up-to-date
