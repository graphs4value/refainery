Type-safe dependency accessors is an incubating feature.
> Task :buildSrc:extractPluginRequests UP-TO-DATE
> Task :buildSrc:generatePluginAdapters UP-TO-DATE
> Task :buildSrc:compileJava UP-TO-DATE
> Task :buildSrc:compileGroovy NO-SOURCE
> Task :buildSrc:compileGroovyPlugins UP-TO-DATE
> Task :buildSrc:pluginDescriptors UP-TO-DATE
> Task :buildSrc:processResources UP-TO-DATE
> Task :buildSrc:classes UP-TO-DATE
> Task :buildSrc:jar UP-TO-DATE
> Task :buildSrc:assemble UP-TO-DATE
> Task :buildSrc:pluginUnderTestMetadata UP-TO-DATE
> Task :buildSrc:compileTestJava NO-SOURCE
> Task :buildSrc:compileTestGroovy NO-SOURCE
> Task :buildSrc:processTestResources NO-SOURCE
> Task :buildSrc:testClasses UP-TO-DATE
> Task :buildSrc:test NO-SOURCE
> Task :buildSrc:validatePlugins UP-TO-DATE
> Task :buildSrc:check UP-TO-DATE
> Task :buildSrc:build UP-TO-DATE
> Task :refinery-store:compileJava UP-TO-DATE
> Task :refinery-store:processResources NO-SOURCE
> Task :refinery-store:classes UP-TO-DATE
> Task :refinery-store:compileTestJava UP-TO-DATE
> Task :refinery-store:processTestResources NO-SOURCE
> Task :refinery-store:testClasses UP-TO-DATE
> Task :refinery-store:compileJmhJava
> Task :refinery-store:processJmhResources NO-SOURCE
> Task :refinery-store:jmhClasses

> Task :refinery-store:jmh
# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 2)

# Run progress: 0.00% complete, ETA 01:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 3)

# Run progress: 0.25% complete, ETA 01:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (? 10?³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 2)

# Run progress: 0.49% complete, ETA 01:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.018 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.025 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.021 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.015, 0.021, 0.029), stdev = 0.006
  CI (99.9%): [? 0, 0.044] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 3)

# Run progress: 0.74% complete, ETA 01:10:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.017 ms/op
# Warmup Iteration   5: 0.016 ms/op
Iteration   1: 0.019 ms/op
Iteration   2: 0.018 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.028 ms/op
Iteration   5: 0.025 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.022 ±(99.9%) 0.018 ms/op [Average]
  (min, avg, max) = (0.018, 0.022, 0.028), stdev = 0.005
  CI (99.9%): [0.005, 0.040] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 2)

# Run progress: 0.98% complete, ETA 01:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 5.243 ms/op
# Warmup Iteration   2: 4.732 ms/op
# Warmup Iteration   3: 5.118 ms/op
# Warmup Iteration   4: 4.770 ms/op
# Warmup Iteration   5: 5.399 ms/op
Iteration   1: 4.774 ms/op
Iteration   2: 4.398 ms/op
Iteration   3: 5.765 ms/op
Iteration   4: 9.976 ms/op
Iteration   5: 9.198 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  6.822 ±(99.9%) 9.964 ms/op [Average]
  (min, avg, max) = (4.398, 6.822, 9.976), stdev = 2.588
  CI (99.9%): [? 0, 16.786] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 3)

# Run progress: 1.23% complete, ETA 01:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 4.612 ms/op
# Warmup Iteration   2: 5.062 ms/op
# Warmup Iteration   3: 4.268 ms/op
# Warmup Iteration   4: 4.252 ms/op
# Warmup Iteration   5: 4.441 ms/op
Iteration   1: 4.630 ms/op
Iteration   2: 4.843 ms/op
Iteration   3: 4.434 ms/op
Iteration   4: 4.417 ms/op
Iteration   5: 4.438 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4.552 ±(99.9%) 0.709 ms/op [Average]
  (min, avg, max) = (4.417, 4.552, 4.843), stdev = 0.184
  CI (99.9%): [3.843, 5.261] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 2)

# Run progress: 1.47% complete, ETA 01:10:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: 0.001 ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 3)

# Run progress: 1.72% complete, ETA 01:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 2)

# Run progress: 1.96% complete, ETA 01:10:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.015 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.014, 0.015, 0.015), stdev = 0.001
  CI (99.9%): [0.014, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 3)

# Run progress: 2.21% complete, ETA 01:09:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.020 ms/op
Iteration   1: 0.020 ms/op
Iteration   2: 0.019 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.021 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.022 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.019, 0.022, 0.030), stdev = 0.005
  CI (99.9%): [0.003, 0.041] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 2)

# Run progress: 2.45% complete, ETA 01:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 4.658 ms/op
# Warmup Iteration   2: 4.626 ms/op
# Warmup Iteration   3: 5.080 ms/op
# Warmup Iteration   4: 4.970 ms/op
# Warmup Iteration   5: 5.106 ms/op
Iteration   1: 3.675 ms/op
Iteration   2: 4.916 ms/op
Iteration   3: 4.602 ms/op
Iteration   4: 6.057 ms/op
Iteration   5: 6.561 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  5.162 ±(99.9%) 4.451 ms/op [Average]
  (min, avg, max) = (3.675, 5.162, 6.561), stdev = 1.156
  CI (99.9%): [0.711, 9.613] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 3)

# Run progress: 2.70% complete, ETA 01:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 5.002 ms/op
# Warmup Iteration   2: 4.314 ms/op
# Warmup Iteration   3: 3.982 ms/op
# Warmup Iteration   4: 4.290 ms/op
# Warmup Iteration   5: 4.979 ms/op
Iteration   1: 4.073 ms/op
Iteration   2: 3.576 ms/op
Iteration   3: 6.150 ms/op
Iteration   4: 7.196 ms/op
Iteration   5: 6.423 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  5.484 ±(99.9%) 6.054 ms/op [Average]
  (min, avg, max) = (3.576, 5.484, 7.196), stdev = 1.572
  CI (99.9%): [? 0, 11.538] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 2)

# Run progress: 2.94% complete, ETA 01:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 3)

# Run progress: 3.19% complete, ETA 01:09:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 2)

# Run progress: 3.43% complete, ETA 01:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.018 ms/op
Iteration   1: 0.017 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.024 ms/op
Iteration   5: 0.026 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.020 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.017, 0.020, 0.026), stdev = 0.004
  CI (99.9%): [0.005, 0.036] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 3)

# Run progress: 3.68% complete, ETA 01:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.017 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.017 ms/op
Iteration   1: 0.017 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.022 ms/op
Iteration   4: 0.028 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.022 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (0.017, 0.022, 0.028), stdev = 0.005
  CI (99.9%): [0.002, 0.043] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 2)

# Run progress: 3.92% complete, ETA 01:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 5.361 ms/op
# Warmup Iteration   2: 5.228 ms/op
# Warmup Iteration   3: 4.584 ms/op
# Warmup Iteration   4: 4.061 ms/op
# Warmup Iteration   5: 4.555 ms/op
Iteration   1: 5.578 ms/op
Iteration   2: 6.109 ms/op
Iteration   3: 7.918 ms/op
Iteration   4: 7.281 ms/op
Iteration   5: 8.016 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  6.981 ±(99.9%) 4.204 ms/op [Average]
  (min, avg, max) = (5.578, 6.981, 8.016), stdev = 1.092
  CI (99.9%): [2.777, 11.184] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 3)

# Run progress: 4.17% complete, ETA 01:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 4.711 ms/op
# Warmup Iteration   2: 4.336 ms/op
# Warmup Iteration   3: 4.060 ms/op
# Warmup Iteration   4: 4.951 ms/op
# Warmup Iteration   5: 5.442 ms/op
Iteration   1: 4.619 ms/op
Iteration   2: 4.586 ms/op
Iteration   3: 6.444 ms/op
Iteration   4: 7.111 ms/op
Iteration   5: 7.316 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  6.015 ±(99.9%) 5.120 ms/op [Average]
  (min, avg, max) = (4.586, 6.015, 7.316), stdev = 1.330
  CI (99.9%): [0.896, 11.135] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 2)

# Run progress: 4.41% complete, ETA 01:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 3)

# Run progress: 4.66% complete, ETA 01:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 2)

# Run progress: 4.90% complete, ETA 01:08:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.017 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.016 ms/op
Iteration   1: 0.016 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.020 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.021 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.016, 0.021, 0.027), stdev = 0.005
  CI (99.9%): [0.002, 0.041] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 3)

# Run progress: 5.15% complete, ETA 01:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.019 ms/op
Iteration   4: 0.015 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.016 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.015, 0.016, 0.019), stdev = 0.002
  CI (99.9%): [0.009, 0.023] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 2)

# Run progress: 5.39% complete, ETA 01:07:50
# Fork: 1 of 1
# Warmup Iteration   1: 4.546 ms/op
# Warmup Iteration   2: 4.250 ms/op
# Warmup Iteration   3: 4.195 ms/op
# Warmup Iteration   4: 3.529 ms/op
# Warmup Iteration   5: 4.073 ms/op
Iteration   1: 4.153 ms/op
Iteration   2: 4.462 ms/op
Iteration   3: 5.325 ms/op
Iteration   4: 5.120 ms/op
Iteration   5: 5.248 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4.862 ±(99.9%) 2.012 ms/op [Average]
  (min, avg, max) = (4.153, 4.862, 5.325), stdev = 0.523
  CI (99.9%): [2.849, 6.874] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 3)

# Run progress: 5.64% complete, ETA 01:07:43
# Fork: 1 of 1
# Warmup Iteration   1: 4.744 ms/op
# Warmup Iteration   2: 4.317 ms/op
# Warmup Iteration   3: 5.386 ms/op
# Warmup Iteration   4: 4.777 ms/op
# Warmup Iteration   5: 4.553 ms/op
Iteration   1: 4.182 ms/op
Iteration   2: 4.353 ms/op
Iteration   3: 5.164 ms/op
Iteration   4: 5.368 ms/op
Iteration   5: 4.911 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4.796 ±(99.9%) 1.972 ms/op [Average]
  (min, avg, max) = (4.182, 4.796, 5.368), stdev = 0.512
  CI (99.9%): [2.823, 6.768] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 5.88% complete, ETA 01:07:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 6.13% complete, ETA 01:07:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 6.37% complete, ETA 01:07:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.030 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.029 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.029 ms/op
Iteration   5: 0.031 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.030 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.029, 0.030, 0.031), stdev = 0.001
  CI (99.9%): [0.026, 0.033] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 6.62% complete, ETA 01:06:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.029 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.029 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.029, 0.029, 0.030), stdev = 0.001
  CI (99.9%): [0.028, 0.031] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 6.86% complete, ETA 01:06:46
# Fork: 1 of 1
# Warmup Iteration   1: 8.590 ms/op
# Warmup Iteration   2: 8.437 ms/op
# Warmup Iteration   3: 8.691 ms/op
# Warmup Iteration   4: 11.274 ms/op
# Warmup Iteration   5: 11.836 ms/op
Iteration   1: 11.383 ms/op
Iteration   2: 11.844 ms/op
Iteration   3: 10.310 ms/op
Iteration   4: 14.310 ms/op
Iteration   5: 11.829 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  11.935 ±(99.9%) 5.648 ms/op [Average]
  (min, avg, max) = (10.310, 11.935, 14.310), stdev = 1.467
  CI (99.9%): [6.287, 17.584] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 7.11% complete, ETA 01:06:41
# Fork: 1 of 1
# Warmup Iteration   1: 8.391 ms/op
# Warmup Iteration   2: 7.359 ms/op
# Warmup Iteration   3: 7.406 ms/op
# Warmup Iteration   4: 7.410 ms/op
# Warmup Iteration   5: 8.607 ms/op
Iteration   1: 8.207 ms/op
Iteration   2: 8.126 ms/op
Iteration   3: 8.655 ms/op
Iteration   4: 15.866 ms/op
Iteration   5: 14.335 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  11.038 ±(99.9%) 14.453 ms/op [Average]
  (min, avg, max) = (8.126, 11.038, 15.866), stdev = 3.753
  CI (99.9%): [? 0, 25.491] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 7.35% complete, ETA 01:06:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.003 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [? 0, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 7.60% complete, ETA 01:06:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 10??, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 7.84% complete, ETA 01:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.067 ms/op
# Warmup Iteration   2: 0.058 ms/op
# Warmup Iteration   3: 0.059 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.059 ms/op
Iteration   1: 0.060 ms/op
Iteration   2: 0.059 ms/op
Iteration   3: 0.067 ms/op
Iteration   4: 0.096 ms/op
Iteration   5: 0.088 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.074 ±(99.9%) 0.065 ms/op [Average]
  (min, avg, max) = (0.059, 0.074, 0.096), stdev = 0.017
  CI (99.9%): [0.009, 0.139] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 8.09% complete, ETA 01:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.065 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.058 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.059 ms/op
Iteration   1: 0.060 ms/op
Iteration   2: 0.059 ms/op
Iteration   3: 0.068 ms/op
Iteration   4: 0.096 ms/op
Iteration   5: 0.098 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.076 ±(99.9%) 0.073 ms/op [Average]
  (min, avg, max) = (0.059, 0.076, 0.098), stdev = 0.019
  CI (99.9%): [0.003, 0.150] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 8.33% complete, ETA 01:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 19.102 ms/op
# Warmup Iteration   2: 20.010 ms/op
# Warmup Iteration   3: 16.565 ms/op
# Warmup Iteration   4: 16.657 ms/op
# Warmup Iteration   5: 20.284 ms/op
Iteration   1: 16.450 ms/op
Iteration   2: 15.731 ms/op
Iteration   3: 23.153 ms/op
Iteration   4: 34.190 ms/op
Iteration   5: 26.894 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  23.283 ±(99.9%) 29.561 ms/op [Average]
  (min, avg, max) = (15.731, 23.283, 34.190), stdev = 7.677
  CI (99.9%): [? 0, 52.844] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 8.58% complete, ETA 01:05:39
# Fork: 1 of 1
# Warmup Iteration   1: 17.278 ms/op
# Warmup Iteration   2: 16.446 ms/op
# Warmup Iteration   3: 15.276 ms/op
# Warmup Iteration   4: 16.235 ms/op
# Warmup Iteration   5: 15.456 ms/op
Iteration   1: 14.787 ms/op
Iteration   2: 19.067 ms/op
Iteration   3: 22.126 ms/op
Iteration   4: 27.549 ms/op
Iteration   5: 27.275 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  22.160 ±(99.9%) 21.014 ms/op [Average]
  (min, avg, max) = (14.787, 22.160, 27.549), stdev = 5.457
  CI (99.9%): [1.146, 43.175] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 8.82% complete, ETA 01:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.005 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.003, 0.005, 0.006), stdev = 0.002
  CI (99.9%): [? 0, 0.011] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 9.07% complete, ETA 01:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.004 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [? 10??, 0.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 9.31% complete, ETA 01:05:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.114 ms/op
# Warmup Iteration   2: 0.109 ms/op
# Warmup Iteration   3: 0.102 ms/op
# Warmup Iteration   4: 0.102 ms/op
# Warmup Iteration   5: 0.104 ms/op
Iteration   1: 0.102 ms/op
Iteration   2: 0.104 ms/op
Iteration   3: 0.115 ms/op
Iteration   4: 0.165 ms/op
Iteration   5: 0.193 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.136 ±(99.9%) 0.158 ms/op [Average]
  (min, avg, max) = (0.102, 0.136, 0.193), stdev = 0.041
  CI (99.9%): [? 0, 0.294] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 9.56% complete, ETA 01:04:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.114 ms/op
# Warmup Iteration   2: 0.104 ms/op
# Warmup Iteration   3: 0.104 ms/op
# Warmup Iteration   4: 0.102 ms/op
# Warmup Iteration   5: 0.101 ms/op
Iteration   1: 0.106 ms/op
Iteration   2: 0.109 ms/op
Iteration   3: 0.123 ms/op
Iteration   4: 0.136 ms/op
Iteration   5: 0.137 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.122 ±(99.9%) 0.056 ms/op [Average]
  (min, avg, max) = (0.106, 0.122, 0.137), stdev = 0.015
  CI (99.9%): [0.066, 0.178] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 9.80% complete, ETA 01:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 30.563 ms/op
# Warmup Iteration   2: 30.584 ms/op
# Warmup Iteration   3: 25.623 ms/op
# Warmup Iteration   4: 35.944 ms/op
# Warmup Iteration   5: 31.390 ms/op
Iteration   1: 29.987 ms/op
Iteration   2: 30.578 ms/op
Iteration   3: 37.251 ms/op
Iteration   4: 46.785 ms/op
Iteration   5: 46.018 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  38.124 ±(99.9%) 31.118 ms/op [Average]
  (min, avg, max) = (29.987, 38.124, 46.785), stdev = 8.081
  CI (99.9%): [7.005, 69.242] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 10.05% complete, ETA 01:04:40
# Fork: 1 of 1
# Warmup Iteration   1: 30.734 ms/op
# Warmup Iteration   2: 29.820 ms/op
# Warmup Iteration   3: 29.348 ms/op
# Warmup Iteration   4: 30.875 ms/op
# Warmup Iteration   5: 29.249 ms/op
Iteration   1: 29.145 ms/op
Iteration   2: 32.065 ms/op
Iteration   3: 37.328 ms/op
Iteration   4: 42.307 ms/op
Iteration   5: 54.916 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  39.152 ±(99.9%) 39.087 ms/op [Average]
  (min, avg, max) = (29.145, 39.152, 54.916), stdev = 10.151
  CI (99.9%): [0.065, 78.240] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 10.29% complete, ETA 01:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.011 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.008 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.011), stdev = 0.002
  CI (99.9%): [? 0, 0.017] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 10.54% complete, ETA 01:04:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.010 ms/op
Iteration   5: 0.011 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.008 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.011), stdev = 0.002
  CI (99.9%): [? 10??, 0.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 10.78% complete, ETA 01:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.209 ms/op
# Warmup Iteration   2: 0.193 ms/op
# Warmup Iteration   3: 0.196 ms/op
# Warmup Iteration   4: 0.190 ms/op
# Warmup Iteration   5: 0.191 ms/op
Iteration   1: 0.192 ms/op
Iteration   2: 0.189 ms/op
Iteration   3: 0.226 ms/op
Iteration   4: 0.341 ms/op
Iteration   5: 0.321 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.254 ±(99.9%) 0.279 ms/op [Average]
  (min, avg, max) = (0.189, 0.254, 0.341), stdev = 0.072
  CI (99.9%): [? 0, 0.533] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 11.03% complete, ETA 01:03:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.210 ms/op
# Warmup Iteration   2: 0.193 ms/op
# Warmup Iteration   3: 0.197 ms/op
# Warmup Iteration   4: 0.189 ms/op
# Warmup Iteration   5: 0.191 ms/op
Iteration   1: 0.190 ms/op
Iteration   2: 0.189 ms/op
Iteration   3: 0.231 ms/op
Iteration   4: 0.292 ms/op
Iteration   5: 0.359 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.252 ±(99.9%) 0.281 ms/op [Average]
  (min, avg, max) = (0.189, 0.252, 0.359), stdev = 0.073
  CI (99.9%): [? 0, 0.534] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 11.27% complete, ETA 01:03:45
# Fork: 1 of 1
# Warmup Iteration   1: 59.308 ms/op
# Warmup Iteration   2: 51.690 ms/op
# Warmup Iteration   3: 56.679 ms/op
# Warmup Iteration   4: 59.401 ms/op
# Warmup Iteration   5: 53.085 ms/op
Iteration   1: 68.811 ms/op
Iteration   2: 71.932 ms/op
Iteration   3: 87.134 ms/op
Iteration   4: 78.282 ms/op
Iteration   5: 71.119 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  75.456 ±(99.9%) 28.541 ms/op [Average]
  (min, avg, max) = (68.811, 75.456, 87.134), stdev = 7.412
  CI (99.9%): [46.915, 103.996] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 11.52% complete, ETA 01:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 54.148 ms/op
# Warmup Iteration   2: 64.490 ms/op
# Warmup Iteration   3: 76.533 ms/op
# Warmup Iteration   4: 64.876 ms/op
# Warmup Iteration   5: 72.804 ms/op
Iteration   1: 66.926 ms/op
Iteration   2: 72.116 ms/op
Iteration   3: 105.454 ms/op
Iteration   4: 81.220 ms/op
Iteration   5: 81.832 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  81.510 ±(99.9%) 56.934 ms/op [Average]
  (min, avg, max) = (66.926, 81.510, 105.454), stdev = 14.786
  CI (99.9%): [24.576, 138.443] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 11.76% complete, ETA 01:03:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.014 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.017 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.014, 0.017, 0.022), stdev = 0.004
  CI (99.9%): [0.003, 0.032] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 12.01% complete, ETA 01:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.014 ms/op
# Warmup Iteration   2: 0.013 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.020 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.018 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.013, 0.018, 0.027), stdev = 0.006
  CI (99.9%): [? 0, 0.040] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 12.25% complete, ETA 01:03:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.423 ms/op
# Warmup Iteration   2: 0.400 ms/op
# Warmup Iteration   3: 0.419 ms/op
# Warmup Iteration   4: 0.421 ms/op
# Warmup Iteration   5: 0.420 ms/op
Iteration   1: 0.420 ms/op
Iteration   2: 0.417 ms/op
Iteration   3: 0.506 ms/op
Iteration   4: 0.713 ms/op
Iteration   5: 0.605 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.532 ±(99.9%) 0.489 ms/op [Average]
  (min, avg, max) = (0.417, 0.532, 0.713), stdev = 0.127
  CI (99.9%): [0.043, 1.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 12.50% complete, ETA 01:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.424 ms/op
# Warmup Iteration   2: 0.390 ms/op
# Warmup Iteration   3: 0.389 ms/op
# Warmup Iteration   4: 0.393 ms/op
# Warmup Iteration   5: 0.396 ms/op
Iteration   1: 0.471 ms/op
Iteration   2: 0.441 ms/op
Iteration   3: 0.498 ms/op
Iteration   4: 0.664 ms/op
Iteration   5: 0.665 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.548 ±(99.9%) 0.417 ms/op [Average]
  (min, avg, max) = (0.441, 0.548, 0.665), stdev = 0.108
  CI (99.9%): [0.131, 0.965] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 12.75% complete, ETA 01:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 114.923 ms/op
# Warmup Iteration   2: 118.756 ms/op
# Warmup Iteration   3: 128.340 ms/op
# Warmup Iteration   4: 167.784 ms/op
# Warmup Iteration   5: 128.447 ms/op
Iteration   1: 165.902 ms/op
Iteration   2: 145.843 ms/op
Iteration   3: 202.148 ms/op
Iteration   4: 179.055 ms/op
Iteration   5: 141.866 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  166.963 ±(99.9%) 95.518 ms/op [Average]
  (min, avg, max) = (141.866, 166.963, 202.148), stdev = 24.806
  CI (99.9%): [71.445, 262.481] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 12.99% complete, ETA 01:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 116.708 ms/op
# Warmup Iteration   2: 135.123 ms/op
# Warmup Iteration   3: 131.961 ms/op
# Warmup Iteration   4: 129.118 ms/op
# Warmup Iteration   5: 127.212 ms/op
Iteration   1: 122.879 ms/op
Iteration   2: 129.045 ms/op
Iteration   3: 198.598 ms/op
Iteration   4: 158.039 ms/op
Iteration   5: 168.406 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  155.394 ±(99.9%) 118.596 ms/op [Average]
  (min, avg, max) = (122.879, 155.394, 198.598), stdev = 30.799
  CI (99.9%): [36.797, 273.990] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 13.24% complete, ETA 01:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.029 ms/op
# Warmup Iteration   2: 0.026 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.026 ms/op
# Warmup Iteration   5: 0.025 ms/op
Iteration   1: 0.025 ms/op
Iteration   2: 0.025 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.046 ms/op
Iteration   5: 0.045 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.034 ±(99.9%) 0.040 ms/op [Average]
  (min, avg, max) = (0.025, 0.034, 0.046), stdev = 0.010
  CI (99.9%): [? 0, 0.075] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 13.48% complete, ETA 01:02:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.029 ms/op
# Warmup Iteration   2: 0.026 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.034 ms/op
Iteration   4: 0.048 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.037 ±(99.9%) 0.040 ms/op [Average]
  (min, avg, max) = (0.027, 0.037, 0.048), stdev = 0.010
  CI (99.9%): [? 0, 0.077] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 13.73% complete, ETA 01:02:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.865 ms/op
# Warmup Iteration   2: 0.760 ms/op
# Warmup Iteration   3: 0.779 ms/op
# Warmup Iteration   4: 0.756 ms/op
# Warmup Iteration   5: 0.768 ms/op
Iteration   1: 0.770 ms/op
Iteration   2: 0.765 ms/op
Iteration   3: 0.908 ms/op
Iteration   4: 1.295 ms/op
Iteration   5: 1.166 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.981 ±(99.9%) 0.922 ms/op [Average]
  (min, avg, max) = (0.765, 0.981, 1.295), stdev = 0.239
  CI (99.9%): [0.059, 1.903] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 13.97% complete, ETA 01:02:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.989 ms/op
# Warmup Iteration   2: 0.854 ms/op
# Warmup Iteration   3: 0.989 ms/op
# Warmup Iteration   4: 0.926 ms/op
# Warmup Iteration   5: 0.864 ms/op
Iteration   1: 0.851 ms/op
Iteration   2: 0.881 ms/op
Iteration   3: 1.090 ms/op
Iteration   4: 2.030 ms/op
Iteration   5: 1.467 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1.264 ±(99.9%) 1.902 ms/op [Average]
  (min, avg, max) = (0.851, 1.264, 2.030), stdev = 0.494
  CI (99.9%): [? 0, 3.166] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 14.22% complete, ETA 01:01:51
# Fork: 1 of 1
# Warmup Iteration   1: 299.521 ms/op
# Warmup Iteration   2: 271.553 ms/op
# Warmup Iteration   3: 306.211 ms/op
# Warmup Iteration   4: 286.704 ms/op
# Warmup Iteration   5: 284.089 ms/op
Iteration   1: 267.711 ms/op
Iteration   2: 280.626 ms/op
Iteration   3: 382.990 ms/op
Iteration   4: 434.945 ms/op
Iteration   5: 358.400 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  344.935 ±(99.9%) 271.125 ms/op [Average]
  (min, avg, max) = (267.711, 344.935, 434.945), stdev = 70.410
  CI (99.9%): [73.810, 616.059] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 14.46% complete, ETA 01:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 290.423 ms/op
# Warmup Iteration   2: 276.940 ms/op
# Warmup Iteration   3: 256.684 ms/op
# Warmup Iteration   4: 276.048 ms/op
# Warmup Iteration   5: 243.974 ms/op
Iteration   1: 297.831 ms/op
Iteration   2: 277.514 ms/op
Iteration   3: 353.071 ms/op
Iteration   4: 355.299 ms/op
Iteration   5: 359.281 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  328.599 ±(99.9%) 146.747 ms/op [Average]
  (min, avg, max) = (277.514, 328.599, 359.281), stdev = 38.110
  CI (99.9%): [181.852, 475.346] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 14.71% complete, ETA 01:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.065 ms/op
# Warmup Iteration   2: 0.062 ms/op
# Warmup Iteration   3: 0.059 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.060 ms/op
Iteration   1: 0.058 ms/op
Iteration   2: 0.058 ms/op
Iteration   3: 0.082 ms/op
Iteration   4: 0.110 ms/op
Iteration   5: 0.104 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.083 ±(99.9%) 0.095 ms/op [Average]
  (min, avg, max) = (0.058, 0.083, 0.110), stdev = 0.025
  CI (99.9%): [? 0, 0.178] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 14.95% complete, ETA 01:01:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.065 ms/op
# Warmup Iteration   2: 0.058 ms/op
# Warmup Iteration   3: 0.057 ms/op
# Warmup Iteration   4: 0.056 ms/op
# Warmup Iteration   5: 0.057 ms/op
Iteration   1: 0.058 ms/op
Iteration   2: 0.057 ms/op
Iteration   3: 0.074 ms/op
Iteration   4: 0.130 ms/op
Iteration   5: 0.118 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.087 ±(99.9%) 0.132 ms/op [Average]
  (min, avg, max) = (0.057, 0.087, 0.130), stdev = 0.034
  CI (99.9%): [? 0, 0.219] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 15.20% complete, ETA 01:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 1.842 ms/op
# Warmup Iteration   2: 1.672 ms/op
# Warmup Iteration   3: 1.609 ms/op
# Warmup Iteration   4: 1.729 ms/op
# Warmup Iteration   5: 1.729 ms/op
Iteration   1: 1.666 ms/op
Iteration   2: 1.632 ms/op
Iteration   3: 2.173 ms/op
Iteration   4: 3.282 ms/op
Iteration   5: 2.860 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2.323 ±(99.9%) 2.816 ms/op [Average]
  (min, avg, max) = (1.632, 2.323, 3.282), stdev = 0.731
  CI (99.9%): [? 0, 5.139] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 15.44% complete, ETA 01:01:25
# Fork: 1 of 1
# Warmup Iteration   1: 1.877 ms/op
# Warmup Iteration   2: 1.619 ms/op
# Warmup Iteration   3: 1.677 ms/op
# Warmup Iteration   4: 1.607 ms/op
# Warmup Iteration   5: 1.615 ms/op
Iteration   1: 1.733 ms/op
Iteration   2: 1.625 ms/op
Iteration   3: 2.194 ms/op
Iteration   4: 3.385 ms/op
Iteration   5: 3.247 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2.437 ±(99.9%) 3.204 ms/op [Average]
  (min, avg, max) = (1.625, 2.437, 3.385), stdev = 0.832
  CI (99.9%): [? 0, 5.641] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 15.69% complete, ETA 01:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 602.566 ms/op
# Warmup Iteration   2: 511.100 ms/op
# Warmup Iteration   3: 672.931 ms/op
# Warmup Iteration   4: 661.237 ms/op
# Warmup Iteration   5: 599.121 ms/op
Iteration   1: 750.651 ms/op
Iteration   2: 871.170 ms/op
Iteration   3: 784.403 ms/op
Iteration   4: 826.993 ms/op
Iteration   5: 882.381 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  823.120 ±(99.9%) 216.001 ms/op [Average]
  (min, avg, max) = (750.651, 823.120, 882.381), stdev = 56.095
  CI (99.9%): [607.118, 1039.121] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 15.93% complete, ETA 01:01:28
# Fork: 1 of 1
# Warmup Iteration   1: 746.716 ms/op
# Warmup Iteration   2: 797.680 ms/op
# Warmup Iteration   3: 718.432 ms/op
# Warmup Iteration   4: 634.687 ms/op
# Warmup Iteration   5: 686.718 ms/op
Iteration   1: 814.581 ms/op
Iteration   2: 833.740 ms/op
Iteration   3: 775.915 ms/op
Iteration   4: 803.903 ms/op
Iteration   5: 1118.515 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  869.331 ±(99.9%) 542.396 ms/op [Average]
  (min, avg, max) = (775.915, 869.331, 1118.515), stdev = 140.858
  CI (99.9%): [326.935, 1411.726] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 16.18% complete, ETA 01:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.117 ms/op
# Warmup Iteration   2: 0.103 ms/op
# Warmup Iteration   3: 0.103 ms/op
# Warmup Iteration   4: 0.111 ms/op
# Warmup Iteration   5: 0.123 ms/op
Iteration   1: 0.130 ms/op
Iteration   2: 0.130 ms/op
Iteration   3: 0.166 ms/op
Iteration   4: 0.269 ms/op
Iteration   5: 0.177 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.174 ±(99.9%) 0.219 ms/op [Average]
  (min, avg, max) = (0.130, 0.174, 0.269), stdev = 0.057
  CI (99.9%): [? 0, 0.394] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 16.42% complete, ETA 01:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.120 ms/op
# Warmup Iteration   2: 0.112 ms/op
# Warmup Iteration   3: 0.108 ms/op
# Warmup Iteration   4: 0.110 ms/op
# Warmup Iteration   5: 0.109 ms/op
Iteration   1: 0.108 ms/op
Iteration   2: 0.115 ms/op
Iteration   3: 0.136 ms/op
Iteration   4: 0.172 ms/op
Iteration   5: 0.178 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.142 ±(99.9%) 0.124 ms/op [Average]
  (min, avg, max) = (0.108, 0.142, 0.178), stdev = 0.032
  CI (99.9%): [0.018, 0.265] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 16.67% complete, ETA 01:01:18
# Fork: 1 of 1
# Warmup Iteration   1: 3.475 ms/op
# Warmup Iteration   2: 3.176 ms/op
# Warmup Iteration   3: 3.042 ms/op
# Warmup Iteration   4: 3.162 ms/op
# Warmup Iteration   5: 3.487 ms/op
Iteration   1: 3.604 ms/op
Iteration   2: 3.677 ms/op
Iteration   3: 4.745 ms/op
Iteration   4: 6.079 ms/op
Iteration   5: 5.577 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4.736 ±(99.9%) 4.268 ms/op [Average]
  (min, avg, max) = (3.604, 4.736, 6.079), stdev = 1.108
  CI (99.9%): [0.468, 9.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 16.91% complete, ETA 01:01:06
# Fork: 1 of 1
# Warmup Iteration   1: 3.441 ms/op
# Warmup Iteration   2: 3.378 ms/op
# Warmup Iteration   3: 3.550 ms/op
# Warmup Iteration   4: 3.461 ms/op
# Warmup Iteration   5: 3.519 ms/op
Iteration   1: 3.346 ms/op
Iteration   2: 3.153 ms/op
Iteration   3: 4.014 ms/op
Iteration   4: 5.344 ms/op
Iteration   5: 5.362 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4.244 ±(99.9%) 4.088 ms/op [Average]
  (min, avg, max) = (3.153, 4.244, 5.362), stdev = 1.062
  CI (99.9%): [0.156, 8.331] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 17.16% complete, ETA 01:00:53
# Fork: 1 of 1
# Warmup Iteration   1: 1065.625 ms/op
# Warmup Iteration   2: 1012.803 ms/op
# Warmup Iteration   3: 1507.974 ms/op
# Warmup Iteration   4: 2233.065 ms/op
# Warmup Iteration   5: 1436.668 ms/op
Iteration   1: 1818.866 ms/op
Iteration   2: 1731.879 ms/op
Iteration   3: 1627.828 ms/op
Iteration   4: 1925.012 ms/op
Iteration   5: 1448.604 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1710.438 ±(99.9%) 703.835 ms/op [Average]
  (min, avg, max) = (1448.604, 1710.438, 1925.012), stdev = 182.784
  CI (99.9%): [1006.603, 2414.273] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 17.40% complete, ETA 01:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 1097.994 ms/op
# Warmup Iteration   2: 1324.546 ms/op
# Warmup Iteration   3: 1175.684 ms/op
# Warmup Iteration   4: 1388.243 ms/op
# Warmup Iteration   5: 1061.196 ms/op
Iteration   1: 1197.209 ms/op
Iteration   2: 1438.915 ms/op
Iteration   3: 1370.360 ms/op
Iteration   4: 1377.913 ms/op
Iteration   5: 1600.951 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1397.070 ±(99.9%) 559.151 ms/op [Average]
  (min, avg, max) = (1197.209, 1397.070, 1600.951), stdev = 145.210
  CI (99.9%): [837.918, 1956.221] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 17.65% complete, ETA 01:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.250 ms/op
# Warmup Iteration   2: 0.204 ms/op
# Warmup Iteration   3: 0.201 ms/op
# Warmup Iteration   4: 0.201 ms/op
# Warmup Iteration   5: 0.201 ms/op
Iteration   1: 0.206 ms/op
Iteration   2: 0.203 ms/op
Iteration   3: 0.242 ms/op
Iteration   4: 0.352 ms/op
Iteration   5: 0.355 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.271 ±(99.9%) 0.295 ms/op [Average]
  (min, avg, max) = (0.203, 0.271, 0.355), stdev = 0.077
  CI (99.9%): [? 0, 0.566] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 17.89% complete, ETA 01:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.263 ms/op
# Warmup Iteration   2: 0.223 ms/op
# Warmup Iteration   3: 0.234 ms/op
# Warmup Iteration   4: 0.216 ms/op
# Warmup Iteration   5: 0.214 ms/op
Iteration   1: 0.209 ms/op
Iteration   2: 0.213 ms/op
Iteration   3: 0.263 ms/op
Iteration   4: 0.381 ms/op
Iteration   5: 0.371 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.287 ±(99.9%) 0.323 ms/op [Average]
  (min, avg, max) = (0.209, 0.287, 0.381), stdev = 0.084
  CI (99.9%): [? 0, 0.610] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 18.14% complete, ETA 01:00:48
# Fork: 1 of 1
# Warmup Iteration   1: 7.545 ms/op
# Warmup Iteration   2: 6.589 ms/op
# Warmup Iteration   3: 6.315 ms/op
# Warmup Iteration   4: 6.326 ms/op
# Warmup Iteration   5: 6.298 ms/op
Iteration   1: 6.219 ms/op
Iteration   2: 6.434 ms/op
Iteration   3: 7.565 ms/op
Iteration   4: 11.286 ms/op
Iteration   5: 11.023 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  8.505 ±(99.9%) 9.524 ms/op [Average]
  (min, avg, max) = (6.219, 8.505, 11.286), stdev = 2.473
  CI (99.9%): [? 0, 18.030] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 18.38% complete, ETA 01:00:36
# Fork: 1 of 1
# Warmup Iteration   1: 7.362 ms/op
# Warmup Iteration   2: 6.467 ms/op
# Warmup Iteration   3: 6.366 ms/op
# Warmup Iteration   4: 6.351 ms/op
# Warmup Iteration   5: 6.347 ms/op
Iteration   1: 6.437 ms/op
Iteration   2: 6.528 ms/op
Iteration   3: 7.487 ms/op
Iteration   4: 10.479 ms/op
Iteration   5: 11.675 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  8.521 ±(99.9%) 9.266 ms/op [Average]
  (min, avg, max) = (6.437, 8.521, 11.675), stdev = 2.406
  CI (99.9%): [? 0, 17.787] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 18.63% complete, ETA 01:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 2197.253 ms/op
# Warmup Iteration   2: 2379.829 ms/op
# Warmup Iteration   3: 2225.111 ms/op
# Warmup Iteration   4: 2678.125 ms/op
# Warmup Iteration   5: 3160.458 ms/op
Iteration   1: 3097.307 ms/op
Iteration   2: 2889.649 ms/op
Iteration   3: 2936.006 ms/op
Iteration   4: 3596.513 ms/op
Iteration   5: 3567.596 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  3217.414 ±(99.9%) 1316.264 ms/op [Average]
  (min, avg, max) = (2889.649, 3217.414, 3596.513), stdev = 341.830
  CI (99.9%): [1901.150, 4533.679] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 18.87% complete, ETA 01:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 2584.262 ms/op
# Warmup Iteration   2: 3350.119 ms/op
# Warmup Iteration   3: 3637.401 ms/op
# Warmup Iteration   4: 4201.433 ms/op
# Warmup Iteration   5: 4129.080 ms/op
Iteration   1: 3799.251 ms/op
Iteration   2: 4261.969 ms/op
Iteration   3: 4783.324 ms/op
Iteration   4: 3624.092 ms/op
Iteration   5: 3597.599 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4013.247 ±(99.9%) 1949.126 ms/op [Average]
  (min, avg, max) = (3597.599, 4013.247, 4783.324), stdev = 506.182
  CI (99.9%): [2064.121, 5962.372] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 19.12% complete, ETA 01:03:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.594 ms/op
# Warmup Iteration   2: 0.464 ms/op
# Warmup Iteration   3: 0.436 ms/op
# Warmup Iteration   4: 0.454 ms/op
# Warmup Iteration   5: 0.439 ms/op
Iteration   1: 0.423 ms/op
Iteration   2: 0.431 ms/op
Iteration   3: 0.552 ms/op
Iteration   4: 0.723 ms/op
Iteration   5: 0.809 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.588 ±(99.9%) 0.668 ms/op [Average]
  (min, avg, max) = (0.423, 0.588, 0.809), stdev = 0.174
  CI (99.9%): [? 0, 1.256] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 19.36% complete, ETA 01:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.500 ms/op
# Warmup Iteration   2: 0.434 ms/op
# Warmup Iteration   3: 0.446 ms/op
# Warmup Iteration   4: 0.444 ms/op
# Warmup Iteration   5: 0.446 ms/op
Iteration   1: 0.462 ms/op
Iteration   2: 0.449 ms/op
Iteration   3: 0.530 ms/op
Iteration   4: 0.789 ms/op
Iteration   5: 0.846 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.615 ±(99.9%) 0.726 ms/op [Average]
  (min, avg, max) = (0.449, 0.615, 0.846), stdev = 0.188
  CI (99.9%): [? 0, 1.341] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 19.61% complete, ETA 01:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 17.919 ms/op
# Warmup Iteration   2: 15.359 ms/op
# Warmup Iteration   3: 14.403 ms/op
# Warmup Iteration   4: 13.310 ms/op
# Warmup Iteration   5: 15.442 ms/op
Iteration   1: 14.106 ms/op
Iteration   2: 12.487 ms/op
Iteration   3: 17.249 ms/op
Iteration   4: 19.872 ms/op
Iteration   5: 23.150 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  17.373 ±(99.9%) 16.582 ms/op [Average]
  (min, avg, max) = (12.487, 17.373, 23.150), stdev = 4.306
  CI (99.9%): [0.791, 33.955] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 19.85% complete, ETA 01:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 17.885 ms/op
# Warmup Iteration   2: 15.185 ms/op
# Warmup Iteration   3: 13.460 ms/op
# Warmup Iteration   4: 13.336 ms/op
# Warmup Iteration   5: 13.854 ms/op
Iteration   1: 14.678 ms/op
Iteration   2: 13.824 ms/op
Iteration   3: 17.089 ms/op
Iteration   4: 23.046 ms/op
Iteration   5: 23.773 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  18.482 ±(99.9%) 17.951 ms/op [Average]
  (min, avg, max) = (13.824, 18.482, 23.773), stdev = 4.662
  CI (99.9%): [0.531, 36.433] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 20.10% complete, ETA 01:02:32
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 20.34% complete, ETA 01:02:43
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 20.59% complete, ETA 01:02:52
# Fork: 1 of 1
# Warmup Iteration   1: 1.680 ms/op
# Warmup Iteration   2: 1.165 ms/op
# Warmup Iteration   3: 1.229 ms/op
# Warmup Iteration   4: 1.022 ms/op
# Warmup Iteration   5: 1.061 ms/op
Iteration   1: 1.207 ms/op
Iteration   2: 1.045 ms/op
Iteration   3: 0.936 ms/op
Iteration   4: 0.902 ms/op
Iteration   5: 0.909 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  1.000 ±(99.9%) 0.497 ms/op [Average]
  (min, avg, max) = (0.902, 1.000, 1.207), stdev = 0.129
  CI (99.9%): [0.502, 1.497] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 20.83% complete, ETA 01:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 1.096 ms/op
# Warmup Iteration   2: 0.915 ms/op
# Warmup Iteration   3: 0.904 ms/op
# Warmup Iteration   4: 0.862 ms/op
# Warmup Iteration   5: 0.861 ms/op
Iteration   1: 0.861 ms/op
Iteration   2: 0.851 ms/op
Iteration   3: 0.840 ms/op
Iteration   4: 0.848 ms/op
Iteration   5: 0.861 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  0.852 ±(99.9%) 0.035 ms/op [Average]
  (min, avg, max) = (0.840, 0.852, 0.861), stdev = 0.009
  CI (99.9%): [0.818, 0.887] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 21.08% complete, ETA 01:02:20
# Fork: 1 of 1
# Warmup Iteration   1: 50.917 ms/op
# Warmup Iteration   2: 28.520 ms/op
# Warmup Iteration   3: 29.003 ms/op
# Warmup Iteration   4: 25.825 ms/op
# Warmup Iteration   5: 31.173 ms/op
Iteration   1: 27.430 ms/op
Iteration   2: 28.248 ms/op
Iteration   3: 25.500 ms/op
Iteration   4: 28.416 ms/op
Iteration   5: 28.531 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  27.625 ±(99.9%) 4.866 ms/op [Average]
  (min, avg, max) = (25.500, 27.625, 28.531), stdev = 1.264
  CI (99.9%): [22.759, 32.491] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 21.32% complete, ETA 01:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 37.797 ms/op
# Warmup Iteration   2: 25.641 ms/op
# Warmup Iteration   3: 24.879 ms/op
# Warmup Iteration   4: 24.565 ms/op
# Warmup Iteration   5: 24.358 ms/op
Iteration   1: 24.897 ms/op
Iteration   2: 26.019 ms/op
Iteration   3: 24.310 ms/op
Iteration   4: 25.377 ms/op
Iteration   5: 24.482 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  25.017 ±(99.9%) 2.678 ms/op [Average]
  (min, avg, max) = (24.310, 25.017, 26.019), stdev = 0.695
  CI (99.9%): [22.339, 27.695] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 21.57% complete, ETA 01:01:50
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 21.81% complete, ETA 01:01:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 2)

# Run progress: 22.06% complete, ETA 01:02:03
# Fork: 1 of 1
# Warmup Iteration   1: 2.542 ms/op
# Warmup Iteration   2: 2.197 ms/op
# Warmup Iteration   3: 2.086 ms/op
# Warmup Iteration   4: 1.970 ms/op
# Warmup Iteration   5: 2.280 ms/op
Iteration   1: 2.421 ms/op
Iteration   2: 2.017 ms/op
Iteration   3: 1.929 ms/op
Iteration   4: 1.878 ms/op
Iteration   5: 1.842 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2.017 ±(99.9%) 0.905 ms/op [Average]
  (min, avg, max) = (1.842, 2.017, 2.421), stdev = 0.235
  CI (99.9%): [1.113, 2.922] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 3)

# Run progress: 22.30% complete, ETA 01:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 2.412 ms/op
# Warmup Iteration   2: 2.113 ms/op
# Warmup Iteration   3: 2.106 ms/op
# Warmup Iteration   4: 2.099 ms/op
# Warmup Iteration   5: 2.081 ms/op
Iteration   1: 2.294 ms/op
Iteration   2: 2.254 ms/op
Iteration   3: 2.187 ms/op
Iteration   4: 2.178 ms/op
Iteration   5: 2.162 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  2.215 ±(99.9%) 0.218 ms/op [Average]
  (min, avg, max) = (2.162, 2.215, 2.294), stdev = 0.057
  CI (99.9%): [1.997, 2.433] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 2)

# Run progress: 22.55% complete, ETA 01:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 151.427 ms/op
# Warmup Iteration   2: 85.000 ms/op
# Warmup Iteration   3: 70.534 ms/op
# Warmup Iteration   4: 70.801 ms/op
# Warmup Iteration   5: 71.013 ms/op
Iteration   1: 72.394 ms/op
Iteration   2: 65.624 ms/op
Iteration   3: 59.400 ms/op
Iteration   4: 61.971 ms/op
Iteration   5: 61.070 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  64.092 ±(99.9%) 19.907 ms/op [Average]
  (min, avg, max) = (59.400, 64.092, 72.394), stdev = 5.170
  CI (99.9%): [44.185, 83.999] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 3)

# Run progress: 22.79% complete, ETA 01:01:17
# Fork: 1 of 1
# Warmup Iteration   1: 128.094 ms/op
# Warmup Iteration   2: 57.749 ms/op
# Warmup Iteration   3: 53.090 ms/op
# Warmup Iteration   4: 52.635 ms/op
# Warmup Iteration   5: 57.789 ms/op
Iteration   1: 58.602 ms/op
Iteration   2: 56.661 ms/op
Iteration   3: 55.610 ms/op
Iteration   4: 55.054 ms/op
Iteration   5: 56.714 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  56.528 ±(99.9%) 5.226 ms/op [Average]
  (min, avg, max) = (55.054, 56.528, 58.602), stdev = 1.357
  CI (99.9%): [51.301, 61.754] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 2)

# Run progress: 23.04% complete, ETA 01:01:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 3)

# Run progress: 23.28% complete, ETA 01:01:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 2)

# Run progress: 23.53% complete, ETA 01:01:19
# Fork: 1 of 1
# Warmup Iteration   1: 6.560 ms/op
# Warmup Iteration   2: 4.639 ms/op
# Warmup Iteration   3: 4.236 ms/op
# Warmup Iteration   4: 4.238 ms/op
# Warmup Iteration   5: 4.170 ms/op
Iteration   1: 3.963 ms/op
Iteration   2: 4.026 ms/op
Iteration   3: 3.792 ms/op
Iteration   4: 4.034 ms/op
Iteration   5: 3.979 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  3.959 ±(99.9%) 0.377 ms/op [Average]
  (min, avg, max) = (3.792, 3.959, 4.034), stdev = 0.098
  CI (99.9%): [3.581, 4.336] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 3)

# Run progress: 23.77% complete, ETA 01:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 5.209 ms/op
# Warmup Iteration   2: 4.443 ms/op
# Warmup Iteration   3: 4.174 ms/op
# Warmup Iteration   4: 4.067 ms/op
# Warmup Iteration   5: 4.137 ms/op
Iteration   1: 4.093 ms/op
Iteration   2: 4.283 ms/op
Iteration   3: 4.105 ms/op
Iteration   4: 4.103 ms/op
Iteration   5: 4.201 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  4.157 ±(99.9%) 0.319 ms/op [Average]
  (min, avg, max) = (4.093, 4.157, 4.283), stdev = 0.083
  CI (99.9%): [3.837, 4.476] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 2)

# Run progress: 24.02% complete, ETA 01:00:48
# Fork: 1 of 1
# Warmup Iteration   1: 303.883 ms/op
# Warmup Iteration   2: 188.459 ms/op
# Warmup Iteration   3: 364.485 ms/op
# Warmup Iteration   4: 393.409 ms/op
# Warmup Iteration   5: 265.414 ms/op
Iteration   1: 297.975 ms/op
Iteration   2: 235.083 ms/op
Iteration   3: 179.377 ms/op
Iteration   4: 176.677 ms/op
Iteration   5: 156.678 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  209.158 ±(99.9%) 221.677 ms/op [Average]
  (min, avg, max) = (156.678, 209.158, 297.975), stdev = 57.569
  CI (99.9%): [? 0, 430.834] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 3)

# Run progress: 24.26% complete, ETA 01:00:38
# Fork: 1 of 1
# Warmup Iteration   1: 343.132 ms/op
# Warmup Iteration   2: 203.278 ms/op
# Warmup Iteration   3: 316.367 ms/op
# Warmup Iteration   4: 356.161 ms/op
# Warmup Iteration   5: 187.527 ms/op
Iteration   1: 171.434 ms/op
Iteration   2: 315.312 ms/op
Iteration   3: 234.155 ms/op
Iteration   4: 181.070 ms/op
Iteration   5: 144.980 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark":
  209.391 ±(99.9%) 259.912 ms/op [Average]
  (min, avg, max) = (144.980, 209.391, 315.312), stdev = 67.498
  CI (99.9%): [? 0, 469.302] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 2)

# Run progress: 24.51% complete, ETA 01:00:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 3)

# Run progress: 24.75% complete, ETA 01:00:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark(ImmutableGetAllBenchmark.java:61)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.baselineGetAllValuesAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_baselineGetAllValuesAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 2)

# Run progress: 25.00% complete, ETA 01:00:27
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 3)

# Run progress: 25.25% complete, ETA 01:00:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 2)

# Run progress: 25.49% complete, ETA 00:59:55
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 3)

# Run progress: 25.74% complete, ETA 00:59:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 2)

# Run progress: 25.98% complete, ETA 00:59:24
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 3)

# Run progress: 26.23% complete, ETA 00:59:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 2)

# Run progress: 26.47% complete, ETA 00:58:54
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 3)

# Run progress: 26.72% complete, ETA 00:58:38
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 2)

# Run progress: 26.96% complete, ETA 00:58:23
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 3)

# Run progress: 27.21% complete, ETA 00:58:07
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 2)

# Run progress: 27.45% complete, ETA 00:57:52
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 3)

# Run progress: 27.70% complete, ETA 00:57:38
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 2)

# Run progress: 27.94% complete, ETA 00:57:23
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 3)

# Run progress: 28.19% complete, ETA 00:57:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 2)

# Run progress: 28.43% complete, ETA 00:56:53
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 3)

# Run progress: 28.68% complete, ETA 00:56:38
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 2)

# Run progress: 28.92% complete, ETA 00:56:24
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 3)

# Run progress: 29.17% complete, ETA 00:56:09
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 2)

# Run progress: 29.41% complete, ETA 00:55:55
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 3)

# Run progress: 29.66% complete, ETA 00:55:41
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 2)

# Run progress: 29.90% complete, ETA 00:55:27
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 3)

# Run progress: 30.15% complete, ETA 00:55:12
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 2)

# Run progress: 30.39% complete, ETA 00:54:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 3)

# Run progress: 30.64% complete, ETA 00:54:44
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 30.88% complete, ETA 00:54:30
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 31.13% complete, ETA 00:54:16
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 31.37% complete, ETA 00:54:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 31.62% complete, ETA 00:53:48
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 31.86% complete, ETA 00:53:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 32.11% complete, ETA 00:53:20
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 32.35% complete, ETA 00:53:07
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 32.60% complete, ETA 00:52:53
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 32.84% complete, ETA 00:52:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 33.09% complete, ETA 00:52:25
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 33.33% complete, ETA 00:52:12
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 33.58% complete, ETA 00:51:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 33.82% complete, ETA 00:51:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 34.07% complete, ETA 00:51:31
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 34.31% complete, ETA 00:51:18
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 34.56% complete, ETA 00:51:04
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 34.80% complete, ETA 00:50:51
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 35.05% complete, ETA 00:50:38
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 35.29% complete, ETA 00:50:25
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 35.54% complete, ETA 00:50:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 35.78% complete, ETA 00:49:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 36.03% complete, ETA 00:49:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 36.27% complete, ETA 00:49:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 36.52% complete, ETA 00:49:19
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 36.76% complete, ETA 00:49:06
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 37.01% complete, ETA 00:48:53
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 37.25% complete, ETA 00:48:40
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 37.50% complete, ETA 00:48:27
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 37.75% complete, ETA 00:48:14
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 37.99% complete, ETA 00:48:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 38.24% complete, ETA 00:47:49
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 38.48% complete, ETA 00:47:36
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 38.73% complete, ETA 00:47:23
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 38.97% complete, ETA 00:47:10
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 39.22% complete, ETA 00:46:57
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 39.46% complete, ETA 00:46:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 39.71% complete, ETA 00:46:32
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 39.95% complete, ETA 00:46:19
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 40.20% complete, ETA 00:46:06
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 40.44% complete, ETA 00:45:54
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 40.69% complete, ETA 00:45:41
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 40.93% complete, ETA 00:45:29
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 41.18% complete, ETA 00:45:16
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 41.42% complete, ETA 00:45:04
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 41.67% complete, ETA 00:44:51
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 41.91% complete, ETA 00:44:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 42.16% complete, ETA 00:44:26
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 42.40% complete, ETA 00:44:14
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 42.65% complete, ETA 00:44:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 42.89% complete, ETA 00:43:49
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 43.14% complete, ETA 00:43:37
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 43.38% complete, ETA 00:43:24
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 43.63% complete, ETA 00:43:12
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 43.87% complete, ETA 00:43:00
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 44.12% complete, ETA 00:42:48
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 44.36% complete, ETA 00:42:36
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 44.61% complete, ETA 00:42:23
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 44.85% complete, ETA 00:42:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 45.10% complete, ETA 00:41:59
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 45.34% complete, ETA 00:41:47
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 45.59% complete, ETA 00:41:35
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 45.83% complete, ETA 00:41:22
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 46.08% complete, ETA 00:41:10
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 46.32% complete, ETA 00:40:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 46.57% complete, ETA 00:40:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 46.81% complete, ETA 00:40:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 2)

# Run progress: 47.06% complete, ETA 00:40:22
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 3)

# Run progress: 47.30% complete, ETA 00:40:10
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 2)

# Run progress: 47.55% complete, ETA 00:39:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 3)

# Run progress: 47.79% complete, ETA 00:39:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 2)

# Run progress: 48.04% complete, ETA 00:39:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 3)

# Run progress: 48.28% complete, ETA 00:39:22
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 2)

# Run progress: 48.53% complete, ETA 00:39:10
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 3)

# Run progress: 48.77% complete, ETA 00:38:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 2)

# Run progress: 49.02% complete, ETA 00:38:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 3)

# Run progress: 49.26% complete, ETA 00:38:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 2)

# Run progress: 49.51% complete, ETA 00:38:22
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 3)

# Run progress: 49.75% complete, ETA 00:38:10
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 2)

# Run progress: 50.00% complete, ETA 00:37:59
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: 0.001 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark(ImmutableGetAllBenchmark.java:39)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (? 10??, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 3)

# Run progress: 50.25% complete, ETA 00:37:49
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark(ImmutableGetAllBenchmark.java:39)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (? 10??, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 2)

# Run progress: 50.49% complete, ETA 00:37:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: 0.001 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark(ImmutableGetAllBenchmark.java:39)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (? 10??, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 0, 0.011] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 3)

# Run progress: 50.74% complete, ETA 00:37:30
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: 0.002 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark(ImmutableGetAllBenchmark.java:39)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (? 10??, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.022] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 2)

# Run progress: 50.98% complete, ETA 00:37:20
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (? 10??, 0.001, 0.004), stdev = 0.002
  CI (99.9%): [? 0, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 3)

# Run progress: 51.23% complete, ETA 00:37:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: 0.002 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark(ImmutableGetAllBenchmark.java:39)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_avgt_jmhStub(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.getall.jmh_generated.ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.immutableGetAllAndCommitBenchmark_AverageTime(ImmutableGetAllBenchmark_immutableGetAllAndCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (? 10??, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [? 0, 0.015] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 2)

# Run progress: 51.47% complete, ETA 00:37:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 3)

# Run progress: 51.72% complete, ETA 00:36:50
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 2)

# Run progress: 51.96% complete, ETA 00:36:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: 0.001 ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 3)

# Run progress: 52.21% complete, ETA 00:36:28
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 2)

# Run progress: 52.45% complete, ETA 00:36:17
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 3)

# Run progress: 52.70% complete, ETA 00:36:06
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 2)

# Run progress: 52.94% complete, ETA 00:35:58
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 3)

# Run progress: 53.19% complete, ETA 00:35:46
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: 0.001 ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 2)

# Run progress: 53.43% complete, ETA 00:35:35
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 3)

# Run progress: 53.68% complete, ETA 00:35:24
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: 0.001 ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 2)

# Run progress: 53.92% complete, ETA 00:35:13
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 3)

# Run progress: 54.17% complete, ETA 00:35:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: 0.001 ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 2)

# Run progress: 54.41% complete, ETA 00:34:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 3)

# Run progress: 54.66% complete, ETA 00:34:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 2)

# Run progress: 54.90% complete, ETA 00:34:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 3)

# Run progress: 55.15% complete, ETA 00:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: 0.001 ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 2)

# Run progress: 55.39% complete, ETA 00:34:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 3)

# Run progress: 55.64% complete, ETA 00:33:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: 0.001 ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 55.88% complete, ETA 00:33:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 56.13% complete, ETA 00:33:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 56.37% complete, ETA 00:33:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10??, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 56.62% complete, ETA 00:33:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 56.86% complete, ETA 00:33:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 57.11% complete, ETA 00:32:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 57.35% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 57.60% complete, ETA 00:32:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 57.84% complete, ETA 00:32:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 10?³, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 58.09% complete, ETA 00:32:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 58.33% complete, ETA 00:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 58.58% complete, ETA 00:31:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 58.82% complete, ETA 00:31:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.011 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 59.07% complete, ETA 00:31:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.005 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.007), stdev = 0.001
  CI (99.9%): [? 0, 0.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 59.31% complete, ETA 00:31:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.005 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 59.56% complete, ETA 00:30:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 59.80% complete, ETA 00:30:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.004 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.006] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 60.05% complete, ETA 00:30:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.003 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 60.29% complete, ETA 00:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.005 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.005 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.006 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.004, 0.007] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 60.54% complete, ETA 00:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.006 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.003, 0.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 60.78% complete, ETA 00:30:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.006 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.005, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.004, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 61.03% complete, ETA 00:29:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.005 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.006 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.005, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 61.27% complete, ETA 00:29:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.006 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.004, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 61.52% complete, ETA 00:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.007 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.006, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.004, 0.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 61.76% complete, ETA 00:29:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.012 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.013 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.012, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.011, 0.014] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 62.01% complete, ETA 00:29:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.016 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.012 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.013 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.012, 0.013, 0.016), stdev = 0.002
  CI (99.9%): [0.007, 0.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 62.25% complete, ETA 00:28:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.014 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.013 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.016 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.014 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.012, 0.014, 0.016), stdev = 0.002
  CI (99.9%): [0.007, 0.020] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 62.50% complete, ETA 00:28:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.018 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.011 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.013 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.011, 0.013, 0.015), stdev = 0.001
  CI (99.9%): [0.007, 0.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 62.75% complete, ETA 00:28:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.020 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.017 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.014 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (0.012, 0.014, 0.017), stdev = 0.002
  CI (99.9%): [0.006, 0.022] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 62.99% complete, ETA 00:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.020 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.012 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.013 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.011, 0.013, 0.014), stdev = 0.001
  CI (99.9%): [0.007, 0.018] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 63.24% complete, ETA 00:28:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.043 ms/op
# Warmup Iteration   2: 0.032 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.023 ms/op
Iteration   3: 0.031 ms/op
Iteration   4: 0.023 ms/op
Iteration   5: 0.023 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.026 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.023, 0.026, 0.031), stdev = 0.004
  CI (99.9%): [0.011, 0.040] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 63.48% complete, ETA 00:27:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.043 ms/op
# Warmup Iteration   2: 0.026 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.022 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.024 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.023 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.025 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.023, 0.025, 0.027), stdev = 0.001
  CI (99.9%): [0.019, 0.030] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 63.73% complete, ETA 00:27:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.021 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.024 ms/op
Iteration   1: 0.025 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.022 ms/op
Iteration   4: 0.023 ms/op
Iteration   5: 0.021 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.024 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.021, 0.024, 0.030), stdev = 0.004
  CI (99.9%): [0.011, 0.037] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 63.97% complete, ETA 00:27:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.028 ms/op
# Warmup Iteration   3: 0.029 ms/op
# Warmup Iteration   4: 0.026 ms/op
# Warmup Iteration   5: 0.031 ms/op
Iteration   1: 0.025 ms/op
Iteration   2: 0.033 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.027 ms/op
Iteration   5: 0.028 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.028 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.025, 0.028, 0.033), stdev = 0.003
  CI (99.9%): [0.016, 0.040] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 64.22% complete, ETA 00:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.033 ms/op
# Warmup Iteration   3: 0.032 ms/op
# Warmup Iteration   4: 0.029 ms/op
# Warmup Iteration   5: 0.031 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.031 ms/op
Iteration   3: 0.040 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.030 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.031 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.026, 0.031, 0.040), stdev = 0.005
  CI (99.9%): [0.011, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 64.46% complete, ETA 00:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.043 ms/op
# Warmup Iteration   2: 0.036 ms/op
# Warmup Iteration   3: 0.033 ms/op
# Warmup Iteration   4: 0.028 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.031 ms/op
Iteration   3: 0.034 ms/op
Iteration   4: 0.029 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.029 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.026, 0.029, 0.034), stdev = 0.003
  CI (99.9%): [0.018, 0.041] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 64.71% complete, ETA 00:26:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.098 ms/op
# Warmup Iteration   2: 0.061 ms/op
# Warmup Iteration   3: 0.054 ms/op
# Warmup Iteration   4: 0.062 ms/op
# Warmup Iteration   5: 0.052 ms/op
Iteration   1: 0.053 ms/op
Iteration   2: 0.054 ms/op
Iteration   3: 0.057 ms/op
Iteration   4: 0.056 ms/op
Iteration   5: 0.051 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.054 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.051, 0.054, 0.057), stdev = 0.002
  CI (99.9%): [0.046, 0.063] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 64.95% complete, ETA 00:26:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.087 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.059 ms/op
# Warmup Iteration   4: 0.069 ms/op
# Warmup Iteration   5: 0.051 ms/op
Iteration   1: 0.053 ms/op
Iteration   2: 0.047 ms/op
Iteration   3: 0.062 ms/op
Iteration   4: 0.058 ms/op
Iteration   5: 0.058 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.056 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.047, 0.056, 0.062), stdev = 0.006
  CI (99.9%): [0.034, 0.078] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 65.20% complete, ETA 00:26:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.093 ms/op
# Warmup Iteration   2: 0.056 ms/op
# Warmup Iteration   3: 0.051 ms/op
# Warmup Iteration   4: 0.061 ms/op
# Warmup Iteration   5: 0.049 ms/op
Iteration   1: 0.049 ms/op
Iteration   2: 0.062 ms/op
Iteration   3: 0.050 ms/op
Iteration   4: 0.051 ms/op
Iteration   5: 0.049 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.052 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.049, 0.052, 0.062), stdev = 0.006
  CI (99.9%): [0.030, 0.074] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 65.44% complete, ETA 00:26:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.071 ms/op
# Warmup Iteration   2: 0.059 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.050 ms/op
# Warmup Iteration   5: 0.043 ms/op
Iteration   1: 0.049 ms/op
Iteration   2: 0.046 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.055 ms/op
Iteration   5: 0.057 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.050 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.045, 0.050, 0.057), stdev = 0.005
  CI (99.9%): [0.031, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 65.69% complete, ETA 00:26:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
# Warmup Iteration   2: 0.064 ms/op
# Warmup Iteration   3: 0.058 ms/op
# Warmup Iteration   4: 0.051 ms/op
# Warmup Iteration   5: 0.049 ms/op
Iteration   1: 0.043 ms/op
Iteration   2: 0.055 ms/op
Iteration   3: 0.043 ms/op
Iteration   4: 0.044 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.047 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (0.043, 0.047, 0.055), stdev = 0.005
  CI (99.9%): [0.026, 0.067] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 65.93% complete, ETA 00:26:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.073 ms/op
# Warmup Iteration   2: 0.052 ms/op
# Warmup Iteration   3: 0.046 ms/op
# Warmup Iteration   4: 0.049 ms/op
# Warmup Iteration   5: 0.043 ms/op
Iteration   1: 0.051 ms/op
Iteration   2: 0.047 ms/op
Iteration   3: 0.042 ms/op
Iteration   4: 0.040 ms/op
Iteration   5: 0.055 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.047 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (0.040, 0.047, 0.055), stdev = 0.006
  CI (99.9%): [0.024, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 66.18% complete, ETA 00:25:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.125 ms/op
# Warmup Iteration   2: 0.098 ms/op
# Warmup Iteration   3: 0.084 ms/op
# Warmup Iteration   4: 0.092 ms/op
# Warmup Iteration   5: 0.083 ms/op
Iteration   1: 0.093 ms/op
Iteration   2: 0.086 ms/op
Iteration   3: 0.081 ms/op
Iteration   4: 0.089 ms/op
Iteration   5: 0.102 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.090 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (0.081, 0.090, 0.102), stdev = 0.008
  CI (99.9%): [0.060, 0.121] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 66.42% complete, ETA 00:25:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.140 ms/op
# Warmup Iteration   2: 0.099 ms/op
# Warmup Iteration   3: 0.093 ms/op
# Warmup Iteration   4: 0.092 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: 0.104 ms/op
Iteration   2: 0.086 ms/op
Iteration   3: 0.086 ms/op
Iteration   4: 0.092 ms/op
Iteration   5: 0.097 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.093 ±(99.9%) 0.030 ms/op [Average]
  (min, avg, max) = (0.086, 0.093, 0.104), stdev = 0.008
  CI (99.9%): [0.063, 0.122] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 66.67% complete, ETA 00:25:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.135 ms/op
# Warmup Iteration   2: 0.103 ms/op
# Warmup Iteration   3: 0.086 ms/op
# Warmup Iteration   4: 0.096 ms/op
# Warmup Iteration   5: 0.085 ms/op
Iteration   1: 0.107 ms/op
Iteration   2: 0.084 ms/op
Iteration   3: 0.085 ms/op
Iteration   4: 0.088 ms/op
Iteration   5: 0.099 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.093 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (0.084, 0.093, 0.107), stdev = 0.010
  CI (99.9%): [0.054, 0.131] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 66.91% complete, ETA 00:25:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.130 ms/op
# Warmup Iteration   2: 0.111 ms/op
# Warmup Iteration   3: 0.094 ms/op
# Warmup Iteration   4: 0.099 ms/op
# Warmup Iteration   5: 0.083 ms/op
Iteration   1: 0.104 ms/op
Iteration   2: 0.092 ms/op
Iteration   3: 0.086 ms/op
Iteration   4: 0.090 ms/op
Iteration   5: 0.096 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.093 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.086, 0.093, 0.104), stdev = 0.007
  CI (99.9%): [0.067, 0.120] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 67.16% complete, ETA 00:25:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.139 ms/op
# Warmup Iteration   2: 0.119 ms/op
# Warmup Iteration   3: 0.088 ms/op
# Warmup Iteration   4: 0.098 ms/op
# Warmup Iteration   5: 0.089 ms/op
Iteration   1: 0.086 ms/op
Iteration   2: 0.110 ms/op
Iteration   3: 0.092 ms/op
Iteration   4: 0.090 ms/op
Iteration   5: 0.104 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.096 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.086, 0.096, 0.110), stdev = 0.010
  CI (99.9%): [0.058, 0.135] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 67.40% complete, ETA 00:24:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.145 ms/op
# Warmup Iteration   2: 0.119 ms/op
# Warmup Iteration   3: 0.098 ms/op
# Warmup Iteration   4: 0.109 ms/op
# Warmup Iteration   5: 0.096 ms/op
Iteration   1: 0.101 ms/op
Iteration   2: 0.113 ms/op
Iteration   3: 0.098 ms/op
Iteration   4: 0.091 ms/op
Iteration   5: 0.105 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.102 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (0.091, 0.102, 0.113), stdev = 0.008
  CI (99.9%): [0.071, 0.133] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 67.65% complete, ETA 00:24:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.295 ms/op
# Warmup Iteration   2: 0.222 ms/op
# Warmup Iteration   3: 0.192 ms/op
# Warmup Iteration   4: 0.192 ms/op
# Warmup Iteration   5: 0.174 ms/op
Iteration   1: 0.176 ms/op
Iteration   2: 0.206 ms/op
Iteration   3: 0.171 ms/op
Iteration   4: 0.171 ms/op
Iteration   5: 0.198 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.184 ±(99.9%) 0.064 ms/op [Average]
  (min, avg, max) = (0.171, 0.184, 0.206), stdev = 0.017
  CI (99.9%): [0.121, 0.248] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 67.89% complete, ETA 00:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.253 ms/op
# Warmup Iteration   2: 0.222 ms/op
# Warmup Iteration   3: 0.216 ms/op
# Warmup Iteration   4: 0.224 ms/op
# Warmup Iteration   5: 0.196 ms/op
Iteration   1: 0.202 ms/op
Iteration   2: 0.238 ms/op
Iteration   3: 0.258 ms/op
Iteration   4: 0.195 ms/op
Iteration   5: 0.188 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.216 ±(99.9%) 0.117 ms/op [Average]
  (min, avg, max) = (0.188, 0.216, 0.258), stdev = 0.030
  CI (99.9%): [0.099, 0.333] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 68.14% complete, ETA 00:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.351 ms/op
# Warmup Iteration   2: 0.227 ms/op
# Warmup Iteration   3: 0.209 ms/op
# Warmup Iteration   4: 0.228 ms/op
# Warmup Iteration   5: 0.222 ms/op
Iteration   1: 0.201 ms/op
Iteration   2: 0.263 ms/op
Iteration   3: 0.198 ms/op
Iteration   4: 0.203 ms/op
Iteration   5: 0.188 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.211 ±(99.9%) 0.115 ms/op [Average]
  (min, avg, max) = (0.188, 0.211, 0.263), stdev = 0.030
  CI (99.9%): [0.095, 0.326] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 68.38% complete, ETA 00:24:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.321 ms/op
# Warmup Iteration   2: 0.241 ms/op
# Warmup Iteration   3: 0.249 ms/op
# Warmup Iteration   4: 0.265 ms/op
# Warmup Iteration   5: 0.237 ms/op
Iteration   1: 0.211 ms/op
Iteration   2: 0.209 ms/op
Iteration   3: 0.226 ms/op
Iteration   4: 0.232 ms/op
Iteration   5: 0.188 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.213 ±(99.9%) 0.066 ms/op [Average]
  (min, avg, max) = (0.188, 0.213, 0.232), stdev = 0.017
  CI (99.9%): [0.147, 0.279] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 68.63% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.387 ms/op
# Warmup Iteration   2: 0.258 ms/op
# Warmup Iteration   3: 0.224 ms/op
# Warmup Iteration   4: 0.220 ms/op
# Warmup Iteration   5: 0.186 ms/op
Iteration   1: 0.208 ms/op
Iteration   2: 0.211 ms/op
Iteration   3: 0.208 ms/op
Iteration   4: 0.184 ms/op
Iteration   5: 0.193 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.201 ±(99.9%) 0.046 ms/op [Average]
  (min, avg, max) = (0.184, 0.201, 0.211), stdev = 0.012
  CI (99.9%): [0.154, 0.247] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 68.87% complete, ETA 00:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.337 ms/op
# Warmup Iteration   2: 0.286 ms/op
# Warmup Iteration   3: 0.254 ms/op
# Warmup Iteration   4: 0.228 ms/op
# Warmup Iteration   5: 0.248 ms/op
Iteration   1: 0.216 ms/op
Iteration   2: 0.201 ms/op
Iteration   3: 0.254 ms/op
Iteration   4: 0.197 ms/op
Iteration   5: 0.182 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.210 ±(99.9%) 0.106 ms/op [Average]
  (min, avg, max) = (0.182, 0.210, 0.254), stdev = 0.027
  CI (99.9%): [0.104, 0.316] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 69.12% complete, ETA 00:23:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.562 ms/op
# Warmup Iteration   2: 0.498 ms/op
# Warmup Iteration   3: 0.396 ms/op
# Warmup Iteration   4: 0.408 ms/op
# Warmup Iteration   5: 0.358 ms/op
Iteration   1: 0.439 ms/op
Iteration   2: 0.403 ms/op
Iteration   3: 0.356 ms/op
Iteration   4: 0.338 ms/op
Iteration   5: 0.334 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.374 ±(99.9%) 0.175 ms/op [Average]
  (min, avg, max) = (0.334, 0.374, 0.439), stdev = 0.045
  CI (99.9%): [0.199, 0.549] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 69.36% complete, ETA 00:23:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.487 ms/op
# Warmup Iteration   2: 0.421 ms/op
# Warmup Iteration   3: 0.369 ms/op
# Warmup Iteration   4: 0.391 ms/op
# Warmup Iteration   5: 0.460 ms/op
Iteration   1: 0.395 ms/op
Iteration   2: 0.493 ms/op
Iteration   3: 0.390 ms/op
Iteration   4: 0.361 ms/op
Iteration   5: 0.362 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.400 ±(99.9%) 0.209 ms/op [Average]
  (min, avg, max) = (0.361, 0.400, 0.493), stdev = 0.054
  CI (99.9%): [0.191, 0.609] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 69.61% complete, ETA 00:23:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.536 ms/op
# Warmup Iteration   2: 0.444 ms/op
# Warmup Iteration   3: 0.392 ms/op
# Warmup Iteration   4: 0.408 ms/op
# Warmup Iteration   5: 0.342 ms/op
Iteration   1: 0.336 ms/op
Iteration   2: 0.399 ms/op
Iteration   3: 0.386 ms/op
Iteration   4: 0.330 ms/op
Iteration   5: 0.350 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.360 ±(99.9%) 0.119 ms/op [Average]
  (min, avg, max) = (0.330, 0.360, 0.399), stdev = 0.031
  CI (99.9%): [0.241, 0.478] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 69.85% complete, ETA 00:23:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.670 ms/op
# Warmup Iteration   2: 0.465 ms/op
# Warmup Iteration   3: 0.414 ms/op
# Warmup Iteration   4: 0.424 ms/op
# Warmup Iteration   5: 0.411 ms/op
Iteration   1: 0.365 ms/op
Iteration   2: 0.427 ms/op
Iteration   3: 0.422 ms/op
Iteration   4: 0.378 ms/op
Iteration   5: 0.414 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.401 ±(99.9%) 0.108 ms/op [Average]
  (min, avg, max) = (0.365, 0.401, 0.427), stdev = 0.028
  CI (99.9%): [0.293, 0.510] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 70.10% complete, ETA 00:22:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.580 ms/op
# Warmup Iteration   2: 0.440 ms/op
# Warmup Iteration   3: 0.375 ms/op
# Warmup Iteration   4: 0.477 ms/op
# Warmup Iteration   5: 0.379 ms/op
Iteration   1: 0.352 ms/op
Iteration   2: 0.430 ms/op
Iteration   3: 0.408 ms/op
Iteration   4: 0.411 ms/op
Iteration   5: 0.448 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.410 ±(99.9%) 0.139 ms/op [Average]
  (min, avg, max) = (0.352, 0.410, 0.448), stdev = 0.036
  CI (99.9%): [0.271, 0.548] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 70.34% complete, ETA 00:22:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.616 ms/op
# Warmup Iteration   2: 0.503 ms/op
# Warmup Iteration   3: 0.435 ms/op
# Warmup Iteration   4: 0.443 ms/op
# Warmup Iteration   5: 0.441 ms/op
Iteration   1: 0.403 ms/op
Iteration   2: 0.466 ms/op
Iteration   3: 0.397 ms/op
Iteration   4: 0.380 ms/op
Iteration   5: 0.368 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.403 ±(99.9%) 0.146 ms/op [Average]
  (min, avg, max) = (0.368, 0.403, 0.466), stdev = 0.038
  CI (99.9%): [0.257, 0.548] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 70.59% complete, ETA 00:22:30
# Fork: 1 of 1
# Warmup Iteration   1: 1.172 ms/op
# Warmup Iteration   2: 0.940 ms/op
# Warmup Iteration   3: 0.898 ms/op
# Warmup Iteration   4: 0.830 ms/op
# Warmup Iteration   5: 0.851 ms/op
Iteration   1: 0.755 ms/op
Iteration   2: 0.991 ms/op
Iteration   3: 0.770 ms/op
Iteration   4: 0.816 ms/op
Iteration   5: 0.778 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.822 ±(99.9%) 0.374 ms/op [Average]
  (min, avg, max) = (0.755, 0.822, 0.991), stdev = 0.097
  CI (99.9%): [0.448, 1.196] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 70.83% complete, ETA 00:22:19
# Fork: 1 of 1
# Warmup Iteration   1: 1.125 ms/op
# Warmup Iteration   2: 0.950 ms/op
# Warmup Iteration   3: 0.783 ms/op
# Warmup Iteration   4: 0.786 ms/op
# Warmup Iteration   5: 0.735 ms/op
Iteration   1: 0.733 ms/op
Iteration   2: 1.012 ms/op
Iteration   3: 0.782 ms/op
Iteration   4: 0.724 ms/op
Iteration   5: 0.698 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.790 ±(99.9%) 0.493 ms/op [Average]
  (min, avg, max) = (0.698, 0.790, 1.012), stdev = 0.128
  CI (99.9%): [0.297, 1.283] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 71.08% complete, ETA 00:22:08
# Fork: 1 of 1
# Warmup Iteration   1: 1.260 ms/op
# Warmup Iteration   2: 0.872 ms/op
# Warmup Iteration   3: 0.933 ms/op
# Warmup Iteration   4: 0.903 ms/op
# Warmup Iteration   5: 0.817 ms/op
Iteration   1: 0.883 ms/op
Iteration   2: 0.918 ms/op
Iteration   3: 0.763 ms/op
Iteration   4: 0.782 ms/op
Iteration   5: 0.807 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.831 ±(99.9%) 0.258 ms/op [Average]
  (min, avg, max) = (0.763, 0.831, 0.918), stdev = 0.067
  CI (99.9%): [0.572, 1.089] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 71.32% complete, ETA 00:21:56
# Fork: 1 of 1
# Warmup Iteration   1: 1.325 ms/op
# Warmup Iteration   2: 0.898 ms/op
# Warmup Iteration   3: 0.816 ms/op
# Warmup Iteration   4: 0.894 ms/op
# Warmup Iteration   5: 0.952 ms/op
Iteration   1: 0.837 ms/op
Iteration   2: 1.064 ms/op
Iteration   3: 0.909 ms/op
Iteration   4: 0.896 ms/op
Iteration   5: 0.870 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  0.915 ±(99.9%) 0.338 ms/op [Average]
  (min, avg, max) = (0.837, 0.915, 1.064), stdev = 0.088
  CI (99.9%): [0.577, 1.253] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 71.57% complete, ETA 00:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 2.022 ms/op
# Warmup Iteration   2: 1.138 ms/op
# Warmup Iteration   3: 1.092 ms/op
# Warmup Iteration   4: 0.945 ms/op
# Warmup Iteration   5: 1.182 ms/op
Iteration   1: 1.029 ms/op
Iteration   2: 0.960 ms/op
Iteration   3: 0.962 ms/op
Iteration   4: 1.293 ms/op
Iteration   5: 0.927 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.034 ±(99.9%) 0.574 ms/op [Average]
  (min, avg, max) = (0.927, 1.034, 1.293), stdev = 0.149
  CI (99.9%): [0.460, 1.608] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 71.81% complete, ETA 00:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 1.914 ms/op
# Warmup Iteration   2: 1.070 ms/op
# Warmup Iteration   3: 1.041 ms/op
# Warmup Iteration   4: 0.980 ms/op
# Warmup Iteration   5: 1.042 ms/op
Iteration   1: 1.075 ms/op
Iteration   2: 1.109 ms/op
Iteration   3: 0.949 ms/op
Iteration   4: 1.219 ms/op
Iteration   5: 0.888 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.048 ±(99.9%) 0.506 ms/op [Average]
  (min, avg, max) = (0.888, 1.048, 1.219), stdev = 0.131
  CI (99.9%): [0.542, 1.554] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 2)

# Run progress: 72.06% complete, ETA 00:21:22
# Fork: 1 of 1
# Warmup Iteration   1: 3.878 ms/op
# Warmup Iteration   2: 2.213 ms/op
# Warmup Iteration   3: 2.195 ms/op
# Warmup Iteration   4: 1.846 ms/op
# Warmup Iteration   5: 2.095 ms/op
Iteration   1: 1.611 ms/op
Iteration   2: 2.231 ms/op
Iteration   3: 2.409 ms/op
Iteration   4: 1.564 ms/op
Iteration   5: 1.568 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.877 ±(99.9%) 1.579 ms/op [Average]
  (min, avg, max) = (1.564, 1.877, 2.409), stdev = 0.410
  CI (99.9%): [0.297, 3.456] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 3)

# Run progress: 72.30% complete, ETA 00:21:11
# Fork: 1 of 1
# Warmup Iteration   1: 2.807 ms/op
# Warmup Iteration   2: 1.725 ms/op
# Warmup Iteration   3: 1.567 ms/op
# Warmup Iteration   4: 1.528 ms/op
# Warmup Iteration   5: 1.452 ms/op
Iteration   1: 1.380 ms/op
Iteration   2: 1.674 ms/op
Iteration   3: 1.609 ms/op
Iteration   4: 1.569 ms/op
Iteration   5: 1.658 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.578 ±(99.9%) 0.455 ms/op [Average]
  (min, avg, max) = (1.380, 1.578, 1.674), stdev = 0.118
  CI (99.9%): [1.123, 2.033] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 2)

# Run progress: 72.55% complete, ETA 00:20:59
# Fork: 1 of 1
# Warmup Iteration   1: 2.802 ms/op
# Warmup Iteration   2: 1.901 ms/op
# Warmup Iteration   3: 1.920 ms/op
# Warmup Iteration   4: 1.879 ms/op
# Warmup Iteration   5: 1.551 ms/op
Iteration   1: 1.488 ms/op
Iteration   2: 1.597 ms/op
Iteration   3: 1.343 ms/op
Iteration   4: 1.415 ms/op
Iteration   5: 1.405 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.450 ±(99.9%) 0.375 ms/op [Average]
  (min, avg, max) = (1.343, 1.450, 1.597), stdev = 0.097
  CI (99.9%): [1.075, 1.825] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 3)

# Run progress: 72.79% complete, ETA 00:20:48
# Fork: 1 of 1
# Warmup Iteration   1: 2.029 ms/op
# Warmup Iteration   2: 1.813 ms/op
# Warmup Iteration   3: 1.477 ms/op
# Warmup Iteration   4: 1.662 ms/op
# Warmup Iteration   5: 1.551 ms/op
Iteration   1: 1.562 ms/op
Iteration   2: 1.605 ms/op
Iteration   3: 1.365 ms/op
Iteration   4: 1.257 ms/op
Iteration   5: 1.394 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.437 ±(99.9%) 0.556 ms/op [Average]
  (min, avg, max) = (1.257, 1.437, 1.605), stdev = 0.144
  CI (99.9%): [0.880, 1.993] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 2)

# Run progress: 73.04% complete, ETA 00:20:37
# Fork: 1 of 1
# Warmup Iteration   1: 1.999 ms/op
# Warmup Iteration   2: 1.509 ms/op
# Warmup Iteration   3: 1.389 ms/op
# Warmup Iteration   4: 1.373 ms/op
# Warmup Iteration   5: 1.262 ms/op
Iteration   1: 1.526 ms/op
Iteration   2: 1.247 ms/op
Iteration   3: 1.319 ms/op
Iteration   4: 1.408 ms/op
Iteration   5: 1.677 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.435 ±(99.9%) 0.656 ms/op [Average]
  (min, avg, max) = (1.247, 1.435, 1.677), stdev = 0.170
  CI (99.9%): [0.779, 2.092] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 3)

# Run progress: 73.28% complete, ETA 00:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 2.153 ms/op
# Warmup Iteration   2: 1.575 ms/op
# Warmup Iteration   3: 1.389 ms/op
# Warmup Iteration   4: 1.593 ms/op
# Warmup Iteration   5: 1.325 ms/op
Iteration   1: 1.878 ms/op
Iteration   2: 1.403 ms/op
Iteration   3: 1.290 ms/op
Iteration   4: 1.428 ms/op
Iteration   5: 1.797 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  1.559 ±(99.9%) 1.004 ms/op [Average]
  (min, avg, max) = (1.290, 1.559, 1.878), stdev = 0.261
  CI (99.9%): [0.556, 2.563] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 2)

# Run progress: 73.53% complete, ETA 00:20:15
# Fork: 1 of 1
# Warmup Iteration   1: 4.454 ms/op
# Warmup Iteration   2: 3.226 ms/op
# Warmup Iteration   3: 2.985 ms/op
# Warmup Iteration   4: 3.333 ms/op
# Warmup Iteration   5: 2.594 ms/op
Iteration   1: 3.340 ms/op
Iteration   2: 4.123 ms/op
Iteration   3: 3.251 ms/op
Iteration   4: 2.766 ms/op
Iteration   5: 3.335 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  3.363 ±(99.9%) 1.875 ms/op [Average]
  (min, avg, max) = (2.766, 3.363, 4.123), stdev = 0.487
  CI (99.9%): [1.488, 5.238] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 3)

# Run progress: 73.77% complete, ETA 00:20:04
# Fork: 1 of 1
# Warmup Iteration   1: 6.824 ms/op
# Warmup Iteration   2: 3.609 ms/op
# Warmup Iteration   3: 3.134 ms/op
# Warmup Iteration   4: 3.377 ms/op
# Warmup Iteration   5: 2.764 ms/op
Iteration   1: 2.689 ms/op
Iteration   2: 2.923 ms/op
Iteration   3: 2.535 ms/op
Iteration   4: 2.744 ms/op
Iteration   5: 3.071 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  2.792 ±(99.9%) 0.803 ms/op [Average]
  (min, avg, max) = (2.535, 2.792, 3.071), stdev = 0.208
  CI (99.9%): [1.989, 3.595] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 2)

# Run progress: 74.02% complete, ETA 00:19:53
# Fork: 1 of 1
# Warmup Iteration   1: 4.918 ms/op
# Warmup Iteration   2: 3.706 ms/op
# Warmup Iteration   3: 3.195 ms/op
# Warmup Iteration   4: 3.476 ms/op
# Warmup Iteration   5: 2.696 ms/op
Iteration   1: 2.802 ms/op
Iteration   2: 3.188 ms/op
Iteration   3: 2.514 ms/op
Iteration   4: 2.670 ms/op
Iteration   5: 2.960 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  2.827 ±(99.9%) 1.002 ms/op [Average]
  (min, avg, max) = (2.514, 2.827, 3.188), stdev = 0.260
  CI (99.9%): [1.825, 3.829] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 3)

# Run progress: 74.26% complete, ETA 00:19:42
# Fork: 1 of 1
# Warmup Iteration   1: 4.069 ms/op
# Warmup Iteration   2: 3.306 ms/op
# Warmup Iteration   3: 2.887 ms/op
# Warmup Iteration   4: 3.994 ms/op
# Warmup Iteration   5: 2.665 ms/op
Iteration   1: 3.029 ms/op
Iteration   2: 2.761 ms/op
Iteration   3: 2.763 ms/op
Iteration   4: 2.690 ms/op
Iteration   5: 3.393 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  2.927 ±(99.9%) 1.119 ms/op [Average]
  (min, avg, max) = (2.690, 2.927, 3.393), stdev = 0.291
  CI (99.9%): [1.807, 4.046] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 2)

# Run progress: 74.51% complete, ETA 00:19:31
# Fork: 1 of 1
# Warmup Iteration   1: 4.390 ms/op
# Warmup Iteration   2: 3.435 ms/op
# Warmup Iteration   3: 3.205 ms/op
# Warmup Iteration   4: 4.897 ms/op
# Warmup Iteration   5: 3.203 ms/op
Iteration   1: 3.126 ms/op
Iteration   2: 3.676 ms/op
Iteration   3: 2.841 ms/op
Iteration   4: 3.047 ms/op
Iteration   5: 2.780 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  3.094 ±(99.9%) 1.368 ms/op [Average]
  (min, avg, max) = (2.780, 3.094, 3.676), stdev = 0.355
  CI (99.9%): [1.726, 4.462] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 3)

# Run progress: 74.75% complete, ETA 00:19:19
# Fork: 1 of 1
# Warmup Iteration   1: 4.847 ms/op
# Warmup Iteration   2: 3.894 ms/op
# Warmup Iteration   3: 3.886 ms/op
# Warmup Iteration   4: 4.595 ms/op
# Warmup Iteration   5: 3.293 ms/op
Iteration   1: 3.021 ms/op
Iteration   2: 3.418 ms/op
Iteration   3: 3.090 ms/op
Iteration   4: 2.963 ms/op
Iteration   5: 2.854 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark":
  3.069 ±(99.9%) 0.821 ms/op [Average]
  (min, avg, max) = (2.854, 3.069, 3.418), stdev = 0.213
  CI (99.9%): [2.248, 3.891] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 2)

# Run progress: 75.00% complete, ETA 00:19:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1, nKeys = 32, nValues = 3)

# Run progress: 75.25% complete, ETA 00:18:57
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 2)

# Run progress: 75.49% complete, ETA 00:18:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1, nKeys = 1000, nValues = 3)

# Run progress: 75.74% complete, ETA 00:18:34
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 2)

# Run progress: 75.98% complete, ETA 00:18:22
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1, nKeys = 100000, nValues = 3)

# Run progress: 76.23% complete, ETA 00:18:11
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 2)

# Run progress: 76.47% complete, ETA 00:17:59
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2, nKeys = 32, nValues = 3)

# Run progress: 76.72% complete, ETA 00:17:48
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 2)

# Run progress: 76.96% complete, ETA 00:17:36
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2, nKeys = 1000, nValues = 3)

# Run progress: 77.21% complete, ETA 00:17:25
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 2)

# Run progress: 77.45% complete, ETA 00:17:13
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2, nKeys = 100000, nValues = 3)

# Run progress: 77.70% complete, ETA 00:17:02
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 2)

# Run progress: 77.94% complete, ETA 00:16:51
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4, nKeys = 32, nValues = 3)

# Run progress: 78.19% complete, ETA 00:16:39
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 2)

# Run progress: 78.43% complete, ETA 00:16:28
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4, nKeys = 1000, nValues = 3)

# Run progress: 78.68% complete, ETA 00:16:16
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 2)

# Run progress: 78.92% complete, ETA 00:16:05
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4, nKeys = 100000, nValues = 3)

# Run progress: 79.17% complete, ETA 00:15:54
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 2)

# Run progress: 79.41% complete, ETA 00:15:42
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8, nKeys = 32, nValues = 3)

# Run progress: 79.66% complete, ETA 00:15:31
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 2)

# Run progress: 79.90% complete, ETA 00:15:19
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8, nKeys = 1000, nValues = 3)

# Run progress: 80.15% complete, ETA 00:15:08
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 2)

# Run progress: 80.39% complete, ETA 00:14:57
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?³ ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8, nKeys = 100000, nValues = 3)

# Run progress: 80.64% complete, ETA 00:14:45
# Fork: 1 of 1
# Warmup Iteration   1: ? 10?? ms/op
# Warmup Iteration   2: ? 10?? ms/op
# Warmup Iteration   3: ? 10?? ms/op
# Warmup Iteration   4: ? 10?? ms/op
# Warmup Iteration   5: ? 10?? ms/op
Iteration   1: ? 10?? ms/op
Iteration   2: ? 10?? ms/op
Iteration   3: ? 10?? ms/op
Iteration   4: ? 10?? ms/op
Iteration   5: ? 10?? ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?? ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 2)

# Run progress: 80.88% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (? 10?³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 32, nValues = 3)

# Run progress: 81.13% complete, ETA 00:14:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 2)

# Run progress: 81.37% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 1000, nValues = 3)

# Run progress: 81.62% complete, ETA 00:14:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 2)

# Run progress: 81.86% complete, ETA 00:13:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: ? 10?³ ms/op
# Warmup Iteration   3: ? 10?³ ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: ? 10?³ ms/op
Iteration   4: ? 10?³ ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16, nKeys = 100000, nValues = 3)

# Run progress: 82.11% complete, ETA 00:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: ? 10?³ ms/op
# Warmup Iteration   5: ? 10?³ ms/op
Iteration   1: ? 10?³ ms/op
Iteration   2: ? 10?³ ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: ? 10?³ ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  ? 10?³ ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 2)

# Run progress: 82.35% complete, ETA 00:13:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [? 10?³, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 32, nValues = 3)

# Run progress: 82.60% complete, ETA 00:13:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 2)

# Run progress: 82.84% complete, ETA 00:13:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 1000, nValues = 3)

# Run progress: 83.09% complete, ETA 00:12:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 2)

# Run progress: 83.33% complete, ETA 00:12:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32, nKeys = 100000, nValues = 3)

# Run progress: 83.58% complete, ETA 00:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 2)

# Run progress: 83.82% complete, ETA 00:12:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 32, nValues = 3)

# Run progress: 84.07% complete, ETA 00:12:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 2)

# Run progress: 84.31% complete, ETA 00:11:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 1000, nValues = 3)

# Run progress: 84.56% complete, ETA 00:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 2)

# Run progress: 84.80% complete, ETA 00:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 64, nKeys = 100000, nValues = 3)

# Run progress: 85.05% complete, ETA 00:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 2)

# Run progress: 85.29% complete, ETA 00:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 32, nValues = 3)

# Run progress: 85.54% complete, ETA 00:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.004 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 2)

# Run progress: 85.78% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 1000, nValues = 3)

# Run progress: 86.03% complete, ETA 00:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 2)

# Run progress: 86.27% complete, ETA 00:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 128, nKeys = 100000, nValues = 3)

# Run progress: 86.52% complete, ETA 00:10:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.005 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 2)

# Run progress: 86.76% complete, ETA 00:10:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 32, nValues = 3)

# Run progress: 87.01% complete, ETA 00:09:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.006, 0.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 2)

# Run progress: 87.25% complete, ETA 00:09:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 1000, nValues = 3)

# Run progress: 87.50% complete, ETA 00:09:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.008] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 2)

# Run progress: 87.75% complete, ETA 00:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.011 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.009 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.008 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.009), stdev = 0.001
  CI (99.9%): [0.004, 0.011] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 256, nKeys = 100000, nValues = 3)

# Run progress: 87.99% complete, ETA 00:09:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.008 ms/op
Iteration   4: 0.008 ms/op
Iteration   5: 0.007 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.007 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.006, 0.009] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 2)

# Run progress: 88.24% complete, ETA 00:08:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.016 ms/op
Iteration   2: 0.016 ms/op
Iteration   3: 0.016 ms/op
Iteration   4: 0.015 ms/op
Iteration   5: 0.014 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.015 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.014, 0.015, 0.016), stdev = 0.001
  CI (99.9%): [0.011, 0.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 32, nValues = 3)

# Run progress: 88.48% complete, ETA 00:08:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.019 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.015 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.014 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.015), stdev = 0.001
  CI (99.9%): [0.011, 0.018] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 2)

# Run progress: 88.73% complete, ETA 00:08:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.016 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.014 ms/op
Iteration   1: 0.016 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.017 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.016, 0.017, 0.018), stdev = 0.001
  CI (99.9%): [0.014, 0.020] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 1000, nValues = 3)

# Run progress: 88.97% complete, ETA 00:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.017 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.018 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.015 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.016 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.014, 0.016, 0.018), stdev = 0.002
  CI (99.9%): [0.010, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 2)

# Run progress: 89.22% complete, ETA 00:08:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.017 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.016 ms/op
# Warmup Iteration   5: 0.017 ms/op
Iteration   1: 0.017 ms/op
Iteration   2: 0.016 ms/op
Iteration   3: 0.017 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.016 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.016 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.014, 0.016, 0.017), stdev = 0.001
  CI (99.9%): [0.011, 0.021] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 512, nKeys = 100000, nValues = 3)

# Run progress: 89.46% complete, ETA 00:07:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.019 ms/op
# Warmup Iteration   3: 0.018 ms/op
# Warmup Iteration   4: 0.017 ms/op
# Warmup Iteration   5: 0.016 ms/op
Iteration   1: 0.016 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.017 ms/op
Iteration   5: 0.015 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.015 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.014, 0.015, 0.017), stdev = 0.001
  CI (99.9%): [0.010, 0.020] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 2)

# Run progress: 89.71% complete, ETA 00:07:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.038 ms/op
# Warmup Iteration   2: 0.034 ms/op
# Warmup Iteration   3: 0.030 ms/op
# Warmup Iteration   4: 0.030 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.028 ms/op
Iteration   2: 0.032 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.028 ms/op
Iteration   5: 0.028 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.029 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.028, 0.029, 0.032), stdev = 0.002
  CI (99.9%): [0.022, 0.036] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 32, nValues = 3)

# Run progress: 89.95% complete, ETA 00:07:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.032 ms/op
# Warmup Iteration   3: 0.036 ms/op
# Warmup Iteration   4: 0.033 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.032 ms/op
Iteration   2: 0.029 ms/op
Iteration   3: 0.028 ms/op
Iteration   4: 0.028 ms/op
Iteration   5: 0.029 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.029 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.028, 0.029, 0.032), stdev = 0.002
  CI (99.9%): [0.024, 0.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 2)

# Run progress: 90.20% complete, ETA 00:07:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.032 ms/op
# Warmup Iteration   2: 0.029 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.028 ms/op
# Warmup Iteration   5: 0.029 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.029 ms/op
Iteration   4: 0.029 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.028 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.027, 0.028, 0.029), stdev = 0.001
  CI (99.9%): [0.023, 0.033] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 1000, nValues = 3)

# Run progress: 90.44% complete, ETA 00:07:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.029 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.028 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.027 ms/op
Iteration   3: 0.027 ms/op
Iteration   4: 0.031 ms/op
Iteration   5: 0.027 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.028 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.027, 0.028, 0.031), stdev = 0.002
  CI (99.9%): [0.021, 0.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 2)

# Run progress: 90.69% complete, ETA 00:07:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.036 ms/op
# Warmup Iteration   2: 0.027 ms/op
# Warmup Iteration   3: 0.027 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.028 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.031 ms/op
Iteration   4: 0.033 ms/op
Iteration   5: 0.033 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.031 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.030, 0.031, 0.033), stdev = 0.001
  CI (99.9%): [0.026, 0.037] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 1024, nKeys = 100000, nValues = 3)

# Run progress: 90.93% complete, ETA 00:06:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.028 ms/op
# Warmup Iteration   3: 0.028 ms/op
# Warmup Iteration   4: 0.027 ms/op
# Warmup Iteration   5: 0.027 ms/op
Iteration   1: 0.027 ms/op
Iteration   2: 0.026 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.031 ms/op
Iteration   5: 0.035 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.030 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.026, 0.030, 0.035), stdev = 0.003
  CI (99.9%): [0.017, 0.043] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 2)

# Run progress: 91.18% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
# Warmup Iteration   2: 0.062 ms/op
# Warmup Iteration   3: 0.058 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.062 ms/op
Iteration   1: 0.068 ms/op
Iteration   2: 0.060 ms/op
Iteration   3: 0.062 ms/op
Iteration   4: 0.060 ms/op
Iteration   5: 0.058 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.062 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.058, 0.062, 0.068), stdev = 0.004
  CI (99.9%): [0.048, 0.075] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 32, nValues = 3)

# Run progress: 91.42% complete, ETA 00:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.071 ms/op
# Warmup Iteration   2: 0.068 ms/op
# Warmup Iteration   3: 0.068 ms/op
# Warmup Iteration   4: 0.059 ms/op
# Warmup Iteration   5: 0.071 ms/op
Iteration   1: 0.068 ms/op
Iteration   2: 0.062 ms/op
Iteration   3: 0.064 ms/op
Iteration   4: 0.061 ms/op
Iteration   5: 0.067 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.064 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.061, 0.064, 0.068), stdev = 0.003
  CI (99.9%): [0.053, 0.075] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 2)

# Run progress: 91.67% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.070 ms/op
# Warmup Iteration   2: 0.062 ms/op
# Warmup Iteration   3: 0.056 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.059 ms/op
Iteration   1: 0.071 ms/op
Iteration   2: 0.060 ms/op
Iteration   3: 0.057 ms/op
Iteration   4: 0.059 ms/op
Iteration   5: 0.058 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.061 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.057, 0.061, 0.071), stdev = 0.006
  CI (99.9%): [0.039, 0.083] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 1000, nValues = 3)

# Run progress: 91.91% complete, ETA 00:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.067 ms/op
# Warmup Iteration   2: 0.057 ms/op
# Warmup Iteration   3: 0.062 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.061 ms/op
Iteration   1: 0.062 ms/op
Iteration   2: 0.058 ms/op
Iteration   3: 0.056 ms/op
Iteration   4: 0.055 ms/op
Iteration   5: 0.061 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.059 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.055, 0.059, 0.062), stdev = 0.003
  CI (99.9%): [0.047, 0.070] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 2)

# Run progress: 92.16% complete, ETA 00:05:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.067 ms/op
# Warmup Iteration   2: 0.057 ms/op
# Warmup Iteration   3: 0.057 ms/op
# Warmup Iteration   4: 0.057 ms/op
# Warmup Iteration   5: 0.057 ms/op
Iteration   1: 0.060 ms/op
Iteration   2: 0.057 ms/op
Iteration   3: 0.057 ms/op
Iteration   4: 0.056 ms/op
Iteration   5: 0.057 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.057 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.056, 0.057, 0.060), stdev = 0.001
  CI (99.9%): [0.052, 0.062] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 2048, nKeys = 100000, nValues = 3)

# Run progress: 92.40% complete, ETA 00:05:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.077 ms/op
# Warmup Iteration   2: 0.063 ms/op
# Warmup Iteration   3: 0.057 ms/op
# Warmup Iteration   4: 0.062 ms/op
# Warmup Iteration   5: 0.063 ms/op
Iteration   1: 0.059 ms/op
Iteration   2: 0.065 ms/op
Iteration   3: 0.058 ms/op
Iteration   4: 0.063 ms/op
Iteration   5: 0.062 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.061 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.058, 0.061, 0.065), stdev = 0.003
  CI (99.9%): [0.050, 0.073] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 2)

# Run progress: 92.65% complete, ETA 00:05:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.154 ms/op
# Warmup Iteration   2: 0.125 ms/op
# Warmup Iteration   3: 0.115 ms/op
# Warmup Iteration   4: 0.134 ms/op
# Warmup Iteration   5: 0.129 ms/op
Iteration   1: 0.108 ms/op
Iteration   2: 0.110 ms/op
Iteration   3: 0.124 ms/op
Iteration   4: 0.149 ms/op
Iteration   5: 0.131 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.125 ±(99.9%) 0.065 ms/op [Average]
  (min, avg, max) = (0.108, 0.125, 0.149), stdev = 0.017
  CI (99.9%): [0.060, 0.189] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 32, nValues = 3)

# Run progress: 92.89% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.173 ms/op
# Warmup Iteration   2: 0.137 ms/op
# Warmup Iteration   3: 0.114 ms/op
# Warmup Iteration   4: 0.124 ms/op
# Warmup Iteration   5: 0.132 ms/op
Iteration   1: 0.119 ms/op
Iteration   2: 0.143 ms/op
Iteration   3: 0.133 ms/op
Iteration   4: 0.127 ms/op
Iteration   5: 0.130 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.130 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (0.119, 0.130, 0.143), stdev = 0.009
  CI (99.9%): [0.097, 0.164] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 2)

# Run progress: 93.14% complete, ETA 00:05:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.207 ms/op
# Warmup Iteration   2: 0.160 ms/op
# Warmup Iteration   3: 0.138 ms/op
# Warmup Iteration   4: 0.138 ms/op
# Warmup Iteration   5: 0.141 ms/op
Iteration   1: 0.135 ms/op
Iteration   2: 0.149 ms/op
Iteration   3: 0.148 ms/op
Iteration   4: 0.155 ms/op
Iteration   5: 0.132 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.144 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.132, 0.144, 0.155), stdev = 0.010
  CI (99.9%): [0.106, 0.182] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 1000, nValues = 3)

# Run progress: 93.38% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.162 ms/op
# Warmup Iteration   2: 0.120 ms/op
# Warmup Iteration   3: 0.116 ms/op
# Warmup Iteration   4: 0.125 ms/op
# Warmup Iteration   5: 0.120 ms/op
Iteration   1: 0.112 ms/op
Iteration   2: 0.114 ms/op
Iteration   3: 0.115 ms/op
Iteration   4: 0.113 ms/op
Iteration   5: 0.112 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.113 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.112, 0.113, 0.115), stdev = 0.001
  CI (99.9%): [0.108, 0.118] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 2)

# Run progress: 93.63% complete, ETA 00:04:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.156 ms/op
# Warmup Iteration   2: 0.116 ms/op
# Warmup Iteration   3: 0.128 ms/op
# Warmup Iteration   4: 0.137 ms/op
# Warmup Iteration   5: 0.127 ms/op
Iteration   1: 0.140 ms/op
Iteration   2: 0.125 ms/op
Iteration   3: 0.141 ms/op
Iteration   4: 0.133 ms/op
Iteration   5: 0.129 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.134 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (0.125, 0.134, 0.141), stdev = 0.007
  CI (99.9%): [0.108, 0.160] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 4096, nKeys = 100000, nValues = 3)

# Run progress: 93.87% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.193 ms/op
# Warmup Iteration   2: 0.132 ms/op
# Warmup Iteration   3: 0.123 ms/op
# Warmup Iteration   4: 0.127 ms/op
# Warmup Iteration   5: 0.112 ms/op
Iteration   1: 0.115 ms/op
Iteration   2: 0.111 ms/op
Iteration   3: 0.119 ms/op
Iteration   4: 0.128 ms/op
Iteration   5: 0.111 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.117 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.111, 0.117, 0.128), stdev = 0.007
  CI (99.9%): [0.090, 0.144] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 2)

# Run progress: 94.12% complete, ETA 00:04:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.255 ms/op
# Warmup Iteration   2: 0.218 ms/op
# Warmup Iteration   3: 0.227 ms/op
# Warmup Iteration   4: 0.241 ms/op
# Warmup Iteration   5: 0.226 ms/op
Iteration   1: 0.228 ms/op
Iteration   2: 0.227 ms/op
Iteration   3: 0.228 ms/op
Iteration   4: 0.242 ms/op
Iteration   5: 0.224 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.230 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.224, 0.230, 0.242), stdev = 0.007
  CI (99.9%): [0.203, 0.257] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 32, nValues = 3)

# Run progress: 94.36% complete, ETA 00:04:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.278 ms/op
# Warmup Iteration   2: 0.240 ms/op
# Warmup Iteration   3: 0.255 ms/op
# Warmup Iteration   4: 0.270 ms/op
# Warmup Iteration   5: 0.233 ms/op
Iteration   1: 0.249 ms/op
Iteration   2: 0.239 ms/op
Iteration   3: 0.242 ms/op
Iteration   4: 0.253 ms/op
Iteration   5: 0.261 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.249 ±(99.9%) 0.033 ms/op [Average]
  (min, avg, max) = (0.239, 0.249, 0.261), stdev = 0.009
  CI (99.9%): [0.215, 0.282] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 2)

# Run progress: 94.61% complete, ETA 00:04:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.378 ms/op
# Warmup Iteration   2: 0.231 ms/op
# Warmup Iteration   3: 0.228 ms/op
# Warmup Iteration   4: 0.239 ms/op
# Warmup Iteration   5: 0.232 ms/op
Iteration   1: 0.258 ms/op
Iteration   2: 0.264 ms/op
Iteration   3: 0.267 ms/op
Iteration   4: 0.239 ms/op
Iteration   5: 0.263 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.258 ±(99.9%) 0.044 ms/op [Average]
  (min, avg, max) = (0.239, 0.258, 0.267), stdev = 0.011
  CI (99.9%): [0.214, 0.302] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 1000, nValues = 3)

# Run progress: 94.85% complete, ETA 00:03:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.285 ms/op
# Warmup Iteration   2: 0.273 ms/op
# Warmup Iteration   3: 0.266 ms/op
# Warmup Iteration   4: 0.255 ms/op
# Warmup Iteration   5: 0.252 ms/op
Iteration   1: 0.243 ms/op
Iteration   2: 0.238 ms/op
Iteration   3: 0.242 ms/op
Iteration   4: 0.237 ms/op
Iteration   5: 0.239 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.240 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.237, 0.240, 0.243), stdev = 0.002
  CI (99.9%): [0.231, 0.249] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 2)

# Run progress: 95.10% complete, ETA 00:03:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.283 ms/op
# Warmup Iteration   2: 0.245 ms/op
# Warmup Iteration   3: 0.243 ms/op
# Warmup Iteration   4: 0.268 ms/op
# Warmup Iteration   5: 0.252 ms/op
Iteration   1: 0.268 ms/op
Iteration   2: 0.245 ms/op
Iteration   3: 0.245 ms/op
Iteration   4: 0.269 ms/op
Iteration   5: 0.255 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.256 ±(99.9%) 0.046 ms/op [Average]
  (min, avg, max) = (0.245, 0.256, 0.269), stdev = 0.012
  CI (99.9%): [0.210, 0.303] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 8192, nKeys = 100000, nValues = 3)

# Run progress: 95.34% complete, ETA 00:03:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.328 ms/op
# Warmup Iteration   2: 0.283 ms/op
# Warmup Iteration   3: 0.272 ms/op
# Warmup Iteration   4: 0.256 ms/op
# Warmup Iteration   5: 0.268 ms/op
Iteration   1: 0.284 ms/op
Iteration   2: 0.253 ms/op
Iteration   3: 0.261 ms/op
Iteration   4: 0.275 ms/op
Iteration   5: 0.260 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.267 ±(99.9%) 0.049 ms/op [Average]
  (min, avg, max) = (0.253, 0.267, 0.284), stdev = 0.013
  CI (99.9%): [0.218, 0.315] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 2)

# Run progress: 95.59% complete, ETA 00:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.654 ms/op
# Warmup Iteration   2: 0.506 ms/op
# Warmup Iteration   3: 0.563 ms/op
# Warmup Iteration   4: 0.565 ms/op
# Warmup Iteration   5: 0.521 ms/op
Iteration   1: 0.560 ms/op
Iteration   2: 0.566 ms/op
Iteration   3: 0.467 ms/op
Iteration   4: 0.493 ms/op
Iteration   5: 0.568 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.531 ±(99.9%) 0.183 ms/op [Average]
  (min, avg, max) = (0.467, 0.531, 0.568), stdev = 0.047
  CI (99.9%): [0.349, 0.714] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 32, nValues = 3)

# Run progress: 95.83% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.660 ms/op
# Warmup Iteration   2: 0.526 ms/op
# Warmup Iteration   3: 0.533 ms/op
# Warmup Iteration   4: 0.515 ms/op
# Warmup Iteration   5: 0.588 ms/op
Iteration   1: 0.535 ms/op
Iteration   2: 0.568 ms/op
Iteration   3: 0.543 ms/op
Iteration   4: 0.531 ms/op
Iteration   5: 0.459 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.527 ±(99.9%) 0.157 ms/op [Average]
  (min, avg, max) = (0.459, 0.527, 0.568), stdev = 0.041
  CI (99.9%): [0.370, 0.684] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 2)

# Run progress: 96.08% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.634 ms/op
# Warmup Iteration   2: 0.574 ms/op
# Warmup Iteration   3: 0.476 ms/op
# Warmup Iteration   4: 0.495 ms/op
# Warmup Iteration   5: 0.509 ms/op
Iteration   1: 0.464 ms/op
Iteration   2: 0.512 ms/op
Iteration   3: 0.468 ms/op
Iteration   4: 0.507 ms/op
Iteration   5: 0.445 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.479 ±(99.9%) 0.111 ms/op [Average]
  (min, avg, max) = (0.445, 0.479, 0.512), stdev = 0.029
  CI (99.9%): [0.368, 0.591] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 1000, nValues = 3)

# Run progress: 96.32% complete, ETA 00:02:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.581 ms/op
# Warmup Iteration   2: 0.494 ms/op
# Warmup Iteration   3: 0.553 ms/op
# Warmup Iteration   4: 0.503 ms/op
# Warmup Iteration   5: 0.498 ms/op
Iteration   1: 0.439 ms/op
Iteration   2: 0.510 ms/op
Iteration   3: 0.459 ms/op
Iteration   4: 0.451 ms/op
Iteration   5: 0.454 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.463 ±(99.9%) 0.107 ms/op [Average]
  (min, avg, max) = (0.439, 0.463, 0.510), stdev = 0.028
  CI (99.9%): [0.356, 0.569] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 2)

# Run progress: 96.57% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.572 ms/op
# Warmup Iteration   2: 0.453 ms/op
# Warmup Iteration   3: 0.513 ms/op
# Warmup Iteration   4: 0.516 ms/op
# Warmup Iteration   5: 0.507 ms/op
Iteration   1: 0.475 ms/op
Iteration   2: 0.492 ms/op
Iteration   3: 0.484 ms/op
Iteration   4: 0.459 ms/op
Iteration   5: 0.465 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.475 ±(99.9%) 0.052 ms/op [Average]
  (min, avg, max) = (0.459, 0.475, 0.492), stdev = 0.013
  CI (99.9%): [0.423, 0.527] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 16384, nKeys = 100000, nValues = 3)

# Run progress: 96.81% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.756 ms/op
# Warmup Iteration   2: 0.503 ms/op
# Warmup Iteration   3: 0.541 ms/op
# Warmup Iteration   4: 0.468 ms/op
# Warmup Iteration   5: 0.449 ms/op
Iteration   1: 0.497 ms/op
Iteration   2: 0.458 ms/op
Iteration   3: 0.453 ms/op
Iteration   4: 0.495 ms/op
Iteration   5: 0.436 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.468 ±(99.9%) 0.104 ms/op [Average]
  (min, avg, max) = (0.436, 0.468, 0.497), stdev = 0.027
  CI (99.9%): [0.363, 0.572] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 2)

# Run progress: 97.06% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: 1.095 ms/op
# Warmup Iteration   2: 0.873 ms/op
# Warmup Iteration   3: 0.873 ms/op
# Warmup Iteration   4: 0.920 ms/op
# Warmup Iteration   5: 0.887 ms/op
Iteration   1: 0.887 ms/op
Iteration   2: 0.881 ms/op
Iteration   3: 0.881 ms/op
Iteration   4: 0.894 ms/op
Iteration   5: 0.922 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.893 ±(99.9%) 0.065 ms/op [Average]
  (min, avg, max) = (0.881, 0.893, 0.922), stdev = 0.017
  CI (99.9%): [0.828, 0.958] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32768, nKeys = 32, nValues = 3)

# Run progress: 97.30% complete, ETA 00:02:02
# Fork: 1 of 1
# Warmup Iteration   1: 1.054 ms/op
# Warmup Iteration   2: 0.930 ms/op
# Warmup Iteration   3: 1.041 ms/op
# Warmup Iteration   4: 1.063 ms/op
# Warmup Iteration   5: 1.134 ms/op
Iteration   1: 0.898 ms/op
Iteration   2: 0.892 ms/op
Iteration   3: 0.892 ms/op
Iteration   4: 0.888 ms/op
Iteration   5: 0.934 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.901 ±(99.9%) 0.074 ms/op [Average]
  (min, avg, max) = (0.888, 0.901, 0.934), stdev = 0.019
  CI (99.9%): [0.827, 0.975] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 2)

# Run progress: 97.55% complete, ETA 00:01:50
# Fork: 1 of 1
# Warmup Iteration   1: 1.087 ms/op
# Warmup Iteration   2: 0.897 ms/op
# Warmup Iteration   3: 0.902 ms/op
# Warmup Iteration   4: 0.885 ms/op
# Warmup Iteration   5: 0.936 ms/op
Iteration   1: 0.908 ms/op
Iteration   2: 0.918 ms/op
Iteration   3: 0.923 ms/op
Iteration   4: 0.903 ms/op
Iteration   5: 0.904 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.911 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (0.903, 0.911, 0.923), stdev = 0.009
  CI (99.9%): [0.878, 0.945] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32768, nKeys = 1000, nValues = 3)

# Run progress: 97.79% complete, ETA 00:01:39
# Fork: 1 of 1
# Warmup Iteration   1: 1.140 ms/op
# Warmup Iteration   2: 0.951 ms/op
# Warmup Iteration   3: 0.980 ms/op
# Warmup Iteration   4: 1.033 ms/op
# Warmup Iteration   5: 1.019 ms/op
Iteration   1: 1.056 ms/op
Iteration   2: 0.920 ms/op
Iteration   3: 0.923 ms/op
Iteration   4: 0.925 ms/op
Iteration   5: 0.904 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.946 ±(99.9%) 0.240 ms/op [Average]
  (min, avg, max) = (0.904, 0.946, 1.056), stdev = 0.062
  CI (99.9%): [0.706, 1.186] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 2)

# Run progress: 98.04% complete, ETA 00:01:28
# Fork: 1 of 1
# Warmup Iteration   1: 1.277 ms/op
# Warmup Iteration   2: 0.922 ms/op
# Warmup Iteration   3: 0.928 ms/op
# Warmup Iteration   4: 0.936 ms/op
# Warmup Iteration   5: 0.929 ms/op
Iteration   1: 0.949 ms/op
Iteration   2: 0.897 ms/op
Iteration   3: 0.893 ms/op
Iteration   4: 0.891 ms/op
Iteration   5: 0.895 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.905 ±(99.9%) 0.095 ms/op [Average]
  (min, avg, max) = (0.891, 0.905, 0.949), stdev = 0.025
  CI (99.9%): [0.810, 0.999] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 32768, nKeys = 100000, nValues = 3)

# Run progress: 98.28% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: 1.366 ms/op
# Warmup Iteration   2: 0.902 ms/op
# Warmup Iteration   3: 0.883 ms/op
# Warmup Iteration   4: 0.905 ms/op
# Warmup Iteration   5: 0.894 ms/op
Iteration   1: 0.915 ms/op
Iteration   2: 0.920 ms/op
Iteration   3: 0.941 ms/op
Iteration   4: 0.922 ms/op
Iteration   5: 0.920 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  0.924 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (0.915, 0.924, 0.941), stdev = 0.010
  CI (99.9%): [0.885, 0.962] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 2)

# Run progress: 98.53% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: 2.186 ms/op
# Warmup Iteration   2: 1.884 ms/op
# Warmup Iteration   3: 2.026 ms/op
# Warmup Iteration   4: 2.134 ms/op
# Warmup Iteration   5: 1.883 ms/op
Iteration   1: 2.087 ms/op
Iteration   2: 1.793 ms/op
Iteration   3: 1.772 ms/op
Iteration   4: 1.878 ms/op
Iteration   5: 1.808 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  1.868 ±(99.9%) 0.497 ms/op [Average]
  (min, avg, max) = (1.772, 1.868, 2.087), stdev = 0.129
  CI (99.9%): [1.371, 2.364] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 65536, nKeys = 32, nValues = 3)

# Run progress: 98.77% complete, ETA 00:00:55
# Fork: 1 of 1
# Warmup Iteration   1: 2.160 ms/op
# Warmup Iteration   2: 1.898 ms/op
# Warmup Iteration   3: 1.759 ms/op
# Warmup Iteration   4: 1.866 ms/op
# Warmup Iteration   5: 1.918 ms/op
Iteration   1: 2.247 ms/op
Iteration   2: 1.921 ms/op
Iteration   3: 1.746 ms/op
Iteration   4: 1.798 ms/op
Iteration   5: 2.086 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  1.960 ±(99.9%) 0.797 ms/op [Average]
  (min, avg, max) = (1.746, 1.960, 2.247), stdev = 0.207
  CI (99.9%): [1.162, 2.757] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 2)

# Run progress: 99.02% complete, ETA 00:00:44
# Fork: 1 of 1
# Warmup Iteration   1: 2.661 ms/op
# Warmup Iteration   2: 1.990 ms/op
# Warmup Iteration   3: 1.758 ms/op
# Warmup Iteration   4: 1.972 ms/op
# Warmup Iteration   5: 2.469 ms/op
Iteration   1: 2.658 ms/op
Iteration   2: 2.010 ms/op
Iteration   3: 2.314 ms/op
Iteration   4: 2.566 ms/op
Iteration   5: 2.505 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  2.411 ±(99.9%) 0.990 ms/op [Average]
  (min, avg, max) = (2.010, 2.411, 2.658), stdev = 0.257
  CI (99.9%): [1.421, 3.401] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 65536, nKeys = 1000, nValues = 3)

# Run progress: 99.26% complete, ETA 00:00:33
# Fork: 1 of 1
# Warmup Iteration   1: 2.632 ms/op
# Warmup Iteration   2: 2.554 ms/op
# Warmup Iteration   3: 2.129 ms/op
# Warmup Iteration   4: 1.940 ms/op
# Warmup Iteration   5: 1.762 ms/op
Iteration   1: 1.764 ms/op
Iteration   2: 1.774 ms/op
Iteration   3: 1.806 ms/op
Iteration   4: 1.790 ms/op
Iteration   5: 2.121 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  1.851 ±(99.9%) 0.584 ms/op [Average]
  (min, avg, max) = (1.764, 1.851, 2.121), stdev = 0.152
  CI (99.9%): [1.267, 2.435] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 2)

# Run progress: 99.51% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 2.166 ms/op
# Warmup Iteration   2: 1.959 ms/op
# Warmup Iteration   3: 1.956 ms/op
# Warmup Iteration   4: 1.939 ms/op
# Warmup Iteration   5: 1.865 ms/op
Iteration   1: 1.965 ms/op
Iteration   2: 2.108 ms/op
Iteration   3: 1.986 ms/op
Iteration   4: 1.928 ms/op
Iteration   5: 1.758 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  1.949 ±(99.9%) 0.486 ms/op [Average]
  (min, avg, max) = (1.758, 1.949, 2.108), stdev = 0.126
  CI (99.9%): [1.463, 2.435] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark
# Parameters: (nGet = 65536, nKeys = 100000, nValues = 3)

# Run progress: 99.75% complete, ETA 00:00:11
# Fork: 1 of 1
# Warmup Iteration   1: 2.007 ms/op
# Warmup Iteration   2: 1.960 ms/op
# Warmup Iteration   3: 1.844 ms/op
# Warmup Iteration   4: 2.027 ms/op
# Warmup Iteration   5: 1.924 ms/op
Iteration   1: 1.831 ms/op
Iteration   2: 1.795 ms/op
Iteration   3: 1.727 ms/op
Iteration   4: 1.742 ms/op
Iteration   5: 1.804 ms/op


Result "tools.refinery.store.map.benchmarks.getall.ImmutableGetAllBenchmark.immutableGetAllBenchmark":
  1.780 ±(99.9%) 0.168 ms/op [Average]
  (min, avg, max) = (1.727, 1.780, 1.831), stdev = 0.044
  CI (99.9%): [1.612, 1.948] (assumes normal distribution)


# Run complete. Total time: 01:15:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                        (nGet)  (nKeys)  (nValues)  Mode  Cnt     Score      Error  Units
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       1       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       1       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       1     1000          2  avgt    5     0.021 ±    0.023  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       1     1000          3  avgt    5     0.022 ±    0.018  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       1   100000          2  avgt    5     6.822 ±    9.964  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       1   100000          3  avgt    5     4.552 ±    0.709  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       2       32          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       2       32          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       2     1000          2  avgt    5     0.015 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       2     1000          3  avgt    5     0.022 ±    0.019  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       2   100000          2  avgt    5     5.162 ±    4.451  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       2   100000          3  avgt    5     5.484 ±    6.054  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       4       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       4       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       4     1000          2  avgt    5     0.020 ±    0.016  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       4     1000          3  avgt    5     0.022 ±    0.021  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       4   100000          2  avgt    5     6.981 ±    4.204  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       4   100000          3  avgt    5     6.015 ±    5.120  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       8       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       8       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       8     1000          2  avgt    5     0.021 ±    0.020  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       8     1000          3  avgt    5     0.016 ±    0.007  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       8   100000          2  avgt    5     4.862 ±    2.012  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark       8   100000          3  avgt    5     4.796 ±    1.972  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16     1000          2  avgt    5     0.030 ±    0.003  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16     1000          3  avgt    5     0.029 ±    0.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16   100000          2  avgt    5    11.935 ±    5.648  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      16   100000          3  avgt    5    11.038 ±   14.453  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32       32          2  avgt    5     0.003 ±    0.003  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32       32          3  avgt    5     0.002 ±    0.002  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32     1000          2  avgt    5     0.074 ±    0.065  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32     1000          3  avgt    5     0.076 ±    0.073  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32   100000          2  avgt    5    23.283 ±   29.561  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      32   100000          3  avgt    5    22.160 ±   21.014  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64       32          2  avgt    5     0.005 ±    0.006  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64       32          3  avgt    5     0.004 ±    0.004  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64     1000          2  avgt    5     0.136 ±    0.158  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64     1000          3  avgt    5     0.122 ±    0.056  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64   100000          2  avgt    5    38.124 ±   31.118  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark      64   100000          3  avgt    5    39.152 ±   39.087  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128       32          2  avgt    5     0.008 ±    0.009  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128       32          3  avgt    5     0.008 ±    0.008  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128     1000          2  avgt    5     0.254 ±    0.279  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128     1000          3  avgt    5     0.252 ±    0.281  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128   100000          2  avgt    5    75.456 ±   28.541  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     128   100000          3  avgt    5    81.510 ±   56.934  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256       32          2  avgt    5     0.017 ±    0.015  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256       32          3  avgt    5     0.018 ±    0.022  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256     1000          2  avgt    5     0.532 ±    0.489  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256     1000          3  avgt    5     0.548 ±    0.417  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256   100000          2  avgt    5   166.963 ±   95.518  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     256   100000          3  avgt    5   155.394 ±  118.596  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512       32          2  avgt    5     0.034 ±    0.040  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512       32          3  avgt    5     0.037 ±    0.040  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512     1000          2  avgt    5     0.981 ±    0.922  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512     1000          3  avgt    5     1.264 ±    1.902  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512   100000          2  avgt    5   344.935 ±  271.125  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark     512   100000          3  avgt    5   328.599 ±  146.747  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024       32          2  avgt    5     0.083 ±    0.095  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024       32          3  avgt    5     0.087 ±    0.132  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024     1000          2  avgt    5     2.323 ±    2.816  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024     1000          3  avgt    5     2.437 ±    3.204  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024   100000          2  avgt    5   823.120 ±  216.001  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    1024   100000          3  avgt    5   869.331 ±  542.396  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048       32          2  avgt    5     0.174 ±    0.219  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048       32          3  avgt    5     0.142 ±    0.124  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048     1000          2  avgt    5     4.736 ±    4.268  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048     1000          3  avgt    5     4.244 ±    4.088  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048   100000          2  avgt    5  1710.438 ±  703.835  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    2048   100000          3  avgt    5  1397.070 ±  559.151  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096       32          2  avgt    5     0.271 ±    0.295  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096       32          3  avgt    5     0.287 ±    0.323  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096     1000          2  avgt    5     8.505 ±    9.524  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096     1000          3  avgt    5     8.521 ±    9.266  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096   100000          2  avgt    5  3217.414 ± 1316.264  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    4096   100000          3  avgt    5  4013.247 ± 1949.126  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192       32          2  avgt    5     0.588 ±    0.668  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192       32          3  avgt    5     0.615 ±    0.726  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192     1000          2  avgt    5    17.373 ±   16.582  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark    8192     1000          3  avgt    5    18.482 ±   17.951  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384       32          2  avgt    5     1.000 ±    0.497  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384       32          3  avgt    5     0.852 ±    0.035  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384     1000          2  avgt    5    27.625 ±    4.866  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   16384     1000          3  avgt    5    25.017 ±    2.678  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   32768       32          2  avgt    5     2.017 ±    0.905  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   32768       32          3  avgt    5     2.215 ±    0.218  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   32768     1000          2  avgt    5    64.092 ±   19.907  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   32768     1000          3  avgt    5    56.528 ±    5.226  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   65536       32          2  avgt    5     3.959 ±    0.377  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   65536       32          3  avgt    5     4.157 ±    0.319  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   65536     1000          2  avgt    5   209.158 ±  221.677  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesAndCommitBenchmark   65536     1000          3  avgt    5   209.391 ±  259.912  ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                1       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                1       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                1     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                1     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                1   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                1   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                2       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                2       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                2     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                2     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                2   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                2   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                4       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                4       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                4     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                4     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                4   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                4   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                8       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                8       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                8     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                8     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                8   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark                8   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               16   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               32   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark               64   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              128   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              256   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark              512   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             1024   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             2048   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             4096   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark             8192   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            16384   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            32768       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            32768       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            32768     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            32768     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            32768   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            32768   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            65536       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            65536       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            65536     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            65536     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            65536   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.baselineGetAllValuesBenchmark            65536   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            1       32          2  avgt    3     0.001 ±    0.009  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            1       32          3  avgt    3     0.001 ±    0.008  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            1     1000          2  avgt    3     0.001 ±    0.010  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            1     1000          3  avgt    3     0.001 ±    0.021  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            1   100000          2  avgt    5     0.001 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            1   100000          3  avgt    3     0.001 ±    0.014  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            2       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            2       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            2     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            2     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            2   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            2   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            4       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            4       32          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            4     1000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            4     1000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            4   100000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            4   100000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            8       32          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            8       32          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            8     1000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            8     1000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            8   100000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark            8   100000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16     1000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16     1000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16   100000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           16   100000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32       32          2  avgt    5     0.002 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32       32          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32     1000          2  avgt    5     0.002 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32     1000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32   100000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           32   100000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64       32          2  avgt    5     0.004 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64       32          3  avgt    5     0.005 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64     1000          2  avgt    5     0.004 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64     1000          3  avgt    5     0.004 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64   100000          2  avgt    5     0.004 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark           64   100000          3  avgt    5     0.003 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128       32          2  avgt    5     0.006 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128       32          3  avgt    5     0.006 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128     1000          2  avgt    5     0.006 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128     1000          3  avgt    5     0.006 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128   100000          2  avgt    5     0.006 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          128   100000          3  avgt    5     0.007 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256       32          2  avgt    5     0.013 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256       32          3  avgt    5     0.013 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256     1000          2  avgt    5     0.014 ±    0.007  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256     1000          3  avgt    5     0.013 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256   100000          2  avgt    5     0.014 ±    0.008  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          256   100000          3  avgt    5     0.013 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512       32          2  avgt    5     0.026 ±    0.015  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512       32          3  avgt    5     0.025 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512     1000          2  avgt    5     0.024 ±    0.013  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512     1000          3  avgt    5     0.028 ±    0.012  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512   100000          2  avgt    5     0.031 ±    0.020  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark          512   100000          3  avgt    5     0.029 ±    0.011  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024       32          2  avgt    5     0.054 ±    0.009  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024       32          3  avgt    5     0.056 ±    0.022  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024     1000          2  avgt    5     0.052 ±    0.022  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024     1000          3  avgt    5     0.050 ±    0.020  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024   100000          2  avgt    5     0.047 ±    0.021  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         1024   100000          3  avgt    5     0.047 ±    0.023  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048       32          2  avgt    5     0.090 ±    0.031  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048       32          3  avgt    5     0.093 ±    0.030  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048     1000          2  avgt    5     0.093 ±    0.039  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048     1000          3  avgt    5     0.093 ±    0.027  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048   100000          2  avgt    5     0.096 ±    0.038  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         2048   100000          3  avgt    5     0.102 ±    0.031  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096       32          2  avgt    5     0.184 ±    0.064  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096       32          3  avgt    5     0.216 ±    0.117  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096     1000          2  avgt    5     0.211 ±    0.115  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096     1000          3  avgt    5     0.213 ±    0.066  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096   100000          2  avgt    5     0.201 ±    0.046  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         4096   100000          3  avgt    5     0.210 ±    0.106  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192       32          2  avgt    5     0.374 ±    0.175  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192       32          3  avgt    5     0.400 ±    0.209  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192     1000          2  avgt    5     0.360 ±    0.119  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192     1000          3  avgt    5     0.401 ±    0.108  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192   100000          2  avgt    5     0.410 ±    0.139  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark         8192   100000          3  avgt    5     0.403 ±    0.146  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384       32          2  avgt    5     0.822 ±    0.374  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384       32          3  avgt    5     0.790 ±    0.493  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384     1000          2  avgt    5     0.831 ±    0.258  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384     1000          3  avgt    5     0.915 ±    0.338  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384   100000          2  avgt    5     1.034 ±    0.574  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        16384   100000          3  avgt    5     1.048 ±    0.506  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        32768       32          2  avgt    5     1.877 ±    1.579  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        32768       32          3  avgt    5     1.578 ±    0.455  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        32768     1000          2  avgt    5     1.450 ±    0.375  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        32768     1000          3  avgt    5     1.437 ±    0.556  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        32768   100000          2  avgt    5     1.435 ±    0.656  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        32768   100000          3  avgt    5     1.559 ±    1.004  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        65536       32          2  avgt    5     3.363 ±    1.875  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        65536       32          3  avgt    5     2.792 ±    0.803  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        65536     1000          2  avgt    5     2.827 ±    1.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        65536     1000          3  avgt    5     2.927 ±    1.119  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        65536   100000          2  avgt    5     3.094 ±    1.368  ms/op
ImmutableGetAllBenchmark.immutableGetAllAndCommitBenchmark        65536   100000          3  avgt    5     3.069 ±    0.821  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     1       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     1       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     1     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     1     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     1   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     1   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     2       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     2       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     2     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     2     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     2   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     2   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     4       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     4       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     4     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     4     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     4   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     4   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     8       32          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     8       32          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     8     1000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     8     1000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     8   100000          2  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                     8   100000          3  avgt    5    ? 10??             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16       32          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16     1000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16     1000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16   100000          2  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    16   100000          3  avgt    5    ? 10?³             ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32       32          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32       32          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32     1000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32     1000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32   100000          2  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    32   100000          3  avgt    5     0.001 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64       32          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64       32          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64     1000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64     1000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64   100000          2  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                    64   100000          3  avgt    5     0.002 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128       32          2  avgt    5     0.004 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128       32          3  avgt    5     0.004 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128     1000          2  avgt    5     0.004 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128     1000          3  avgt    5     0.004 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128   100000          2  avgt    5     0.004 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   128   100000          3  avgt    5     0.004 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256       32          2  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256       32          3  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256     1000          2  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256     1000          3  avgt    5     0.007 ±    0.001  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256   100000          2  avgt    5     0.008 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   256   100000          3  avgt    5     0.007 ±    0.002  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512       32          2  avgt    5     0.015 ±    0.004  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512       32          3  avgt    5     0.014 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512     1000          2  avgt    5     0.017 ±    0.003  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512     1000          3  avgt    5     0.016 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512   100000          2  avgt    5     0.016 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                   512   100000          3  avgt    5     0.015 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024       32          2  avgt    5     0.029 ±    0.007  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024       32          3  avgt    5     0.029 ±    0.006  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024     1000          2  avgt    5     0.028 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024     1000          3  avgt    5     0.028 ±    0.007  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024   100000          2  avgt    5     0.031 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  1024   100000          3  avgt    5     0.030 ±    0.013  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048       32          2  avgt    5     0.062 ±    0.014  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048       32          3  avgt    5     0.064 ±    0.011  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048     1000          2  avgt    5     0.061 ±    0.022  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048     1000          3  avgt    5     0.059 ±    0.012  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048   100000          2  avgt    5     0.057 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  2048   100000          3  avgt    5     0.061 ±    0.011  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096       32          2  avgt    5     0.125 ±    0.065  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096       32          3  avgt    5     0.130 ±    0.034  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096     1000          2  avgt    5     0.144 ±    0.038  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096     1000          3  avgt    5     0.113 ±    0.005  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096   100000          2  avgt    5     0.134 ±    0.026  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  4096   100000          3  avgt    5     0.117 ±    0.027  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192       32          2  avgt    5     0.230 ±    0.027  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192       32          3  avgt    5     0.249 ±    0.033  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192     1000          2  avgt    5     0.258 ±    0.044  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192     1000          3  avgt    5     0.240 ±    0.009  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192   100000          2  avgt    5     0.256 ±    0.046  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                  8192   100000          3  avgt    5     0.267 ±    0.049  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384       32          2  avgt    5     0.531 ±    0.183  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384       32          3  avgt    5     0.527 ±    0.157  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384     1000          2  avgt    5     0.479 ±    0.111  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384     1000          3  avgt    5     0.463 ±    0.107  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384   100000          2  avgt    5     0.475 ±    0.052  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 16384   100000          3  avgt    5     0.468 ±    0.104  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 32768       32          2  avgt    5     0.893 ±    0.065  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 32768       32          3  avgt    5     0.901 ±    0.074  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 32768     1000          2  avgt    5     0.911 ±    0.034  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 32768     1000          3  avgt    5     0.946 ±    0.240  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 32768   100000          2  avgt    5     0.905 ±    0.095  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 32768   100000          3  avgt    5     0.924 ±    0.038  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 65536       32          2  avgt    5     1.868 ±    0.497  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 65536       32          3  avgt    5     1.960 ±    0.797  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 65536     1000          2  avgt    5     2.411 ±    0.990  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 65536     1000          3  avgt    5     1.851 ±    0.584  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 65536   100000          2  avgt    5     1.949 ±    0.486  ms/op
ImmutableGetAllBenchmark.immutableGetAllBenchmark                 65536   100000          3  avgt    5     1.780 ±    0.168  ms/op

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.3.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 1h 15m 26s
13 actionable tasks: 2 executed, 11 up-to-date
