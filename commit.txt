Type-safe dependency accessors is an incubating feature.
> Task :buildSrc:extractPluginRequests UP-TO-DATE
> Task :buildSrc:generatePluginAdapters UP-TO-DATE
> Task :buildSrc:compileJava UP-TO-DATE
> Task :buildSrc:compileGroovy NO-SOURCE
> Task :buildSrc:compileGroovyPlugins UP-TO-DATE
> Task :buildSrc:pluginDescriptors UP-TO-DATE
> Task :buildSrc:processResources UP-TO-DATE
> Task :buildSrc:classes UP-TO-DATE
> Task :buildSrc:jar UP-TO-DATE
> Task :buildSrc:assemble UP-TO-DATE
> Task :buildSrc:pluginUnderTestMetadata UP-TO-DATE
> Task :buildSrc:compileTestJava NO-SOURCE
> Task :buildSrc:compileTestGroovy NO-SOURCE
> Task :buildSrc:processTestResources NO-SOURCE
> Task :buildSrc:testClasses UP-TO-DATE
> Task :buildSrc:test NO-SOURCE
> Task :buildSrc:validatePlugins UP-TO-DATE
> Task :buildSrc:check UP-TO-DATE
> Task :buildSrc:build UP-TO-DATE
> Task :refinery-store:compileJava UP-TO-DATE
> Task :refinery-store:processResources NO-SOURCE
> Task :refinery-store:classes UP-TO-DATE
> Task :refinery-store:compileTestJava UP-TO-DATE
> Task :refinery-store:processTestResources NO-SOURCE
> Task :refinery-store:testClasses UP-TO-DATE
> Task :refinery-store:compileJmhJava
> Task :refinery-store:processJmhResources NO-SOURCE
> Task :refinery-store:jmhClasses

> Task :refinery-store:jmh
# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 32, nValues = 2)

# Run progress: 0.00% complete, ETA 00:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.007 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.010 ±(99.9%) 0.012 ms/op [Average]
  (min, avg, max) = (0.008, 0.010, 0.014), stdev = 0.003
  CI (99.9%): [? 0, 0.022] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 32, nValues = 3)

# Run progress: 0.76% complete, ETA 00:23:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
# Warmup Iteration   2: 0.008 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: 0.008 ms/op
Iteration   1: 0.008 ms/op
Iteration   2: 0.008 ms/op
Iteration   3: 0.009 ms/op
Iteration   4: 0.012 ms/op
Iteration   5: 0.013 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.010 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.008, 0.010, 0.013), stdev = 0.003
  CI (99.9%): [? 0, 0.020] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 1000, nValues = 2)

# Run progress: 1.52% complete, ETA 00:22:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.254 ms/op
# Warmup Iteration   2: 0.227 ms/op
# Warmup Iteration   3: 0.233 ms/op
# Warmup Iteration   4: 0.229 ms/op
# Warmup Iteration   5: 0.236 ms/op
Iteration   1: 0.231 ms/op
Iteration   2: 0.231 ms/op
Iteration   3: 0.266 ms/op
Iteration   4: 0.332 ms/op
Iteration   5: 0.412 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.294 ±(99.9%) 0.298 ms/op [Average]
  (min, avg, max) = (0.231, 0.294, 0.412), stdev = 0.077
  CI (99.9%): [? 0, 0.593] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 1000, nValues = 3)

# Run progress: 2.27% complete, ETA 00:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.255 ms/op
# Warmup Iteration   2: 0.228 ms/op
# Warmup Iteration   3: 0.231 ms/op
# Warmup Iteration   4: 0.232 ms/op
# Warmup Iteration   5: 0.227 ms/op
Iteration   1: 0.235 ms/op
Iteration   2: 0.229 ms/op
Iteration   3: 0.258 ms/op
Iteration   4: 0.329 ms/op
Iteration   5: 0.375 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.285 ±(99.9%) 0.246 ms/op [Average]
  (min, avg, max) = (0.229, 0.285, 0.375), stdev = 0.064
  CI (99.9%): [0.039, 0.531] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 100000, nValues = 2)

# Run progress: 3.03% complete, ETA 00:22:22
# Fork: 1 of 1
# Warmup Iteration   1: 72.255 ms/op
# Warmup Iteration   2: 71.332 ms/op
# Warmup Iteration   3: 63.917 ms/op
# Warmup Iteration   4: 62.685 ms/op
# Warmup Iteration   5: 67.310 ms/op
Iteration   1: 65.287 ms/op
Iteration   2: 71.230 ms/op
Iteration   3: 89.025 ms/op
Iteration   4: 100.726 ms/op
Iteration   5: 106.026 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  86.459 ±(99.9%) 68.699 ms/op [Average]
  (min, avg, max) = (65.287, 86.459, 106.026), stdev = 17.841
  CI (99.9%): [17.760, 155.157] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 100000, nValues = 3)

# Run progress: 3.79% complete, ETA 00:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 70.708 ms/op
# Warmup Iteration   2: 64.743 ms/op
# Warmup Iteration   3: 61.624 ms/op
# Warmup Iteration   4: 60.330 ms/op
# Warmup Iteration   5: 64.960 ms/op
Iteration   1: 81.772 ms/op
Iteration   2: 67.823 ms/op
Iteration   3: 84.921 ms/op
Iteration   4: 81.114 ms/op
Iteration   5: 80.933 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  79.313 ±(99.9%) 25.498 ms/op [Average]
  (min, avg, max) = (67.823, 79.313, 84.921), stdev = 6.622
  CI (99.9%): [53.815, 104.810] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 32, nValues = 2)

# Run progress: 4.55% complete, ETA 00:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.016 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.024 ms/op
Iteration   5: 0.024 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.019 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.015, 0.019, 0.024), stdev = 0.004
  CI (99.9%): [0.003, 0.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 32, nValues = 3)

# Run progress: 5.30% complete, ETA 00:22:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.015 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: 0.015 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.017 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.024 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.019 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.015, 0.019, 0.024), stdev = 0.004
  CI (99.9%): [0.002, 0.035] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 1000, nValues = 2)

# Run progress: 6.06% complete, ETA 00:21:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.512 ms/op
# Warmup Iteration   2: 0.470 ms/op
# Warmup Iteration   3: 0.452 ms/op
# Warmup Iteration   4: 0.465 ms/op
# Warmup Iteration   5: 0.460 ms/op
Iteration   1: 0.453 ms/op
Iteration   2: 0.483 ms/op
Iteration   3: 0.520 ms/op
Iteration   4: 0.685 ms/op
Iteration   5: 0.726 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.573 ±(99.9%) 0.476 ms/op [Average]
  (min, avg, max) = (0.453, 0.573, 0.726), stdev = 0.124
  CI (99.9%): [0.098, 1.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 1000, nValues = 3)

# Run progress: 6.82% complete, ETA 00:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.503 ms/op
# Warmup Iteration   2: 0.489 ms/op
# Warmup Iteration   3: 0.465 ms/op
# Warmup Iteration   4: 0.518 ms/op
# Warmup Iteration   5: 0.549 ms/op
Iteration   1: 0.620 ms/op
Iteration   2: 0.568 ms/op
Iteration   3: 0.651 ms/op
Iteration   4: 0.928 ms/op
Iteration   5: 0.834 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.720 ±(99.9%) 0.591 ms/op [Average]
  (min, avg, max) = (0.568, 0.720, 0.928), stdev = 0.154
  CI (99.9%): [0.129, 1.311] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 100000, nValues = 2)

# Run progress: 7.58% complete, ETA 00:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 149.941 ms/op
# Warmup Iteration   2: 154.177 ms/op
# Warmup Iteration   3: 177.784 ms/op
# Warmup Iteration   4: 151.364 ms/op
# Warmup Iteration   5: 154.747 ms/op
Iteration   1: 149.713 ms/op
Iteration   2: 144.551 ms/op
Iteration   3: 238.956 ms/op
Iteration   4: 214.140 ms/op
Iteration   5: 204.541 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  190.380 ±(99.9%) 159.684 ms/op [Average]
  (min, avg, max) = (144.551, 190.380, 238.956), stdev = 41.469
  CI (99.9%): [30.696, 350.064] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 100000, nValues = 3)

# Run progress: 8.33% complete, ETA 00:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 153.275 ms/op
# Warmup Iteration   2: 150.341 ms/op
# Warmup Iteration   3: 163.827 ms/op
# Warmup Iteration   4: 171.916 ms/op
# Warmup Iteration   5: 173.849 ms/op
Iteration   1: 188.461 ms/op
Iteration   2: 149.005 ms/op
Iteration   3: 208.418 ms/op
Iteration   4: 215.958 ms/op
Iteration   5: 208.561 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  194.081 ±(99.9%) 104.700 ms/op [Average]
  (min, avg, max) = (149.005, 194.081, 215.958), stdev = 27.190
  CI (99.9%): [89.381, 298.781] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 32, nValues = 2)

# Run progress: 9.09% complete, ETA 00:21:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.037 ms/op
# Warmup Iteration   2: 0.036 ms/op
# Warmup Iteration   3: 0.040 ms/op
# Warmup Iteration   4: 0.031 ms/op
# Warmup Iteration   5: 0.033 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.032 ms/op
Iteration   3: 0.035 ms/op
Iteration   4: 0.055 ms/op
Iteration   5: 0.045 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.039 ±(99.9%) 0.040 ms/op [Average]
  (min, avg, max) = (0.030, 0.039, 0.055), stdev = 0.010
  CI (99.9%): [? 0, 0.079] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 32, nValues = 3)

# Run progress: 9.85% complete, ETA 00:21:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.039 ms/op
# Warmup Iteration   2: 0.037 ms/op
# Warmup Iteration   3: 0.033 ms/op
# Warmup Iteration   4: 0.033 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: 0.033 ms/op
Iteration   2: 0.033 ms/op
Iteration   3: 0.038 ms/op
Iteration   4: 0.049 ms/op
Iteration   5: 0.048 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.040 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (0.033, 0.040, 0.049), stdev = 0.008
  CI (99.9%): [0.009, 0.071] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 1000, nValues = 2)

# Run progress: 10.61% complete, ETA 00:21:06
# Fork: 1 of 1
# Warmup Iteration   1: 1.450 ms/op
# Warmup Iteration   2: 1.386 ms/op
# Warmup Iteration   3: 1.201 ms/op
# Warmup Iteration   4: 1.203 ms/op
# Warmup Iteration   5: 1.254 ms/op
Iteration   1: 1.342 ms/op
Iteration   2: 1.328 ms/op
Iteration   3: 1.794 ms/op
Iteration   4: 2.029 ms/op
Iteration   5: 1.841 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1.667 ±(99.9%) 1.215 ms/op [Average]
  (min, avg, max) = (1.328, 1.667, 2.029), stdev = 0.316
  CI (99.9%): [0.452, 2.882] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 1000, nValues = 3)

# Run progress: 11.36% complete, ETA 00:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 1.406 ms/op
# Warmup Iteration   2: 1.191 ms/op
# Warmup Iteration   3: 1.204 ms/op
# Warmup Iteration   4: 1.181 ms/op
# Warmup Iteration   5: 1.172 ms/op
Iteration   1: 1.154 ms/op
Iteration   2: 1.153 ms/op
Iteration   3: 1.514 ms/op
Iteration   4: 2.220 ms/op
Iteration   5: 1.935 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1.595 ±(99.9%) 1.829 ms/op [Average]
  (min, avg, max) = (1.153, 1.595, 2.220), stdev = 0.475
  CI (99.9%): [? 0, 3.424] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 100000, nValues = 2)

# Run progress: 12.12% complete, ETA 00:20:42
# Fork: 1 of 1
# Warmup Iteration   1: 391.403 ms/op
# Warmup Iteration   2: 372.349 ms/op
# Warmup Iteration   3: 367.903 ms/op
# Warmup Iteration   4: 287.778 ms/op
# Warmup Iteration   5: 350.317 ms/op
Iteration   1: 322.034 ms/op
Iteration   2: 401.162 ms/op
Iteration   3: 530.476 ms/op
Iteration   4: 497.454 ms/op
Iteration   5: 566.272 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  463.480 ±(99.9%) 385.543 ms/op [Average]
  (min, avg, max) = (322.034, 463.480, 566.272), stdev = 100.124
  CI (99.9%): [77.936, 849.023] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 100000, nValues = 3)

# Run progress: 12.88% complete, ETA 00:20:47
# Fork: 1 of 1
# Warmup Iteration   1: 410.149 ms/op
# Warmup Iteration   2: 419.326 ms/op
# Warmup Iteration   3: 363.998 ms/op
# Warmup Iteration   4: 354.475 ms/op
# Warmup Iteration   5: 351.966 ms/op
Iteration   1: 365.865 ms/op
Iteration   2: 518.430 ms/op
Iteration   3: 482.506 ms/op
Iteration   4: 538.743 ms/op
Iteration   5: 520.253 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  485.159 ±(99.9%) 268.497 ms/op [Average]
  (min, avg, max) = (365.865, 485.159, 538.743), stdev = 69.728
  CI (99.9%): [216.663, 753.656] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 32, nValues = 2)

# Run progress: 13.64% complete, ETA 00:20:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.075 ms/op
# Warmup Iteration   2: 0.065 ms/op
# Warmup Iteration   3: 0.064 ms/op
# Warmup Iteration   4: 0.064 ms/op
# Warmup Iteration   5: 0.063 ms/op
Iteration   1: 0.067 ms/op
Iteration   2: 0.066 ms/op
Iteration   3: 0.078 ms/op
Iteration   4: 0.129 ms/op
Iteration   5: 0.116 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.091 ±(99.9%) 0.112 ms/op [Average]
  (min, avg, max) = (0.066, 0.091, 0.129), stdev = 0.029
  CI (99.9%): [? 0, 0.204] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 32, nValues = 3)

# Run progress: 14.39% complete, ETA 00:20:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.082 ms/op
# Warmup Iteration   2: 0.083 ms/op
# Warmup Iteration   3: 0.076 ms/op
# Warmup Iteration   4: 0.076 ms/op
# Warmup Iteration   5: 0.076 ms/op
Iteration   1: 0.077 ms/op
Iteration   2: 0.080 ms/op
Iteration   3: 0.092 ms/op
Iteration   4: 0.132 ms/op
Iteration   5: 0.127 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.102 ±(99.9%) 0.101 ms/op [Average]
  (min, avg, max) = (0.077, 0.102, 0.132), stdev = 0.026
  CI (99.9%): [? 10??, 0.203] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 1000, nValues = 2)

# Run progress: 15.15% complete, ETA 00:20:22
# Fork: 1 of 1
# Warmup Iteration   1: 3.018 ms/op
# Warmup Iteration   2: 2.594 ms/op
# Warmup Iteration   3: 2.464 ms/op
# Warmup Iteration   4: 2.555 ms/op
# Warmup Iteration   5: 2.576 ms/op
Iteration   1: 2.456 ms/op
Iteration   2: 2.663 ms/op
Iteration   3: 2.829 ms/op
Iteration   4: 3.735 ms/op
Iteration   5: 3.804 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  3.098 ±(99.9%) 2.419 ms/op [Average]
  (min, avg, max) = (2.456, 3.098, 3.804), stdev = 0.628
  CI (99.9%): [0.679, 5.516] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 1000, nValues = 3)

# Run progress: 15.91% complete, ETA 00:20:09
# Fork: 1 of 1
# Warmup Iteration   1: 2.806 ms/op
# Warmup Iteration   2: 2.502 ms/op
# Warmup Iteration   3: 2.306 ms/op
# Warmup Iteration   4: 2.364 ms/op
# Warmup Iteration   5: 2.305 ms/op
Iteration   1: 2.316 ms/op
Iteration   2: 2.508 ms/op
Iteration   3: 3.168 ms/op
Iteration   4: 3.697 ms/op
Iteration   5: 3.474 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  3.033 ±(99.9%) 2.313 ms/op [Average]
  (min, avg, max) = (2.316, 3.033, 3.697), stdev = 0.601
  CI (99.9%): [0.719, 5.346] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 100000, nValues = 2)

# Run progress: 16.67% complete, ETA 00:19:57
# Fork: 1 of 1
# Warmup Iteration   1: 777.950 ms/op
# Warmup Iteration   2: 795.107 ms/op
# Warmup Iteration   3: 660.030 ms/op
# Warmup Iteration   4: 570.046 ms/op
# Warmup Iteration   5: 649.340 ms/op
Iteration   1: 983.987 ms/op
Iteration   2: 1018.898 ms/op
Iteration   3: 1096.284 ms/op
Iteration   4: 1034.264 ms/op
Iteration   5: 1038.093 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1034.305 ±(99.9%) 156.710 ms/op [Average]
  (min, avg, max) = (983.987, 1034.305, 1096.284), stdev = 40.697
  CI (99.9%): [877.595, 1191.016] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 100000, nValues = 3)

# Run progress: 17.42% complete, ETA 00:20:10
# Fork: 1 of 1
# Warmup Iteration   1: 916.575 ms/op
# Warmup Iteration   2: 812.425 ms/op
# Warmup Iteration   3: 1125.694 ms/op
# Warmup Iteration   4: 772.312 ms/op
# Warmup Iteration   5: 953.590 ms/op
Iteration   1: 1234.376 ms/op
Iteration   2: 1289.524 ms/op
Iteration   3: 1075.322 ms/op
Iteration   4: 1196.344 ms/op
Iteration   5: 1233.302 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1205.774 ±(99.9%) 308.633 ms/op [Average]
  (min, avg, max) = (1075.322, 1205.774, 1289.524), stdev = 80.151
  CI (99.9%): [897.141, 1514.407] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 32, nValues = 2)

# Run progress: 18.18% complete, ETA 00:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.181 ms/op
# Warmup Iteration   2: 0.155 ms/op
# Warmup Iteration   3: 0.159 ms/op
# Warmup Iteration   4: 0.154 ms/op
# Warmup Iteration   5: 0.152 ms/op
Iteration   1: 0.163 ms/op
Iteration   2: 0.159 ms/op
Iteration   3: 0.178 ms/op
Iteration   4: 0.251 ms/op
Iteration   5: 0.228 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.196 ±(99.9%) 0.160 ms/op [Average]
  (min, avg, max) = (0.159, 0.196, 0.251), stdev = 0.041
  CI (99.9%): [0.036, 0.356] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 32, nValues = 3)

# Run progress: 18.94% complete, ETA 00:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.140 ms/op
# Warmup Iteration   2: 0.138 ms/op
# Warmup Iteration   3: 0.128 ms/op
# Warmup Iteration   4: 0.129 ms/op
# Warmup Iteration   5: 0.130 ms/op
Iteration   1: 0.128 ms/op
Iteration   2: 0.133 ms/op
Iteration   3: 0.153 ms/op
Iteration   4: 0.236 ms/op
Iteration   5: 0.246 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.179 ±(99.9%) 0.220 ms/op [Average]
  (min, avg, max) = (0.128, 0.179, 0.246), stdev = 0.057
  CI (99.9%): [? 0, 0.399] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 1000, nValues = 2)

# Run progress: 19.70% complete, ETA 00:19:47
# Fork: 1 of 1
# Warmup Iteration   1: 5.966 ms/op
# Warmup Iteration   2: 4.520 ms/op
# Warmup Iteration   3: 3.777 ms/op
# Warmup Iteration   4: 3.958 ms/op
# Warmup Iteration   5: 3.824 ms/op
Iteration   1: 3.779 ms/op
Iteration   2: 3.847 ms/op
Iteration   3: 4.883 ms/op
Iteration   4: 7.619 ms/op
Iteration   5: 7.263 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  5.478 ±(99.9%) 7.119 ms/op [Average]
  (min, avg, max) = (3.779, 5.478, 7.619), stdev = 1.849
  CI (99.9%): [? 0, 12.598] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 1000, nValues = 3)

# Run progress: 20.45% complete, ETA 00:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 4.200 ms/op
# Warmup Iteration   2: 4.030 ms/op
# Warmup Iteration   3: 3.781 ms/op
# Warmup Iteration   4: 3.667 ms/op
# Warmup Iteration   5: 3.674 ms/op
Iteration   1: 3.722 ms/op
Iteration   2: 3.655 ms/op
Iteration   3: 4.543 ms/op
Iteration   4: 5.913 ms/op
Iteration   5: 6.443 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  4.855 ±(99.9%) 4.894 ms/op [Average]
  (min, avg, max) = (3.655, 4.855, 6.443), stdev = 1.271
  CI (99.9%): [? 0, 9.750] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 100000, nValues = 2)

# Run progress: 21.21% complete, ETA 00:19:20
# Fork: 1 of 1
# Warmup Iteration   1: 1273.775 ms/op
# Warmup Iteration   2: 1358.231 ms/op
# Warmup Iteration   3: 1400.693 ms/op
# Warmup Iteration   4: 1136.454 ms/op
# Warmup Iteration   5: 1387.875 ms/op
Iteration   1: 1220.529 ms/op
Iteration   2: 1848.820 ms/op
Iteration   3: 1468.412 ms/op
Iteration   4: 1945.705 ms/op
Iteration   5: 1600.312 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1616.755 ±(99.9%) 1124.846 ms/op [Average]
  (min, avg, max) = (1220.529, 1616.755, 1945.705), stdev = 292.119
  CI (99.9%): [491.910, 2741.601] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 100000, nValues = 3)

# Run progress: 21.97% complete, ETA 00:19:23
# Fork: 1 of 1
# Warmup Iteration   1: 1231.630 ms/op
# Warmup Iteration   2: 1244.986 ms/op
# Warmup Iteration   3: 1360.922 ms/op
# Warmup Iteration   4: 1410.766 ms/op
# Warmup Iteration   5: 1224.348 ms/op
Iteration   1: 1556.413 ms/op
Iteration   2: 1963.831 ms/op
Iteration   3: 1713.004 ms/op
Iteration   4: 1728.040 ms/op
Iteration   5: 1560.644 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1704.386 ±(99.9%) 640.016 ms/op [Average]
  (min, avg, max) = (1556.413, 1704.386, 1963.831), stdev = 166.210
  CI (99.9%): [1064.371, 2344.402] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 32, nValues = 2)

# Run progress: 22.73% complete, ETA 00:19:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.315 ms/op
# Warmup Iteration   2: 0.284 ms/op
# Warmup Iteration   3: 0.276 ms/op
# Warmup Iteration   4: 0.324 ms/op
# Warmup Iteration   5: 0.317 ms/op
Iteration   1: 0.309 ms/op
Iteration   2: 0.300 ms/op
Iteration   3: 0.378 ms/op
Iteration   4: 0.641 ms/op
Iteration   5: 0.493 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.424 ±(99.9%) 0.553 ms/op [Average]
  (min, avg, max) = (0.300, 0.424, 0.641), stdev = 0.144
  CI (99.9%): [? 0, 0.978] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 32, nValues = 3)

# Run progress: 23.48% complete, ETA 00:19:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.357 ms/op
# Warmup Iteration   2: 0.308 ms/op
# Warmup Iteration   3: 0.309 ms/op
# Warmup Iteration   4: 0.294 ms/op
# Warmup Iteration   5: 0.293 ms/op
Iteration   1: 0.296 ms/op
Iteration   2: 0.340 ms/op
Iteration   3: 0.388 ms/op
Iteration   4: 0.495 ms/op
Iteration   5: 0.467 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.397 ±(99.9%) 0.323 ms/op [Average]
  (min, avg, max) = (0.296, 0.397, 0.495), stdev = 0.084
  CI (99.9%): [0.075, 0.720] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 1000, nValues = 2)

# Run progress: 24.24% complete, ETA 00:18:58
# Fork: 1 of 1
# Warmup Iteration   1: 9.572 ms/op
# Warmup Iteration   2: 8.107 ms/op
# Warmup Iteration   3: 7.970 ms/op
# Warmup Iteration   4: 7.961 ms/op
# Warmup Iteration   5: 7.970 ms/op
Iteration   1: 8.163 ms/op
Iteration   2: 8.241 ms/op
Iteration   3: 9.383 ms/op
Iteration   4: 15.746 ms/op
Iteration   5: 15.265 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  11.359 ±(99.9%) 14.706 ms/op [Average]
  (min, avg, max) = (8.163, 11.359, 15.746), stdev = 3.819
  CI (99.9%): [? 0, 26.065] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 1000, nValues = 3)

# Run progress: 25.00% complete, ETA 00:18:44
# Fork: 1 of 1
# Warmup Iteration   1: 9.768 ms/op
# Warmup Iteration   2: 9.467 ms/op
# Warmup Iteration   3: 9.293 ms/op
# Warmup Iteration   4: 9.230 ms/op
# Warmup Iteration   5: 9.282 ms/op
Iteration   1: 9.274 ms/op
Iteration   2: 8.246 ms/op
Iteration   3: 9.552 ms/op
Iteration   4: 13.436 ms/op
Iteration   5: 12.448 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  10.591 ±(99.9%) 8.579 ms/op [Average]
  (min, avg, max) = (8.246, 10.591, 13.436), stdev = 2.228
  CI (99.9%): [2.012, 19.170] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 100000, nValues = 2)

# Run progress: 25.76% complete, ETA 00:18:30
# Fork: 1 of 1
# Warmup Iteration   1: 2626.579 ms/op
# Warmup Iteration   2: 3475.812 ms/op
# Warmup Iteration   3: 4324.317 ms/op
# Warmup Iteration   4: 4227.858 ms/op
# Warmup Iteration   5: 4379.597 ms/op
Iteration   1: 4306.355 ms/op
Iteration   2: 4718.748 ms/op
Iteration   3: 4620.495 ms/op
Iteration   4: 4396.749 ms/op
Iteration   5: 4847.827 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  4578.035 ±(99.9%) 863.320 ms/op [Average]
  (min, avg, max) = (4306.355, 4578.035, 4847.827), stdev = 224.202
  CI (99.9%): [3714.714, 5441.355] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 100000, nValues = 3)

# Run progress: 26.52% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 3254.573 ms/op
# Warmup Iteration   2: 3839.655 ms/op
# Warmup Iteration   3: 4165.059 ms/op
# Warmup Iteration   4: 3774.911 ms/op
# Warmup Iteration   5: 4241.525 ms/op
Iteration   1: 4171.457 ms/op
Iteration   2: 3541.399 ms/op
Iteration   3: 3696.685 ms/op
Iteration   4: 3585.872 ms/op
Iteration   5: 3449.847 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  3689.052 ±(99.9%) 1093.269 ms/op [Average]
  (min, avg, max) = (3449.847, 3689.052, 4171.457), stdev = 283.919
  CI (99.9%): [2595.783, 4782.321] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 32, nValues = 2)

# Run progress: 27.27% complete, ETA 00:20:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.536 ms/op
# Warmup Iteration   2: 0.484 ms/op
# Warmup Iteration   3: 0.486 ms/op
# Warmup Iteration   4: 0.484 ms/op
# Warmup Iteration   5: 0.481 ms/op
Iteration   1: 0.482 ms/op
Iteration   2: 0.487 ms/op
Iteration   3: 0.550 ms/op
Iteration   4: 0.825 ms/op
Iteration   5: 0.844 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.638 ±(99.9%) 0.701 ms/op [Average]
  (min, avg, max) = (0.482, 0.638, 0.844), stdev = 0.182
  CI (99.9%): [? 0, 1.339] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 32, nValues = 3)

# Run progress: 28.03% complete, ETA 00:20:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.529 ms/op
# Warmup Iteration   2: 0.487 ms/op
# Warmup Iteration   3: 0.472 ms/op
# Warmup Iteration   4: 0.498 ms/op
# Warmup Iteration   5: 0.467 ms/op
Iteration   1: 0.473 ms/op
Iteration   2: 0.475 ms/op
Iteration   3: 0.520 ms/op
Iteration   4: 0.763 ms/op
Iteration   5: 0.706 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  0.587 ±(99.9%) 0.527 ms/op [Average]
  (min, avg, max) = (0.473, 0.587, 0.763), stdev = 0.137
  CI (99.9%): [0.061, 1.114] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 1000, nValues = 2)

# Run progress: 28.79% complete, ETA 00:20:09
# Fork: 1 of 1
# Warmup Iteration   1: 20.624 ms/op
# Warmup Iteration   2: 15.780 ms/op
# Warmup Iteration   3: 14.614 ms/op
# Warmup Iteration   4: 15.371 ms/op
# Warmup Iteration   5: 14.953 ms/op
Iteration   1: 14.964 ms/op
Iteration   2: 15.004 ms/op
Iteration   3: 17.579 ms/op
Iteration   4: 20.989 ms/op
Iteration   5: 21.077 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  17.922 ±(99.9%) 11.670 ms/op [Average]
  (min, avg, max) = (14.964, 17.922, 21.077), stdev = 3.031
  CI (99.9%): [6.252, 29.593] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 1000, nValues = 3)

# Run progress: 29.55% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 23.784 ms/op
# Warmup Iteration   2: 14.699 ms/op
# Warmup Iteration   3: 14.732 ms/op
# Warmup Iteration   4: 15.108 ms/op
# Warmup Iteration   5: 14.808 ms/op
Iteration   1: 14.630 ms/op
Iteration   2: 14.787 ms/op
Iteration   3: 17.784 ms/op
Iteration   4: 27.252 ms/op
Iteration   5: 22.587 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  19.408 ±(99.9%) 20.955 ms/op [Average]
  (min, avg, max) = (14.630, 19.408, 27.252), stdev = 5.442
  CI (99.9%): [? 0, 40.362] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 100000, nValues = 2)

# Run progress: 30.30% complete, ETA 00:19:33
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 100000, nValues = 3)

# Run progress: 31.06% complete, ETA 00:19:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 32, nValues = 2)

# Run progress: 31.82% complete, ETA 00:19:05
# Fork: 1 of 1
# Warmup Iteration   1: 1.244 ms/op
# Warmup Iteration   2: 1.004 ms/op
# Warmup Iteration   3: 1.000 ms/op
# Warmup Iteration   4: 1.002 ms/op
# Warmup Iteration   5: 1.000 ms/op
Iteration   1: 0.982 ms/op
Iteration   2: 0.974 ms/op
Iteration   3: 1.173 ms/op
Iteration   4: 1.697 ms/op
Iteration   5: 1.672 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1.300 ±(99.9%) 1.387 ms/op [Average]
  (min, avg, max) = (0.974, 1.300, 1.697), stdev = 0.360
  CI (99.9%): [? 0, 2.686] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 32, nValues = 3)

# Run progress: 32.58% complete, ETA 00:18:47
# Fork: 1 of 1
# Warmup Iteration   1: 1.104 ms/op
# Warmup Iteration   2: 0.973 ms/op
# Warmup Iteration   3: 1.006 ms/op
# Warmup Iteration   4: 0.959 ms/op
# Warmup Iteration   5: 1.002 ms/op
Iteration   1: 0.986 ms/op
Iteration   2: 0.977 ms/op
Iteration   3: 1.137 ms/op
Iteration   4: 1.858 ms/op
Iteration   5: 1.650 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1.321 ±(99.9%) 1.565 ms/op [Average]
  (min, avg, max) = (0.977, 1.321, 1.858), stdev = 0.406
  CI (99.9%): [? 0, 2.886] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 1000, nValues = 2)

# Run progress: 33.33% complete, ETA 00:18:30
# Fork: 1 of 1
# Warmup Iteration   1: 44.287 ms/op
# Warmup Iteration   2: 31.746 ms/op
# Warmup Iteration   3: 29.823 ms/op
# Warmup Iteration   4: 29.893 ms/op
# Warmup Iteration   5: 30.254 ms/op
Iteration   1: 30.728 ms/op
Iteration   2: 30.044 ms/op
Iteration   3: 36.417 ms/op
Iteration   4: 51.514 ms/op
Iteration   5: 53.193 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  40.379 ±(99.9%) 43.215 ms/op [Average]
  (min, avg, max) = (30.044, 40.379, 53.193), stdev = 11.223
  CI (99.9%): [? 0, 83.594] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 1000, nValues = 3)

# Run progress: 34.09% complete, ETA 00:18:14
# Fork: 1 of 1
# Warmup Iteration   1: 46.955 ms/op
# Warmup Iteration   2: 30.955 ms/op
# Warmup Iteration   3: 30.439 ms/op
# Warmup Iteration   4: 31.632 ms/op
# Warmup Iteration   5: 31.858 ms/op
Iteration   1: 30.516 ms/op
Iteration   2: 31.053 ms/op
Iteration   3: 34.040 ms/op
Iteration   4: 49.225 ms/op
Iteration   5: 49.728 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  38.912 ±(99.9%) 37.498 ms/op [Average]
  (min, avg, max) = (30.516, 38.912, 49.728), stdev = 9.738
  CI (99.9%): [1.414, 76.411] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 100000, nValues = 2)

# Run progress: 34.85% complete, ETA 00:17:58
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 100000, nValues = 3)

# Run progress: 35.61% complete, ETA 00:17:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 32, nValues = 2)

# Run progress: 36.36% complete, ETA 00:17:40
# Fork: 1 of 1
# Warmup Iteration   1: 4.166 ms/op
# Warmup Iteration   2: 2.355 ms/op
# Warmup Iteration   3: 2.271 ms/op
# Warmup Iteration   4: 2.448 ms/op
# Warmup Iteration   5: 2.970 ms/op
Iteration   1: 3.542 ms/op
Iteration   2: 4.212 ms/op
Iteration   3: 4.461 ms/op
Iteration   4: 4.873 ms/op
Iteration   5: 4.319 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  4.282 ±(99.9%) 1.861 ms/op [Average]
  (min, avg, max) = (3.542, 4.282, 4.873), stdev = 0.483
  CI (99.9%): [2.421, 6.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 32, nValues = 3)

# Run progress: 37.12% complete, ETA 00:17:24
# Fork: 1 of 1
# Warmup Iteration   1: 2.511 ms/op
# Warmup Iteration   2: 2.173 ms/op
# Warmup Iteration   3: 2.480 ms/op
# Warmup Iteration   4: 3.336 ms/op
# Warmup Iteration   5: 2.494 ms/op
Iteration   1: 3.098 ms/op
Iteration   2: 2.428 ms/op
Iteration   3: 3.388 ms/op
Iteration   4: 3.712 ms/op
Iteration   5: 3.983 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  3.322 ±(99.9%) 2.313 ms/op [Average]
  (min, avg, max) = (2.428, 3.322, 3.983), stdev = 0.601
  CI (99.9%): [1.009, 5.635] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 1000, nValues = 2)

# Run progress: 37.88% complete, ETA 00:17:08
# Fork: 1 of 1
# Warmup Iteration   1: 114.781 ms/op
# Warmup Iteration   2: 81.818 ms/op
# Warmup Iteration   3: 81.201 ms/op
# Warmup Iteration   4: 86.403 ms/op
# Warmup Iteration   5: 65.929 ms/op
Iteration   1: 69.310 ms/op
Iteration   2: 66.909 ms/op
Iteration   3: 113.126 ms/op
Iteration   4: 154.474 ms/op
Iteration   5: 162.318 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  113.227 ±(99.9%) 174.189 ms/op [Average]
  (min, avg, max) = (66.909, 113.227, 162.318), stdev = 45.236
  CI (99.9%): [? 0, 287.417] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 1000, nValues = 3)

# Run progress: 38.64% complete, ETA 00:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 150.405 ms/op
# Warmup Iteration   2: 74.049 ms/op
# Warmup Iteration   3: 75.908 ms/op
# Warmup Iteration   4: 80.582 ms/op
# Warmup Iteration   5: 86.860 ms/op
Iteration   1: 74.153 ms/op
Iteration   2: 69.966 ms/op
Iteration   3: 123.727 ms/op
Iteration   4: 144.315 ms/op
Iteration   5: 126.375 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  107.707 ±(99.9%) 129.090 ms/op [Average]
  (min, avg, max) = (69.966, 107.707, 144.315), stdev = 33.524
  CI (99.9%): [? 0, 236.797] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 100000, nValues = 2)

# Run progress: 39.39% complete, ETA 00:16:38
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 100000, nValues = 3)

# Run progress: 40.15% complete, ETA 00:16:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 32, nValues = 2)

# Run progress: 40.91% complete, ETA 00:16:28
# Fork: 1 of 1
# Warmup Iteration   1: 6.134 ms/op
# Warmup Iteration   2: 4.105 ms/op
# Warmup Iteration   3: 4.049 ms/op
# Warmup Iteration   4: 3.894 ms/op
# Warmup Iteration   5: 4.093 ms/op
Iteration   1: 4.070 ms/op
Iteration   2: 4.199 ms/op
Iteration   3: 6.165 ms/op
Iteration   4: 6.504 ms/op
Iteration   5: 7.500 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  5.688 ±(99.9%) 5.780 ms/op [Average]
  (min, avg, max) = (4.070, 5.688, 7.500), stdev = 1.501
  CI (99.9%): [? 0, 11.468] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 32, nValues = 3)

# Run progress: 41.67% complete, ETA 00:16:13
# Fork: 1 of 1
# Warmup Iteration   1: 4.550 ms/op
# Warmup Iteration   2: 3.984 ms/op
# Warmup Iteration   3: 3.856 ms/op
# Warmup Iteration   4: 4.022 ms/op
# Warmup Iteration   5: 4.331 ms/op
Iteration   1: 4.113 ms/op
Iteration   2: 4.054 ms/op
Iteration   3: 4.804 ms/op
Iteration   4: 7.964 ms/op
Iteration   5: 7.209 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  5.629 ±(99.9%) 7.050 ms/op [Average]
  (min, avg, max) = (4.054, 5.629, 7.964), stdev = 1.831
  CI (99.9%): [? 0, 12.679] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 1000, nValues = 2)

# Run progress: 42.42% complete, ETA 00:15:57
# Fork: 1 of 1
# Warmup Iteration   1: 235.297 ms/op
# Warmup Iteration   2: 161.079 ms/op
# Warmup Iteration   3: 169.373 ms/op
# Warmup Iteration   4: 184.487 ms/op
# Warmup Iteration   5: 294.604 ms/op
Iteration   1: 241.850 ms/op
Iteration   2: 239.359 ms/op
Iteration   3: 467.939 ms/op
Iteration   4: 454.719 ms/op
Iteration   5: 314.242 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  343.622 ±(99.9%) 430.036 ms/op [Average]
  (min, avg, max) = (239.359, 343.622, 467.939), stdev = 111.679
  CI (99.9%): [? 0, 773.658] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 1000, nValues = 3)

# Run progress: 43.18% complete, ETA 00:15:44
# Fork: 1 of 1
# Warmup Iteration   1: 267.213 ms/op
# Warmup Iteration   2: 175.509 ms/op
# Warmup Iteration   3: 153.246 ms/op
# Warmup Iteration   4: 165.174 ms/op
# Warmup Iteration   5: 296.586 ms/op
Iteration   1: 374.270 ms/op
Iteration   2: 294.893 ms/op
Iteration   3: 399.263 ms/op
Iteration   4: 373.439 ms/op
Iteration   5: 335.162 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  355.405 ±(99.9%) 157.313 ms/op [Average]
  (min, avg, max) = (294.893, 355.405, 399.263), stdev = 40.854
  CI (99.9%): [198.092, 512.719] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 100000, nValues = 2)

# Run progress: 43.94% complete, ETA 00:15:31
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 100000, nValues = 3)

# Run progress: 44.70% complete, ETA 00:15:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 32, nValues = 2)

# Run progress: 45.45% complete, ETA 00:15:18
# Fork: 1 of 1
# Warmup Iteration   1: 13.113 ms/op
# Warmup Iteration   2: 11.060 ms/op
# Warmup Iteration   3: 10.450 ms/op
# Warmup Iteration   4: 8.930 ms/op
# Warmup Iteration   5: 8.552 ms/op
Iteration   1: 13.189 ms/op
Iteration   2: 13.179 ms/op
Iteration   3: 15.121 ms/op
Iteration   4: 23.397 ms/op
Iteration   5: 13.660 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  15.709 ±(99.9%) 16.829 ms/op [Average]
  (min, avg, max) = (13.179, 15.709, 23.397), stdev = 4.370
  CI (99.9%): [? 0, 32.538] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 32, nValues = 3)

# Run progress: 46.21% complete, ETA 00:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 12.507 ms/op
# Warmup Iteration   2: 8.481 ms/op
# Warmup Iteration   3: 8.555 ms/op
# Warmup Iteration   4: 8.705 ms/op
# Warmup Iteration   5: 8.747 ms/op
Iteration   1: 8.464 ms/op
Iteration   2: 8.200 ms/op
Iteration   3: 10.227 ms/op
Iteration   4: 13.869 ms/op
Iteration   5: 15.429 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  11.238 ±(99.9%) 12.541 ms/op [Average]
  (min, avg, max) = (8.200, 11.238, 15.429), stdev = 3.257
  CI (99.9%): [? 0, 23.779] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 1000, nValues = 2)

# Run progress: 46.97% complete, ETA 00:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 567.231 ms/op
# Warmup Iteration   2: 783.786 ms/op
# Warmup Iteration   3: 964.041 ms/op
# Warmup Iteration   4: 827.473 ms/op
# Warmup Iteration   5: 1065.204 ms/op
Iteration   1: 1457.597 ms/op
Iteration   2: 1403.696 ms/op
Iteration   3: 1690.170 ms/op
Iteration   4: 1170.918 ms/op
Iteration   5: 1138.903 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1372.257 ±(99.9%) 870.304 ms/op [Average]
  (min, avg, max) = (1138.903, 1372.257, 1690.170), stdev = 226.015
  CI (99.9%): [501.952, 2242.561] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 1000, nValues = 3)

# Run progress: 47.73% complete, ETA 00:14:39
# Fork: 1 of 1
# Warmup Iteration   1: 702.419 ms/op
# Warmup Iteration   2: 1042.410 ms/op
# Warmup Iteration   3: 1060.375 ms/op
# Warmup Iteration   4: 1291.100 ms/op
# Warmup Iteration   5: 1012.234 ms/op
Iteration   1: 1090.846 ms/op
Iteration   2: 1089.878 ms/op
Iteration   3: 1261.611 ms/op
Iteration   4: 1034.370 ms/op
Iteration   5: 1407.821 ms/op


Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark":
  1176.905 ±(99.9%) 595.897 ms/op [Average]
  (min, avg, max) = (1034.370, 1176.905, 1407.821), stdev = 154.752
  CI (99.9%): [581.008, 1772.802] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 100000, nValues = 2)

# Run progress: 48.48% complete, ETA 00:14:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 100000, nValues = 3)

# Run progress: 49.24% complete, ETA 00:14:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.newNode(HashMap.java:1901)
	at java.base/java.util.HashMap.putVal(HashMap.java:629)
	at java.base/java.util.HashMap.putMapEntries(HashMap.java:514)
	at java.base/java.util.HashMap.<init>(HashMap.java:484)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.baselineCommitBenchmark(ImmutableCommitBenchmark.java:37)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.baselineCommitBenchmark_AverageTime(ImmutableCommitBenchmark_baselineCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 32, nValues = 2)

# Run progress: 50.00% complete, ETA 00:14:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.639 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.639 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 32, nValues = 3)

# Run progress: 50.76% complete, ETA 00:13:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.078 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.078 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 1000, nValues = 2)

# Run progress: 51.52% complete, ETA 00:13:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 1000, nValues = 3)

# Run progress: 52.27% complete, ETA 00:13:27
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 100000, nValues = 2)

# Run progress: 53.03% complete, ETA 00:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16, nKeys = 100000, nValues = 3)

# Run progress: 53.79% complete, ETA 00:12:56
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 32, nValues = 2)

# Run progress: 54.55% complete, ETA 00:12:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 32, nValues = 3)

# Run progress: 55.30% complete, ETA 00:12:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.021 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 1000, nValues = 2)

# Run progress: 56.06% complete, ETA 00:12:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.065 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 1000, nValues = 3)

# Run progress: 56.82% complete, ETA 00:11:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.008 ms/op
# Warmup Iteration   5: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 100000, nValues = 2)

# Run progress: 57.58% complete, ETA 00:11:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 32, nKeys = 100000, nValues = 3)

# Run progress: 58.33% complete, ETA 00:11:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.011 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 32, nValues = 2)

# Run progress: 59.09% complete, ETA 00:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.015 ms/op
# Warmup Iteration   5: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 32, nValues = 3)

# Run progress: 59.85% complete, ETA 00:10:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.030 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 1000, nValues = 2)

# Run progress: 60.61% complete, ETA 00:10:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.014 ms/op
# Warmup Iteration   5: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 1000, nValues = 3)

# Run progress: 61.36% complete, ETA 00:10:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.017 ms/op
# Warmup Iteration   5: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 100000, nValues = 2)

# Run progress: 62.12% complete, ETA 00:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.007 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.024 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 64, nKeys = 100000, nValues = 3)

# Run progress: 62.88% complete, ETA 00:09:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.023 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 32, nValues = 2)

# Run progress: 63.64% complete, ETA 00:09:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.011 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.013 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.216 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 32, nValues = 3)

# Run progress: 64.39% complete, ETA 00:09:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.008 ms/op
# Warmup Iteration   4: 0.034 ms/op
# Warmup Iteration   5: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 1000, nValues = 2)

# Run progress: 65.15% complete, ETA 00:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
# Warmup Iteration   2: 0.010 ms/op
# Warmup Iteration   3: 0.017 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.275 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 1000, nValues = 3)

# Run progress: 65.91% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.011 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.019 ms/op
# Warmup Iteration   4: 0.009 ms/op
# Warmup Iteration   5: 0.112 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 100000, nValues = 2)

# Run progress: 66.67% complete, ETA 00:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.014 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.049 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 128, nKeys = 100000, nValues = 3)

# Run progress: 67.42% complete, ETA 00:08:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.015 ms/op
# Warmup Iteration   3: 0.016 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.045 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 32, nValues = 2)

# Run progress: 68.18% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.032 ms/op
# Warmup Iteration   4: 0.017 ms/op
# Warmup Iteration   5: 0.531 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 32, nValues = 3)

# Run progress: 68.94% complete, ETA 00:08:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.034 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.113 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 1000, nValues = 2)

# Run progress: 69.70% complete, ETA 00:07:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.025 ms/op
# Warmup Iteration   3: 0.034 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.081 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 1000, nValues = 3)

# Run progress: 70.45% complete, ETA 00:07:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.041 ms/op
# Warmup Iteration   4: 0.018 ms/op
# Warmup Iteration   5: 0.084 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 100000, nValues = 2)

# Run progress: 71.21% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.030 ms/op
# Warmup Iteration   2: 0.026 ms/op
# Warmup Iteration   3: 0.043 ms/op
# Warmup Iteration   4: 0.024 ms/op
# Warmup Iteration   5: 0.031 ms/op
Iteration   1: 0.585 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.585 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 256, nKeys = 100000, nValues = 3)

# Run progress: 71.97% complete, ETA 00:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ms/op
# Warmup Iteration   2: 0.030 ms/op
# Warmup Iteration   3: 0.032 ms/op
# Warmup Iteration   4: 0.034 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.151 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.151 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 32, nValues = 2)

# Run progress: 72.73% complete, ETA 00:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.058 ms/op
# Warmup Iteration   2: 0.053 ms/op
# Warmup Iteration   3: 0.091 ms/op
# Warmup Iteration   4: 0.043 ms/op
# Warmup Iteration   5: 0.108 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 32, nValues = 3)

# Run progress: 73.48% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.084 ms/op
# Warmup Iteration   2: 0.104 ms/op
# Warmup Iteration   3: 0.103 ms/op
# Warmup Iteration   4: 0.100 ms/op
# Warmup Iteration   5: 0.074 ms/op
Iteration   1: 0.065 ms/op
Iteration   2: 0.213 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.139 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 1000, nValues = 2)

# Run progress: 74.24% complete, ETA 00:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.087 ms/op
# Warmup Iteration   2: 0.083 ms/op
# Warmup Iteration   3: 0.050 ms/op
# Warmup Iteration   4: 0.166 ms/op
# Warmup Iteration   5: 0.052 ms/op
Iteration   1: 0.057 ms/op
Iteration   2: 0.417 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.237 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 1000, nValues = 3)

# Run progress: 75.00% complete, ETA 00:06:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.077 ms/op
# Warmup Iteration   2: 0.068 ms/op
# Warmup Iteration   3: 0.053 ms/op
# Warmup Iteration   4: 0.188 ms/op
# Warmup Iteration   5: 0.056 ms/op
Iteration   1: 0.050 ms/op
Iteration   2: 1.165 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.608 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 100000, nValues = 2)

# Run progress: 75.76% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.087 ms/op
# Warmup Iteration   2: 0.070 ms/op
# Warmup Iteration   3: 0.051 ms/op
# Warmup Iteration   4: 0.271 ms/op
# Warmup Iteration   5: 0.066 ms/op
Iteration   1: 0.060 ms/op
Iteration   2: 0.279 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.169 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 512, nKeys = 100000, nValues = 3)

# Run progress: 76.52% complete, ETA 00:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.094 ms/op
# Warmup Iteration   2: 0.082 ms/op
# Warmup Iteration   3: 0.052 ms/op
# Warmup Iteration   4: 0.221 ms/op
# Warmup Iteration   5: 0.093 ms/op
Iteration   1: 0.066 ms/op
Iteration   2: 0.076 ms/op
Iteration   3: 4.622 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.588 ±(99.9%) 47.932 ms/op [Average]
  (min, avg, max) = (0.066, 1.588, 4.622), stdev = 2.627
  CI (99.9%): [? 0, 49.520] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 32, nValues = 2)

# Run progress: 77.27% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.182 ms/op
# Warmup Iteration   2: 0.171 ms/op
# Warmup Iteration   3: 0.115 ms/op
# Warmup Iteration   4: 0.365 ms/op
# Warmup Iteration   5: 0.152 ms/op
Iteration   1: 0.129 ms/op
Iteration   2: 0.159 ms/op
Iteration   3: 3.510 ms/op
Iteration   4: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.266 ±(99.9%) 35.458 ms/op [Average]
  (min, avg, max) = (0.129, 1.266, 3.510), stdev = 1.944
  CI (99.9%): [? 0, 36.723] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 32, nValues = 3)

# Run progress: 78.03% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.182 ms/op
# Warmup Iteration   2: 0.177 ms/op
# Warmup Iteration   3: 0.113 ms/op
# Warmup Iteration   4: 0.305 ms/op
# Warmup Iteration   5: 0.103 ms/op
Iteration   1: 0.105 ms/op
Iteration   2: 0.944 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.525 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 1000, nValues = 2)

# Run progress: 78.79% complete, ETA 00:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.173 ms/op
# Warmup Iteration   2: 0.169 ms/op
# Warmup Iteration   3: 0.093 ms/op
# Warmup Iteration   4: 0.188 ms/op
# Warmup Iteration   5: 0.097 ms/op
Iteration   1: 0.299 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.299 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 1000, nValues = 3)

# Run progress: 79.55% complete, ETA 00:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.137 ms/op
# Warmup Iteration   2: 0.137 ms/op
# Warmup Iteration   3: 0.136 ms/op
# Warmup Iteration   4: 0.103 ms/op
# Warmup Iteration   5: 0.127 ms/op
Iteration   1: 0.767 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  0.767 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 100000, nValues = 2)

# Run progress: 80.30% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.133 ms/op
# Warmup Iteration   2: 0.131 ms/op
# Warmup Iteration   3: 0.160 ms/op
# Warmup Iteration   4: 0.114 ms/op
# Warmup Iteration   5: 0.089 ms/op
Iteration   1: 1.352 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.352 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 1024, nKeys = 100000, nValues = 3)

# Run progress: 81.06% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.113 ms/op
# Warmup Iteration   2: 0.122 ms/op
# Warmup Iteration   3: 0.161 ms/op
# Warmup Iteration   4: 0.089 ms/op
# Warmup Iteration   5: 0.124 ms/op
Iteration   1: 37.102 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  37.102 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 32, nValues = 2)

# Run progress: 81.82% complete, ETA 00:04:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.196 ms/op
# Warmup Iteration   2: 0.180 ms/op
# Warmup Iteration   3: 0.301 ms/op
# Warmup Iteration   4: 0.163 ms/op
# Warmup Iteration   5: 0.605 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 32, nValues = 3)

# Run progress: 82.58% complete, ETA 00:04:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.207 ms/op
# Warmup Iteration   2: 0.205 ms/op
# Warmup Iteration   3: 0.303 ms/op
# Warmup Iteration   4: 0.163 ms/op
# Warmup Iteration   5: 0.573 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 1000, nValues = 2)

# Run progress: 83.33% complete, ETA 00:04:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.231 ms/op
# Warmup Iteration   2: 0.233 ms/op
# Warmup Iteration   3: 0.280 ms/op
# Warmup Iteration   4: 0.172 ms/op
# Warmup Iteration   5: 0.252 ms/op
Iteration   1: 6.044 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  6.044 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 1000, nValues = 3)

# Run progress: 84.09% complete, ETA 00:04:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.211 ms/op
# Warmup Iteration   2: 0.202 ms/op
# Warmup Iteration   3: 0.327 ms/op
# Warmup Iteration   4: 0.164 ms/op
# Warmup Iteration   5: 0.538 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 100000, nValues = 2)

# Run progress: 84.85% complete, ETA 00:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.281 ms/op
# Warmup Iteration   2: 0.270 ms/op
# Warmup Iteration   3: 0.267 ms/op
# Warmup Iteration   4: 0.200 ms/op
# Warmup Iteration   5: 0.249 ms/op
Iteration   1: 1.974 ms/op
Iteration   2: 0.780 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.377 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 2048, nKeys = 100000, nValues = 3)

# Run progress: 85.61% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.237 ms/op
# Warmup Iteration   2: 0.212 ms/op
# Warmup Iteration   3: 0.386 ms/op
# Warmup Iteration   4: 0.306 ms/op
# Warmup Iteration   5: 0.281 ms/op
Iteration   1: 0.287 ms/op
Iteration   2: 7.935 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  4.111 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 32, nValues = 2)

# Run progress: 86.36% complete, ETA 00:03:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.596 ms/op
# Warmup Iteration   2: 0.492 ms/op
# Warmup Iteration   3: 0.885 ms/op
# Warmup Iteration   4: 0.672 ms/op
# Warmup Iteration   5: 0.558 ms/op
Iteration   1: 0.608 ms/op
Iteration   2: 6.172 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  3.390 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 32, nValues = 3)

# Run progress: 87.12% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.672 ms/op
# Warmup Iteration   2: 0.700 ms/op
# Warmup Iteration   3: 0.461 ms/op
# Warmup Iteration   4: 1.368 ms/op
# Warmup Iteration   5: 0.501 ms/op
Iteration   1: 0.380 ms/op
Iteration   2: 3.365 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.873 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 1000, nValues = 2)

# Run progress: 87.88% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.484 ms/op
# Warmup Iteration   2: 0.485 ms/op
# Warmup Iteration   3: 0.693 ms/op
# Warmup Iteration   4: 0.368 ms/op
# Warmup Iteration   5: 0.394 ms/op
Iteration   1: 22.180 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  22.180 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 1000, nValues = 3)

# Run progress: 88.64% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.472 ms/op
# Warmup Iteration   2: 0.392 ms/op
# Warmup Iteration   3: 0.723 ms/op
# Warmup Iteration   4: 0.316 ms/op
# Warmup Iteration   5: 0.928 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 100000, nValues = 2)

# Run progress: 89.39% complete, ETA 00:02:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.573 ms/op
# Warmup Iteration   2: 0.528 ms/op
# Warmup Iteration   3: 0.465 ms/op
# Warmup Iteration   4: 0.694 ms/op
# Warmup Iteration   5: 0.405 ms/op
Iteration   1: 1.614 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.614 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 4096, nKeys = 100000, nValues = 3)

# Run progress: 90.15% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.599 ms/op
# Warmup Iteration   2: 0.522 ms/op
# Warmup Iteration   3: 0.543 ms/op
# Warmup Iteration   4: 0.553 ms/op
# Warmup Iteration   5: 0.446 ms/op
Iteration   1: 1.663 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  1.663 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 32, nValues = 2)

# Run progress: 90.91% complete, ETA 00:02:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.980 ms/op
# Warmup Iteration   2: 0.978 ms/op
# Warmup Iteration   3: 1.331 ms/op
# Warmup Iteration   4: 0.738 ms/op
# Warmup Iteration   5: 0.787 ms/op
Iteration   1: 48.802 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  48.802 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 32, nValues = 3)

# Run progress: 91.67% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 1.035 ms/op
# Warmup Iteration   2: 1.168 ms/op
# Warmup Iteration   3: 1.169 ms/op
# Warmup Iteration   4: 0.770 ms/op
# Warmup Iteration   5: 1.033 ms/op
Iteration   1: 9.721 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  9.721 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 1000, nValues = 2)

# Run progress: 92.42% complete, ETA 00:01:59
# Fork: 1 of 1
# Warmup Iteration   1: 1.194 ms/op
# Warmup Iteration   2: 0.933 ms/op
# Warmup Iteration   3: 1.296 ms/op
# Warmup Iteration   4: 0.781 ms/op
# Warmup Iteration   5: 0.757 ms/op
Iteration   1: 98.751 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  98.751 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 1000, nValues = 3)

# Run progress: 93.18% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.906 ms/op
# Warmup Iteration   2: 0.962 ms/op
# Warmup Iteration   3: 1.196 ms/op
# Warmup Iteration   4: 0.701 ms/op
# Warmup Iteration   5: 1.007 ms/op
Iteration   1: 25.686 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  25.686 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 100000, nValues = 2)

# Run progress: 93.94% complete, ETA 00:01:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.977 ms/op
# Warmup Iteration   2: 0.947 ms/op
# Warmup Iteration   3: 1.337 ms/op
# Warmup Iteration   4: 0.717 ms/op
# Warmup Iteration   5: 0.968 ms/op
Iteration   1: 37.533 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  37.533 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 8192, nKeys = 100000, nValues = 3)

# Run progress: 94.70% complete, ETA 00:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 1.045 ms/op
# Warmup Iteration   2: 1.014 ms/op
# Warmup Iteration   3: 0.982 ms/op
# Warmup Iteration   4: 1.136 ms/op
# Warmup Iteration   5: 0.847 ms/op
Iteration   1: 3.826 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  3.826 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 32, nValues = 2)

# Run progress: 95.45% complete, ETA 00:01:11
# Fork: 1 of 1
# Warmup Iteration   1: 1.626 ms/op
# Warmup Iteration   2: 1.612 ms/op
# Warmup Iteration   3: 2.550 ms/op
# Warmup Iteration   4: 1.216 ms/op
# Warmup Iteration   5: 4.793 ms/op
Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 32, nValues = 3)

# Run progress: 96.21% complete, ETA 00:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 1.878 ms/op
# Warmup Iteration   2: 2.005 ms/op
# Warmup Iteration   3: 2.340 ms/op
# Warmup Iteration   4: 1.330 ms/op
# Warmup Iteration   5: 2.161 ms/op
Iteration   1: 66.004 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  66.004 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 1000, nValues = 2)

# Run progress: 96.97% complete, ETA 00:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 2.098 ms/op
# Warmup Iteration   2: 2.271 ms/op
# Warmup Iteration   3: 2.244 ms/op
# Warmup Iteration   4: 1.574 ms/op
# Warmup Iteration   5: 1.961 ms/op
Iteration   1: 18.210 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  18.210 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 1000, nValues = 3)

# Run progress: 97.73% complete, ETA 00:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 1.976 ms/op
# Warmup Iteration   2: 1.811 ms/op
# Warmup Iteration   3: 2.930 ms/op
# Warmup Iteration   4: 1.471 ms/op
# Warmup Iteration   5: 1.670 ms/op
Iteration   1: 21.787 ms/op
Iteration   2: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  21.787 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 100000, nValues = 2)

# Run progress: 98.48% complete, ETA 00:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 2.674 ms/op
# Warmup Iteration   2: 2.683 ms/op
# Warmup Iteration   3: 2.070 ms/op
# Warmup Iteration   4: 3.659 ms/op
# Warmup Iteration   5: 1.857 ms/op
Iteration   1: 2.247 ms/op
Iteration   2: 10.226 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  6.236 ms/op


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark
# Parameters: (nCommit = 16384, nKeys = 100000, nValues = 3)

# Run progress: 99.24% complete, ETA 00:00:11
# Fork: 1 of 1
# Warmup Iteration   1: 2.699 ms/op
# Warmup Iteration   2: 2.684 ms/op
# Warmup Iteration   3: 2.456 ms/op
# Warmup Iteration   4: 3.541 ms/op
# Warmup Iteration   5: 1.925 ms/op
Iteration   1: 2.105 ms/op
Iteration   2: 10.288 ms/op
Iteration   3: <failure>

java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.HashMap.resize(HashMap.java:702)
	at java.base/java.util.HashMap.putVal(HashMap.java:661)
	at java.base/java.util.HashMap.put(HashMap.java:610)
	at tools.refinery.store.map.VersionedMapStoreImpl.commit(VersionedMapStoreImpl.java:120)
	at tools.refinery.store.map.internal.VersionedMapImpl.commit(VersionedMapImpl.java:121)
	at tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark(ImmutableCommitBenchmark.java:27)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_avgt_jmhStub(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:237)
	at tools.refinery.store.map.benchmarks.commit.jmh_generated.ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.immutableCommitBenchmark_AverageTime(ImmutableCommitBenchmark_immutableCommitBenchmark_jmhTest.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




Result "tools.refinery.store.map.benchmarks.commit.ImmutableCommitBenchmark.immutableCommitBenchmark":
  6.197 ms/op


# Run complete. Total time: 00:26:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                          (nCommit)  (nKeys)  (nValues)  Mode  Cnt     Score      Error  Units
ImmutableCommitBenchmark.baselineCommitBenchmark          16       32          2  avgt    5     0.010 ±    0.012  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          16       32          3  avgt    5     0.010 ±    0.010  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          16     1000          2  avgt    5     0.294 ±    0.298  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          16     1000          3  avgt    5     0.285 ±    0.246  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          16   100000          2  avgt    5    86.459 ±   68.699  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          16   100000          3  avgt    5    79.313 ±   25.498  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          32       32          2  avgt    5     0.019 ±    0.016  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          32       32          3  avgt    5     0.019 ±    0.016  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          32     1000          2  avgt    5     0.573 ±    0.476  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          32     1000          3  avgt    5     0.720 ±    0.591  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          32   100000          2  avgt    5   190.380 ±  159.684  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          32   100000          3  avgt    5   194.081 ±  104.700  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          64       32          2  avgt    5     0.039 ±    0.040  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          64       32          3  avgt    5     0.040 ±    0.031  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          64     1000          2  avgt    5     1.667 ±    1.215  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          64     1000          3  avgt    5     1.595 ±    1.829  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          64   100000          2  avgt    5   463.480 ±  385.543  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark          64   100000          3  avgt    5   485.159 ±  268.497  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         128       32          2  avgt    5     0.091 ±    0.112  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         128       32          3  avgt    5     0.102 ±    0.101  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         128     1000          2  avgt    5     3.098 ±    2.419  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         128     1000          3  avgt    5     3.033 ±    2.313  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         128   100000          2  avgt    5  1034.305 ±  156.710  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         128   100000          3  avgt    5  1205.774 ±  308.633  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         256       32          2  avgt    5     0.196 ±    0.160  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         256       32          3  avgt    5     0.179 ±    0.220  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         256     1000          2  avgt    5     5.478 ±    7.119  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         256     1000          3  avgt    5     4.855 ±    4.894  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         256   100000          2  avgt    5  1616.755 ± 1124.846  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         256   100000          3  avgt    5  1704.386 ±  640.016  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         512       32          2  avgt    5     0.424 ±    0.553  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         512       32          3  avgt    5     0.397 ±    0.323  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         512     1000          2  avgt    5    11.359 ±   14.706  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         512     1000          3  avgt    5    10.591 ±    8.579  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         512   100000          2  avgt    5  4578.035 ±  863.320  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark         512   100000          3  avgt    5  3689.052 ± 1093.269  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        1024       32          2  avgt    5     0.638 ±    0.701  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        1024       32          3  avgt    5     0.587 ±    0.527  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        1024     1000          2  avgt    5    17.922 ±   11.670  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        1024     1000          3  avgt    5    19.408 ±   20.955  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        2048       32          2  avgt    5     1.300 ±    1.387  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        2048       32          3  avgt    5     1.321 ±    1.565  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        2048     1000          2  avgt    5    40.379 ±   43.215  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        2048     1000          3  avgt    5    38.912 ±   37.498  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        4096       32          2  avgt    5     4.282 ±    1.861  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        4096       32          3  avgt    5     3.322 ±    2.313  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        4096     1000          2  avgt    5   113.227 ±  174.189  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        4096     1000          3  avgt    5   107.707 ±  129.090  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        8192       32          2  avgt    5     5.688 ±    5.780  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        8192       32          3  avgt    5     5.629 ±    7.050  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        8192     1000          2  avgt    5   343.622 ±  430.036  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark        8192     1000          3  avgt    5   355.405 ±  157.313  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark       16384       32          2  avgt    5    15.709 ±   16.829  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark       16384       32          3  avgt    5    11.238 ±   12.541  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark       16384     1000          2  avgt    5  1372.257 ±  870.304  ms/op
ImmutableCommitBenchmark.baselineCommitBenchmark       16384     1000          3  avgt    5  1176.905 ±  595.897  ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark         16       32          2  avgt          0.639             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark         16       32          3  avgt          0.078             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        256   100000          2  avgt          0.585             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        256   100000          3  avgt          0.151             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        512       32          3  avgt    2     0.139             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        512     1000          2  avgt    2     0.237             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        512     1000          3  avgt    2     0.608             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        512   100000          2  avgt    2     0.169             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark        512   100000          3  avgt    3     1.588 ±   47.932  ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       1024       32          2  avgt    3     1.266 ±   35.458  ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       1024       32          3  avgt    2     0.525             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       1024     1000          2  avgt          0.299             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       1024     1000          3  avgt          0.767             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       1024   100000          2  avgt          1.352             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       1024   100000          3  avgt         37.102             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       2048     1000          2  avgt          6.044             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       2048   100000          2  avgt    2     1.377             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       2048   100000          3  avgt    2     4.111             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       4096       32          2  avgt    2     3.390             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       4096       32          3  avgt    2     1.873             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       4096     1000          2  avgt         22.180             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       4096   100000          2  avgt          1.614             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       4096   100000          3  avgt          1.663             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       8192       32          2  avgt         48.802             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       8192       32          3  avgt          9.721             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       8192     1000          2  avgt         98.751             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       8192     1000          3  avgt         25.686             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       8192   100000          2  avgt         37.533             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark       8192   100000          3  avgt          3.826             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark      16384       32          3  avgt         66.004             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark      16384     1000          2  avgt         18.210             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark      16384     1000          3  avgt         21.787             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark      16384   100000          2  avgt    2     6.236             ms/op
ImmutableCommitBenchmark.immutableCommitBenchmark      16384   100000          3  avgt    2     6.197             ms/op

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.3.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 26m 21s
13 actionable tasks: 2 executed, 11 up-to-date
