Type-safe dependency accessors is an incubating feature.
> Task :buildSrc:extractPluginRequests UP-TO-DATE
> Task :buildSrc:generatePluginAdapters UP-TO-DATE
> Task :buildSrc:compileJava UP-TO-DATE
> Task :buildSrc:compileGroovy NO-SOURCE
> Task :buildSrc:compileGroovyPlugins UP-TO-DATE
> Task :buildSrc:pluginDescriptors UP-TO-DATE
> Task :buildSrc:processResources UP-TO-DATE
> Task :buildSrc:classes UP-TO-DATE
> Task :buildSrc:jar UP-TO-DATE
> Task :buildSrc:assemble UP-TO-DATE
> Task :buildSrc:pluginUnderTestMetadata UP-TO-DATE
> Task :buildSrc:compileTestJava NO-SOURCE
> Task :buildSrc:compileTestGroovy NO-SOURCE
> Task :buildSrc:processTestResources NO-SOURCE
> Task :buildSrc:testClasses UP-TO-DATE
> Task :buildSrc:test NO-SOURCE
> Task :buildSrc:validatePlugins UP-TO-DATE
> Task :buildSrc:check UP-TO-DATE
> Task :buildSrc:build UP-TO-DATE
> Task :refinery-store:compileJava UP-TO-DATE
> Task :refinery-store:processResources NO-SOURCE
> Task :refinery-store:classes UP-TO-DATE
> Task :refinery-store:compileTestJava UP-TO-DATE
> Task :refinery-store:processTestResources NO-SOURCE
> Task :refinery-store:testClasses UP-TO-DATE
> Task :refinery-store:compileJmhJava UP-TO-DATE
> Task :refinery-store:processJmhResources NO-SOURCE
> Task :refinery-store:jmhClasses UP-TO-DATE

> Task :refinery-store:jmh
# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1, nKeys = 32, nValues = 2)

# Run progress: 0.00% complete, ETA 02:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op
Iteration   5: 0.002 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1, nKeys = 32, nValues = 3)

# Run progress: 0.12% complete, ETA 02:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.002 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [? 0, 0.004] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1, nKeys = 1000, nValues = 2)

# Run progress: 0.25% complete, ETA 02:22:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.047 ms/op
# Warmup Iteration   2: 0.048 ms/op
# Warmup Iteration   3: 0.043 ms/op
# Warmup Iteration   4: 0.044 ms/op
# Warmup Iteration   5: 0.043 ms/op
Iteration   1: 0.044 ms/op
Iteration   2: 0.045 ms/op
Iteration   3: 0.055 ms/op
Iteration   4: 0.086 ms/op
Iteration   5: 0.083 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.063 ±(99.9%) 0.080 ms/op [Average]
  (min, avg, max) = (0.044, 0.063, 0.086), stdev = 0.021
  CI (99.9%): [? 0, 0.142] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1, nKeys = 1000, nValues = 3)

# Run progress: 0.37% complete, ETA 02:21:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.049 ms/op
# Warmup Iteration   2: 0.050 ms/op
# Warmup Iteration   3: 0.045 ms/op
# Warmup Iteration   4: 0.046 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.043 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.063 ms/op
Iteration   4: 0.093 ms/op
Iteration   5: 0.085 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.066 ±(99.9%) 0.088 ms/op [Average]
  (min, avg, max) = (0.043, 0.066, 0.093), stdev = 0.023
  CI (99.9%): [? 0, 0.154] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1, nKeys = 100000, nValues = 2)

# Run progress: 0.49% complete, ETA 02:21:43
# Fork: 1 of 1
# Warmup Iteration   1: 8.200 ms/op
# Warmup Iteration   2: 7.546 ms/op
# Warmup Iteration   3: 8.521 ms/op
# Warmup Iteration   4: 12.246 ms/op
# Warmup Iteration   5: 8.108 ms/op
Iteration   1: 8.001 ms/op
Iteration   2: 7.011 ms/op
Iteration   3: 11.623 ms/op
Iteration   4: 14.095 ms/op
Iteration   5: 11.804 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  10.507 ±(99.9%) 11.278 ms/op [Average]
  (min, avg, max) = (7.011, 10.507, 14.095), stdev = 2.929
  CI (99.9%): [? 0, 21.785] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1, nKeys = 100000, nValues = 3)

# Run progress: 0.61% complete, ETA 02:22:36
# Fork: 1 of 1
# Warmup Iteration   1: 7.601 ms/op
# Warmup Iteration   2: 7.552 ms/op
# Warmup Iteration   3: 7.516 ms/op
# Warmup Iteration   4: 7.458 ms/op
# Warmup Iteration   5: 7.222 ms/op
Iteration   1: 7.745 ms/op
Iteration   2: 7.503 ms/op
Iteration   3: 10.443 ms/op
Iteration   4: 15.092 ms/op
Iteration   5: 15.142 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11.185 ±(99.9%) 14.519 ms/op [Average]
  (min, avg, max) = (7.503, 11.185, 15.142), stdev = 3.770
  CI (99.9%): [? 0, 25.704] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2, nKeys = 32, nValues = 2)

# Run progress: 0.74% complete, ETA 02:23:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.006 ms/op
Iteration   5: 0.005 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.004 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [? 0, 0.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2, nKeys = 32, nValues = 3)

# Run progress: 0.86% complete, ETA 02:22:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.003 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.005 ms/op
Iteration   5: 0.006 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.004 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.002
  CI (99.9%): [? 0, 0.010] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2, nKeys = 1000, nValues = 2)

# Run progress: 0.98% complete, ETA 02:22:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.183 ms/op
# Warmup Iteration   2: 0.129 ms/op
# Warmup Iteration   3: 0.176 ms/op
# Warmup Iteration   4: 0.100 ms/op
# Warmup Iteration   5: 0.103 ms/op
Iteration   1: 0.094 ms/op
Iteration   2: 0.097 ms/op
Iteration   3: 0.126 ms/op
Iteration   4: 0.156 ms/op
Iteration   5: 0.160 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.127 ±(99.9%) 0.121 ms/op [Average]
  (min, avg, max) = (0.094, 0.127, 0.160), stdev = 0.031
  CI (99.9%): [0.006, 0.248] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2, nKeys = 1000, nValues = 3)

# Run progress: 1.10% complete, ETA 02:22:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.100 ms/op
# Warmup Iteration   2: 0.095 ms/op
# Warmup Iteration   3: 0.088 ms/op
# Warmup Iteration   4: 0.086 ms/op
# Warmup Iteration   5: 0.088 ms/op
Iteration   1: 0.090 ms/op
Iteration   2: 0.088 ms/op
Iteration   3: 0.126 ms/op
Iteration   4: 0.190 ms/op
Iteration   5: 0.184 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.135 ±(99.9%) 0.189 ms/op [Average]
  (min, avg, max) = (0.088, 0.135, 0.190), stdev = 0.049
  CI (99.9%): [? 0, 0.325] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2, nKeys = 100000, nValues = 2)

# Run progress: 1.23% complete, ETA 02:22:08
# Fork: 1 of 1
# Warmup Iteration   1: 17.085 ms/op
# Warmup Iteration   2: 14.899 ms/op
# Warmup Iteration   3: 16.441 ms/op
# Warmup Iteration   4: 13.962 ms/op
# Warmup Iteration   5: 15.383 ms/op
Iteration   1: 16.287 ms/op
Iteration   2: 14.157 ms/op
Iteration   3: 25.443 ms/op
Iteration   4: 28.490 ms/op
Iteration   5: 25.067 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  21.889 ±(99.9%) 24.160 ms/op [Average]
  (min, avg, max) = (14.157, 21.889, 28.490), stdev = 6.274
  CI (99.9%): [? 0, 46.049] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2, nKeys = 100000, nValues = 3)

# Run progress: 1.35% complete, ETA 02:22:24
# Fork: 1 of 1
# Warmup Iteration   1: 16.293 ms/op
# Warmup Iteration   2: 16.331 ms/op
# Warmup Iteration   3: 15.549 ms/op
# Warmup Iteration   4: 14.001 ms/op
# Warmup Iteration   5: 14.590 ms/op
Iteration   1: 15.047 ms/op
Iteration   2: 17.494 ms/op
Iteration   3: 24.282 ms/op
Iteration   4: 26.212 ms/op
Iteration   5: 24.153 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  21.438 ±(99.9%) 18.731 ms/op [Average]
  (min, avg, max) = (15.047, 21.438, 26.212), stdev = 4.864
  CI (99.9%): [2.706, 40.169] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4, nKeys = 32, nValues = 2)

# Run progress: 1.47% complete, ETA 02:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
# Warmup Iteration   2: 0.007 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.006 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.012 ms/op
Iteration   5: 0.011 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.008 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.012), stdev = 0.003
  CI (99.9%): [? 0, 0.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4, nKeys = 32, nValues = 3)

# Run progress: 1.59% complete, ETA 02:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
# Warmup Iteration   2: 0.006 ms/op
# Warmup Iteration   3: 0.006 ms/op
# Warmup Iteration   4: 0.005 ms/op
# Warmup Iteration   5: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.012 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.008 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.006, 0.008, 0.012), stdev = 0.003
  CI (99.9%): [? 0, 0.020] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4, nKeys = 1000, nValues = 2)

# Run progress: 1.72% complete, ETA 02:21:51
# Fork: 1 of 1
# Warmup Iteration   1: 0.227 ms/op
# Warmup Iteration   2: 0.226 ms/op
# Warmup Iteration   3: 0.193 ms/op
# Warmup Iteration   4: 0.226 ms/op
# Warmup Iteration   5: 0.218 ms/op
Iteration   1: 0.232 ms/op
Iteration   2: 0.241 ms/op
Iteration   3: 0.348 ms/op
Iteration   4: 0.438 ms/op
Iteration   5: 0.360 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.324 ±(99.9%) 0.334 ms/op [Average]
  (min, avg, max) = (0.232, 0.324, 0.438), stdev = 0.087
  CI (99.9%): [? 0, 0.658] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4, nKeys = 1000, nValues = 3)

# Run progress: 1.84% complete, ETA 02:21:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.193 ms/op
# Warmup Iteration   2: 0.180 ms/op
# Warmup Iteration   3: 0.184 ms/op
# Warmup Iteration   4: 0.181 ms/op
# Warmup Iteration   5: 0.175 ms/op
Iteration   1: 0.187 ms/op
Iteration   2: 0.178 ms/op
Iteration   3: 0.242 ms/op
Iteration   4: 0.345 ms/op
Iteration   5: 0.367 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.264 ±(99.9%) 0.339 ms/op [Average]
  (min, avg, max) = (0.178, 0.264, 0.367), stdev = 0.088
  CI (99.9%): [? 0, 0.602] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4, nKeys = 100000, nValues = 2)

# Run progress: 1.96% complete, ETA 02:21:15
# Fork: 1 of 1
# Warmup Iteration   1: 30.962 ms/op
# Warmup Iteration   2: 30.464 ms/op
# Warmup Iteration   3: 32.111 ms/op
# Warmup Iteration   4: 31.142 ms/op
# Warmup Iteration   5: 30.642 ms/op
Iteration   1: 30.419 ms/op
Iteration   2: 30.132 ms/op
Iteration   3: 57.380 ms/op
Iteration   4: 59.733 ms/op
Iteration   5: 58.763 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  47.286 ±(99.9%) 59.880 ms/op [Average]
  (min, avg, max) = (30.132, 47.286, 59.733), stdev = 15.551
  CI (99.9%): [? 0, 107.165] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4, nKeys = 100000, nValues = 3)

# Run progress: 2.08% complete, ETA 02:21:23
# Fork: 1 of 1
# Warmup Iteration   1: 31.261 ms/op
# Warmup Iteration   2: 30.711 ms/op
# Warmup Iteration   3: 34.606 ms/op
# Warmup Iteration   4: 43.809 ms/op
# Warmup Iteration   5: 59.341 ms/op
Iteration   1: 42.319 ms/op
Iteration   2: 30.744 ms/op
Iteration   3: 54.617 ms/op
Iteration   4: 53.736 ms/op
Iteration   5: 47.565 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  45.796 ±(99.9%) 37.660 ms/op [Average]
  (min, avg, max) = (30.744, 45.796, 54.617), stdev = 9.780
  CI (99.9%): [8.136, 83.457] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8, nKeys = 32, nValues = 2)

# Run progress: 2.21% complete, ETA 02:21:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.014 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.011 ms/op
# Warmup Iteration   4: 0.013 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.012 ms/op
Iteration   2: 0.012 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.025 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.018 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (0.012, 0.018, 0.026), stdev = 0.007
  CI (99.9%): [? 0, 0.045] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8, nKeys = 32, nValues = 3)

# Run progress: 2.33% complete, ETA 02:21:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.012 ms/op
# Warmup Iteration   4: 0.011 ms/op
# Warmup Iteration   5: 0.012 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.012 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.026 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.017 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (0.011, 0.017, 0.026), stdev = 0.006
  CI (99.9%): [? 0, 0.042] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8, nKeys = 1000, nValues = 2)

# Run progress: 2.45% complete, ETA 02:20:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.424 ms/op
# Warmup Iteration   2: 0.410 ms/op
# Warmup Iteration   3: 0.376 ms/op
# Warmup Iteration   4: 0.427 ms/op
# Warmup Iteration   5: 0.435 ms/op
Iteration   1: 0.401 ms/op
Iteration   2: 0.362 ms/op
Iteration   3: 0.536 ms/op
Iteration   4: 0.630 ms/op
Iteration   5: 0.579 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.501 ±(99.9%) 0.445 ms/op [Average]
  (min, avg, max) = (0.362, 0.501, 0.630), stdev = 0.116
  CI (99.9%): [0.056, 0.947] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8, nKeys = 1000, nValues = 3)

# Run progress: 2.57% complete, ETA 02:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.382 ms/op
# Warmup Iteration   2: 0.363 ms/op
# Warmup Iteration   3: 0.358 ms/op
# Warmup Iteration   4: 0.360 ms/op
# Warmup Iteration   5: 0.337 ms/op
Iteration   1: 0.381 ms/op
Iteration   2: 0.348 ms/op
Iteration   3: 0.428 ms/op
Iteration   4: 0.663 ms/op
Iteration   5: 0.634 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.491 ±(99.9%) 0.567 ms/op [Average]
  (min, avg, max) = (0.348, 0.491, 0.663), stdev = 0.147
  CI (99.9%): [? 0, 1.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8, nKeys = 100000, nValues = 2)

# Run progress: 2.70% complete, ETA 02:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 63.120 ms/op
# Warmup Iteration   2: 68.149 ms/op
# Warmup Iteration   3: 67.968 ms/op
# Warmup Iteration   4: 63.901 ms/op
# Warmup Iteration   5: 62.096 ms/op
Iteration   1: 79.148 ms/op
Iteration   2: 75.289 ms/op
Iteration   3: 72.959 ms/op
Iteration   4: 77.362 ms/op
Iteration   5: 74.838 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  75.919 ±(99.9%) 9.201 ms/op [Average]
  (min, avg, max) = (72.959, 75.919, 79.148), stdev = 2.389
  CI (99.9%): [66.718, 85.120] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8, nKeys = 100000, nValues = 3)

# Run progress: 2.82% complete, ETA 02:20:34
# Fork: 1 of 1
# Warmup Iteration   1: 62.427 ms/op
# Warmup Iteration   2: 54.477 ms/op
# Warmup Iteration   3: 71.672 ms/op
# Warmup Iteration   4: 74.230 ms/op
# Warmup Iteration   5: 58.923 ms/op
Iteration   1: 56.941 ms/op
Iteration   2: 56.195 ms/op
Iteration   3: 55.882 ms/op
Iteration   4: 53.057 ms/op
Iteration   5: 55.649 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  55.545 ±(99.9%) 5.674 ms/op [Average]
  (min, avg, max) = (53.057, 55.545, 56.941), stdev = 1.474
  CI (99.9%): [49.871, 61.219] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 2)

# Run progress: 2.94% complete, ETA 02:20:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
# Warmup Iteration   2: 0.023 ms/op
# Warmup Iteration   3: 0.024 ms/op
# Warmup Iteration   4: 0.025 ms/op
# Warmup Iteration   5: 0.025 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.026 ms/op
Iteration   3: 0.026 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.026 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.026 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.026, 0.026, 0.026), stdev = 0.001
  CI (99.9%): [0.025, 0.026] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 32, nValues = 3)

# Run progress: 3.06% complete, ETA 02:20:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ms/op
# Warmup Iteration   2: 0.020 ms/op
# Warmup Iteration   3: 0.020 ms/op
# Warmup Iteration   4: 0.023 ms/op
# Warmup Iteration   5: 0.023 ms/op
Iteration   1: 0.025 ms/op
Iteration   2: 0.024 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.022 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.023 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.022, 0.023, 0.025), stdev = 0.001
  CI (99.9%): [0.019, 0.028] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 2)

# Run progress: 3.19% complete, ETA 02:20:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.716 ms/op
# Warmup Iteration   2: 0.644 ms/op
# Warmup Iteration   3: 0.663 ms/op
# Warmup Iteration   4: 0.696 ms/op
# Warmup Iteration   5: 0.699 ms/op
Iteration   1: 0.739 ms/op
Iteration   2: 0.757 ms/op
Iteration   3: 0.734 ms/op
Iteration   4: 0.715 ms/op
Iteration   5: 0.729 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.735 ±(99.9%) 0.059 ms/op [Average]
  (min, avg, max) = (0.715, 0.735, 0.757), stdev = 0.015
  CI (99.9%): [0.676, 0.794] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 1000, nValues = 3)

# Run progress: 3.31% complete, ETA 02:19:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.682 ms/op
# Warmup Iteration   2: 0.645 ms/op
# Warmup Iteration   3: 0.644 ms/op
# Warmup Iteration   4: 0.714 ms/op
# Warmup Iteration   5: 0.722 ms/op
Iteration   1: 0.720 ms/op
Iteration   2: 0.787 ms/op
Iteration   3: 0.699 ms/op
Iteration   4: 0.724 ms/op
Iteration   5: 0.702 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.727 ±(99.9%) 0.137 ms/op [Average]
  (min, avg, max) = (0.699, 0.727, 0.787), stdev = 0.036
  CI (99.9%): [0.590, 0.863] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 2)

# Run progress: 3.43% complete, ETA 02:19:27
# Fork: 1 of 1
# Warmup Iteration   1: 109.441 ms/op
# Warmup Iteration   2: 100.924 ms/op
# Warmup Iteration   3: 109.733 ms/op
# Warmup Iteration   4: 111.693 ms/op
# Warmup Iteration   5: 116.196 ms/op
Iteration   1: 118.729 ms/op
Iteration   2: 118.582 ms/op
Iteration   3: 113.786 ms/op
Iteration   4: 117.979 ms/op
Iteration   5: 113.926 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  116.600 ±(99.9%) 9.709 ms/op [Average]
  (min, avg, max) = (113.786, 116.600, 118.729), stdev = 2.521
  CI (99.9%): [106.891, 126.310] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16, nKeys = 100000, nValues = 3)

# Run progress: 3.55% complete, ETA 02:19:32
# Fork: 1 of 1
# Warmup Iteration   1: 108.591 ms/op
# Warmup Iteration   2: 103.140 ms/op
# Warmup Iteration   3: 122.349 ms/op
# Warmup Iteration   4: 117.068 ms/op
# Warmup Iteration   5: 108.194 ms/op
Iteration   1: 117.086 ms/op
Iteration   2: 110.527 ms/op
Iteration   3: 119.867 ms/op
Iteration   4: 109.385 ms/op
Iteration   5: 106.640 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  112.701 ±(99.9%) 21.356 ms/op [Average]
  (min, avg, max) = (106.640, 112.701, 119.867), stdev = 5.546
  CI (99.9%): [91.345, 134.058] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 2)

# Run progress: 3.68% complete, ETA 02:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ms/op
# Warmup Iteration   2: 0.043 ms/op
# Warmup Iteration   3: 0.046 ms/op
# Warmup Iteration   4: 0.048 ms/op
# Warmup Iteration   5: 0.049 ms/op
Iteration   1: 0.056 ms/op
Iteration   2: 0.053 ms/op
Iteration   3: 0.051 ms/op
Iteration   4: 0.049 ms/op
Iteration   5: 0.051 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.052 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.049, 0.052, 0.056), stdev = 0.002
  CI (99.9%): [0.042, 0.061] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 32, nValues = 3)

# Run progress: 3.80% complete, ETA 02:19:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.045 ms/op
# Warmup Iteration   2: 0.040 ms/op
# Warmup Iteration   3: 0.042 ms/op
# Warmup Iteration   4: 0.046 ms/op
# Warmup Iteration   5: 0.044 ms/op
Iteration   1: 0.048 ms/op
Iteration   2: 0.044 ms/op
Iteration   3: 0.045 ms/op
Iteration   4: 0.047 ms/op
Iteration   5: 0.046 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.046 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.044, 0.046, 0.048), stdev = 0.001
  CI (99.9%): [0.041, 0.051] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 2)

# Run progress: 3.92% complete, ETA 02:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 1.400 ms/op
# Warmup Iteration   2: 1.270 ms/op
# Warmup Iteration   3: 1.356 ms/op
# Warmup Iteration   4: 1.337 ms/op
# Warmup Iteration   5: 1.457 ms/op
Iteration   1: 1.525 ms/op
Iteration   2: 1.483 ms/op
Iteration   3: 1.392 ms/op
Iteration   4: 1.472 ms/op
Iteration   5: 1.382 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.451 ±(99.9%) 0.237 ms/op [Average]
  (min, avg, max) = (1.382, 1.451, 1.525), stdev = 0.062
  CI (99.9%): [1.213, 1.688] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 1000, nValues = 3)

# Run progress: 4.04% complete, ETA 02:18:52
# Fork: 1 of 1
# Warmup Iteration   1: 1.402 ms/op
# Warmup Iteration   2: 1.248 ms/op
# Warmup Iteration   3: 1.299 ms/op
# Warmup Iteration   4: 1.406 ms/op
# Warmup Iteration   5: 1.380 ms/op
Iteration   1: 1.438 ms/op
Iteration   2: 1.398 ms/op
Iteration   3: 1.397 ms/op
Iteration   4: 1.365 ms/op
Iteration   5: 1.446 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.409 ±(99.9%) 0.127 ms/op [Average]
  (min, avg, max) = (1.365, 1.409, 1.446), stdev = 0.033
  CI (99.9%): [1.282, 1.536] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 2)

# Run progress: 4.17% complete, ETA 02:18:36
# Fork: 1 of 1
# Warmup Iteration   1: 224.939 ms/op
# Warmup Iteration   2: 202.866 ms/op
# Warmup Iteration   3: 229.437 ms/op
# Warmup Iteration   4: 223.724 ms/op
# Warmup Iteration   5: 236.294 ms/op
Iteration   1: 232.918 ms/op
Iteration   2: 242.906 ms/op
Iteration   3: 232.037 ms/op
Iteration   4: 223.989 ms/op
Iteration   5: 240.537 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  234.477 ±(99.9%) 28.954 ms/op [Average]
  (min, avg, max) = (223.989, 234.477, 242.906), stdev = 7.519
  CI (99.9%): [205.524, 263.431] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32, nKeys = 100000, nValues = 3)

# Run progress: 4.29% complete, ETA 02:18:57
# Fork: 1 of 1
# Warmup Iteration   1: 214.913 ms/op
# Warmup Iteration   2: 199.961 ms/op
# Warmup Iteration   3: 224.821 ms/op
# Warmup Iteration   4: 220.681 ms/op
# Warmup Iteration   5: 236.993 ms/op
Iteration   1: 241.085 ms/op
Iteration   2: 235.454 ms/op
Iteration   3: 216.886 ms/op
Iteration   4: 231.931 ms/op
Iteration   5: 223.625 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  229.796 ±(99.9%) 36.971 ms/op [Average]
  (min, avg, max) = (216.886, 229.796, 241.085), stdev = 9.601
  CI (99.9%): [192.825, 266.768] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 2)

# Run progress: 4.41% complete, ETA 02:19:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.095 ms/op
# Warmup Iteration   2: 0.087 ms/op
# Warmup Iteration   3: 0.091 ms/op
# Warmup Iteration   4: 0.109 ms/op
# Warmup Iteration   5: 0.101 ms/op
Iteration   1: 0.105 ms/op
Iteration   2: 0.097 ms/op
Iteration   3: 0.100 ms/op
Iteration   4: 0.106 ms/op
Iteration   5: 0.099 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.101 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.097, 0.101, 0.106), stdev = 0.004
  CI (99.9%): [0.086, 0.116] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 32, nValues = 3)

# Run progress: 4.53% complete, ETA 02:18:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.093 ms/op
# Warmup Iteration   2: 0.086 ms/op
# Warmup Iteration   3: 0.091 ms/op
# Warmup Iteration   4: 0.106 ms/op
# Warmup Iteration   5: 0.095 ms/op
Iteration   1: 0.097 ms/op
Iteration   2: 0.099 ms/op
Iteration   3: 0.095 ms/op
Iteration   4: 0.102 ms/op
Iteration   5: 0.114 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.102 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.095, 0.102, 0.114), stdev = 0.008
  CI (99.9%): [0.072, 0.131] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 2)

# Run progress: 4.66% complete, ETA 02:18:43
# Fork: 1 of 1
# Warmup Iteration   1: 2.726 ms/op
# Warmup Iteration   2: 2.524 ms/op
# Warmup Iteration   3: 2.613 ms/op
# Warmup Iteration   4: 2.930 ms/op
# Warmup Iteration   5: 2.934 ms/op
Iteration   1: 2.922 ms/op
Iteration   2: 2.989 ms/op
Iteration   3: 2.828 ms/op
Iteration   4: 2.756 ms/op
Iteration   5: 3.029 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.905 ±(99.9%) 0.435 ms/op [Average]
  (min, avg, max) = (2.756, 2.905, 3.029), stdev = 0.113
  CI (99.9%): [2.470, 3.339] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 1000, nValues = 3)

# Run progress: 4.78% complete, ETA 02:18:28
# Fork: 1 of 1
# Warmup Iteration   1: 2.743 ms/op
# Warmup Iteration   2: 2.500 ms/op
# Warmup Iteration   3: 2.659 ms/op
# Warmup Iteration   4: 2.799 ms/op
# Warmup Iteration   5: 3.066 ms/op
Iteration   1: 2.786 ms/op
Iteration   2: 2.918 ms/op
Iteration   3: 2.824 ms/op
Iteration   4: 2.812 ms/op
Iteration   5: 3.193 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2.907 ±(99.9%) 0.646 ms/op [Average]
  (min, avg, max) = (2.786, 2.907, 3.193), stdev = 0.168
  CI (99.9%): [2.261, 3.553] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 2)

# Run progress: 4.90% complete, ETA 02:18:12
# Fork: 1 of 1
# Warmup Iteration   1: 412.203 ms/op
# Warmup Iteration   2: 394.982 ms/op
# Warmup Iteration   3: 464.581 ms/op
# Warmup Iteration   4: 470.177 ms/op
# Warmup Iteration   5: 456.886 ms/op
Iteration   1: 435.094 ms/op
Iteration   2: 471.058 ms/op
Iteration   3: 470.454 ms/op
Iteration   4: 453.765 ms/op
Iteration   5: 454.878 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  457.050 ±(99.9%) 56.901 ms/op [Average]
  (min, avg, max) = (435.094, 457.050, 471.058), stdev = 14.777
  CI (99.9%): [400.149, 513.951] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 64, nKeys = 100000, nValues = 3)

# Run progress: 5.02% complete, ETA 02:19:05
# Fork: 1 of 1
# Warmup Iteration   1: 435.440 ms/op
# Warmup Iteration   2: 401.280 ms/op
# Warmup Iteration   3: 463.352 ms/op
# Warmup Iteration   4: 433.631 ms/op
# Warmup Iteration   5: 452.569 ms/op
Iteration   1: 443.178 ms/op
Iteration   2: 441.947 ms/op
Iteration   3: 473.995 ms/op
Iteration   4: 443.061 ms/op
Iteration   5: 448.034 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  450.043 ±(99.9%) 52.345 ms/op [Average]
  (min, avg, max) = (441.947, 450.043, 473.995), stdev = 13.594
  CI (99.9%): [397.698, 502.388] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 2)

# Run progress: 5.15% complete, ETA 02:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.189 ms/op
# Warmup Iteration   2: 0.173 ms/op
# Warmup Iteration   3: 0.178 ms/op
# Warmup Iteration   4: 0.219 ms/op
# Warmup Iteration   5: 0.196 ms/op
Iteration   1: 0.192 ms/op
Iteration   2: 0.202 ms/op
Iteration   3: 0.196 ms/op
Iteration   4: 0.203 ms/op
Iteration   5: 0.200 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.199 ±(99.9%) 0.018 ms/op [Average]
  (min, avg, max) = (0.192, 0.199, 0.203), stdev = 0.005
  CI (99.9%): [0.181, 0.216] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 32, nValues = 3)

# Run progress: 5.27% complete, ETA 02:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.187 ms/op
# Warmup Iteration   2: 0.175 ms/op
# Warmup Iteration   3: 0.188 ms/op
# Warmup Iteration   4: 0.214 ms/op
# Warmup Iteration   5: 0.210 ms/op
Iteration   1: 0.197 ms/op
Iteration   2: 0.208 ms/op
Iteration   3: 0.205 ms/op
Iteration   4: 0.207 ms/op
Iteration   5: 0.210 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.205 ±(99.9%) 0.019 ms/op [Average]
  (min, avg, max) = (0.197, 0.205, 0.210), stdev = 0.005
  CI (99.9%): [0.187, 0.224] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 2)

# Run progress: 5.39% complete, ETA 02:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 5.386 ms/op
# Warmup Iteration   2: 5.118 ms/op
# Warmup Iteration   3: 5.265 ms/op
# Warmup Iteration   4: 5.774 ms/op
# Warmup Iteration   5: 5.988 ms/op
Iteration   1: 7.047 ms/op
Iteration   2: 6.391 ms/op
Iteration   3: 5.844 ms/op
Iteration   4: 5.752 ms/op
Iteration   5: 6.381 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  6.283 ±(99.9%) 2.000 ms/op [Average]
  (min, avg, max) = (5.752, 6.283, 7.047), stdev = 0.519
  CI (99.9%): [4.283, 8.283] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 1000, nValues = 3)

# Run progress: 5.51% complete, ETA 02:18:58
# Fork: 1 of 1
# Warmup Iteration   1: 5.460 ms/op
# Warmup Iteration   2: 5.104 ms/op
# Warmup Iteration   3: 5.284 ms/op
# Warmup Iteration   4: 6.342 ms/op
# Warmup Iteration   5: 6.176 ms/op
Iteration   1: 6.100 ms/op
Iteration   2: 5.621 ms/op
Iteration   3: 5.759 ms/op
Iteration   4: 5.968 ms/op
Iteration   5: 6.275 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  5.945 ±(99.9%) 1.006 ms/op [Average]
  (min, avg, max) = (5.621, 5.945, 6.275), stdev = 0.261
  CI (99.9%): [4.939, 6.951] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 2)

# Run progress: 5.64% complete, ETA 02:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 844.811 ms/op
# Warmup Iteration   2: 884.857 ms/op
# Warmup Iteration   3: 981.823 ms/op
# Warmup Iteration   4: 1078.023 ms/op
# Warmup Iteration   5: 1043.861 ms/op
Iteration   1: 1008.656 ms/op
Iteration   2: 962.545 ms/op
Iteration   3: 863.189 ms/op
Iteration   4: 875.054 ms/op
Iteration   5: 884.207 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  918.730 ±(99.9%) 244.982 ms/op [Average]
  (min, avg, max) = (863.189, 918.730, 1008.656), stdev = 63.621
  CI (99.9%): [673.748, 1163.712] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 128, nKeys = 100000, nValues = 3)

# Run progress: 5.76% complete, ETA 02:20:00
# Fork: 1 of 1
# Warmup Iteration   1: 829.410 ms/op
# Warmup Iteration   2: 893.590 ms/op
# Warmup Iteration   3: 904.263 ms/op
# Warmup Iteration   4: 884.501 ms/op
# Warmup Iteration   5: 890.555 ms/op
Iteration   1: 911.392 ms/op
Iteration   2: 871.393 ms/op
Iteration   3: 877.258 ms/op
Iteration   4: 869.193 ms/op
Iteration   5: 894.068 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  884.661 ±(99.9%) 68.698 ms/op [Average]
  (min, avg, max) = (869.193, 884.661, 911.392), stdev = 17.841
  CI (99.9%): [815.963, 953.359] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 2)

# Run progress: 5.88% complete, ETA 02:21:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.375 ms/op
# Warmup Iteration   2: 0.350 ms/op
# Warmup Iteration   3: 0.386 ms/op
# Warmup Iteration   4: 0.396 ms/op
# Warmup Iteration   5: 0.392 ms/op
Iteration   1: 0.389 ms/op
Iteration   2: 0.392 ms/op
Iteration   3: 0.432 ms/op
Iteration   4: 0.393 ms/op
Iteration   5: 0.419 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.405 ±(99.9%) 0.074 ms/op [Average]
  (min, avg, max) = (0.389, 0.405, 0.432), stdev = 0.019
  CI (99.9%): [0.331, 0.478] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 32, nValues = 3)

# Run progress: 6.00% complete, ETA 02:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.368 ms/op
# Warmup Iteration   2: 0.345 ms/op
# Warmup Iteration   3: 0.380 ms/op
# Warmup Iteration   4: 0.375 ms/op
# Warmup Iteration   5: 0.405 ms/op
Iteration   1: 0.420 ms/op
Iteration   2: 0.395 ms/op
Iteration   3: 0.433 ms/op
Iteration   4: 0.408 ms/op
Iteration   5: 0.386 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.408 ±(99.9%) 0.074 ms/op [Average]
  (min, avg, max) = (0.386, 0.408, 0.433), stdev = 0.019
  CI (99.9%): [0.335, 0.482] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 2)

# Run progress: 6.13% complete, ETA 02:21:06
# Fork: 1 of 1
# Warmup Iteration   1: 11.341 ms/op
# Warmup Iteration   2: 10.276 ms/op
# Warmup Iteration   3: 11.206 ms/op
# Warmup Iteration   4: 12.095 ms/op
# Warmup Iteration   5: 11.557 ms/op
Iteration   1: 12.013 ms/op
Iteration   2: 11.395 ms/op
Iteration   3: 11.991 ms/op
Iteration   4: 11.689 ms/op
Iteration   5: 11.421 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11.702 ±(99.9%) 1.145 ms/op [Average]
  (min, avg, max) = (11.395, 11.702, 12.013), stdev = 0.297
  CI (99.9%): [10.556, 12.847] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 1000, nValues = 3)

# Run progress: 6.25% complete, ETA 02:20:46
# Fork: 1 of 1
# Warmup Iteration   1: 10.863 ms/op
# Warmup Iteration   2: 10.066 ms/op
# Warmup Iteration   3: 10.700 ms/op
# Warmup Iteration   4: 12.092 ms/op
# Warmup Iteration   5: 11.070 ms/op
Iteration   1: 11.125 ms/op
Iteration   2: 11.424 ms/op
Iteration   3: 11.687 ms/op
Iteration   4: 12.524 ms/op
Iteration   5: 11.912 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11.734 ±(99.9%) 2.042 ms/op [Average]
  (min, avg, max) = (11.125, 11.734, 12.524), stdev = 0.530
  CI (99.9%): [9.693, 13.776] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 2)

# Run progress: 6.37% complete, ETA 02:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 1690.999 ms/op
# Warmup Iteration   2: 1757.512 ms/op
# Warmup Iteration   3: 1858.493 ms/op
# Warmup Iteration   4: 1882.154 ms/op
# Warmup Iteration   5: 1904.703 ms/op
Iteration   1: 1861.797 ms/op
Iteration   2: 1827.962 ms/op
Iteration   3: 1899.842 ms/op
Iteration   4: 1744.197 ms/op
Iteration   5: 1760.011 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1818.762 ±(99.9%) 254.858 ms/op [Average]
  (min, avg, max) = (1744.197, 1818.762, 1899.842), stdev = 66.186
  CI (99.9%): [1563.904, 2073.620] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 256, nKeys = 100000, nValues = 3)

# Run progress: 6.50% complete, ETA 02:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 1704.320 ms/op
# Warmup Iteration   2: 1751.389 ms/op
# Warmup Iteration   3: 1917.122 ms/op
# Warmup Iteration   4: 1839.131 ms/op
# Warmup Iteration   5: 1809.229 ms/op
Iteration   1: 1836.891 ms/op
Iteration   2: 1789.704 ms/op
Iteration   3: 1814.336 ms/op
Iteration   4: 1879.677 ms/op
Iteration   5: 1743.502 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1812.822 ±(99.9%) 196.258 ms/op [Average]
  (min, avg, max) = (1743.502, 1812.822, 1879.677), stdev = 50.968
  CI (99.9%): [1616.563, 2009.080] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 2)

# Run progress: 6.62% complete, ETA 02:23:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.763 ms/op
# Warmup Iteration   2: 0.696 ms/op
# Warmup Iteration   3: 0.740 ms/op
# Warmup Iteration   4: 0.831 ms/op
# Warmup Iteration   5: 0.781 ms/op
Iteration   1: 0.773 ms/op
Iteration   2: 0.815 ms/op
Iteration   3: 0.826 ms/op
Iteration   4: 0.826 ms/op
Iteration   5: 0.816 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.811 ±(99.9%) 0.085 ms/op [Average]
  (min, avg, max) = (0.773, 0.811, 0.826), stdev = 0.022
  CI (99.9%): [0.727, 0.896] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 32, nValues = 3)

# Run progress: 6.74% complete, ETA 02:23:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.766 ms/op
# Warmup Iteration   2: 0.711 ms/op
# Warmup Iteration   3: 0.755 ms/op
# Warmup Iteration   4: 0.876 ms/op
# Warmup Iteration   5: 0.831 ms/op
Iteration   1: 0.820 ms/op
Iteration   2: 0.837 ms/op
Iteration   3: 0.793 ms/op
Iteration   4: 0.851 ms/op
Iteration   5: 0.829 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  0.826 ±(99.9%) 0.083 ms/op [Average]
  (min, avg, max) = (0.793, 0.826, 0.851), stdev = 0.022
  CI (99.9%): [0.743, 0.909] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 2)

# Run progress: 6.86% complete, ETA 02:22:55
# Fork: 1 of 1
# Warmup Iteration   1: 22.061 ms/op
# Warmup Iteration   2: 20.303 ms/op
# Warmup Iteration   3: 21.090 ms/op
# Warmup Iteration   4: 23.306 ms/op
# Warmup Iteration   5: 22.558 ms/op
Iteration   1: 23.230 ms/op
Iteration   2: 22.082 ms/op
Iteration   3: 22.881 ms/op
Iteration   4: 24.858 ms/op
Iteration   5: 22.514 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  23.113 ±(99.9%) 4.100 ms/op [Average]
  (min, avg, max) = (22.082, 23.113, 24.858), stdev = 1.065
  CI (99.9%): [19.013, 27.213] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 1000, nValues = 3)

# Run progress: 6.99% complete, ETA 02:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 21.809 ms/op
# Warmup Iteration   2: 20.186 ms/op
# Warmup Iteration   3: 20.558 ms/op
# Warmup Iteration   4: 23.611 ms/op
# Warmup Iteration   5: 22.676 ms/op
Iteration   1: 23.718 ms/op
Iteration   2: 24.732 ms/op
Iteration   3: 23.323 ms/op
Iteration   4: 23.302 ms/op
Iteration   5: 21.765 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  23.368 ±(99.9%) 4.110 ms/op [Average]
  (min, avg, max) = (21.765, 23.368, 24.732), stdev = 1.067
  CI (99.9%): [19.258, 27.478] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 2)

# Run progress: 7.11% complete, ETA 02:22:12
# Fork: 1 of 1
# Warmup Iteration   1: 3320.151 ms/op
# Warmup Iteration   2: 3621.602 ms/op
# Warmup Iteration   3: 3569.651 ms/op
# Warmup Iteration   4: 3544.928 ms/op
# Warmup Iteration   5: 3547.139 ms/op
Iteration   1: 3440.891 ms/op
Iteration   2: 3362.562 ms/op
Iteration   3: 3355.323 ms/op
Iteration   4: 3469.777 ms/op
Iteration   5: 3485.727 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  3422.856 ±(99.9%) 233.240 ms/op [Average]
  (min, avg, max) = (3355.323, 3422.856, 3485.727), stdev = 60.572
  CI (99.9%): [3189.616, 3656.096] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 512, nKeys = 100000, nValues = 3)

# Run progress: 7.23% complete, ETA 02:27:09
# Fork: 1 of 1
# Warmup Iteration   1: 3313.934 ms/op
# Warmup Iteration   2: 3566.850 ms/op
# Warmup Iteration   3: 3530.801 ms/op
# Warmup Iteration   4: 3506.626 ms/op
# Warmup Iteration   5: 3562.220 ms/op
Iteration   1: 3404.810 ms/op
Iteration   2: 3339.054 ms/op
Iteration   3: 3513.274 ms/op
Iteration   4: 3295.534 ms/op
Iteration   5: 3424.957 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  3395.526 ±(99.9%) 322.195 ms/op [Average]
  (min, avg, max) = (3295.534, 3395.526, 3513.274), stdev = 83.673
  CI (99.9%): [3073.331, 3717.721] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 2)

# Run progress: 7.35% complete, ETA 02:31:52
# Fork: 1 of 1
# Warmup Iteration   1: 1.473 ms/op
# Warmup Iteration   2: 1.358 ms/op
# Warmup Iteration   3: 1.559 ms/op
# Warmup Iteration   4: 1.583 ms/op
# Warmup Iteration   5: 1.599 ms/op
Iteration   1: 1.653 ms/op
Iteration   2: 1.599 ms/op
Iteration   3: 1.594 ms/op
Iteration   4: 1.576 ms/op
Iteration   5: 1.631 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.611 ±(99.9%) 0.119 ms/op [Average]
  (min, avg, max) = (1.576, 1.611, 1.653), stdev = 0.031
  CI (99.9%): [1.492, 1.730] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 32, nValues = 3)

# Run progress: 7.48% complete, ETA 02:31:20
# Fork: 1 of 1
# Warmup Iteration   1: 1.516 ms/op
# Warmup Iteration   2: 1.374 ms/op
# Warmup Iteration   3: 1.466 ms/op
# Warmup Iteration   4: 1.657 ms/op
# Warmup Iteration   5: 1.552 ms/op
Iteration   1: 1.508 ms/op
Iteration   2: 1.531 ms/op
Iteration   3: 1.689 ms/op
Iteration   4: 1.477 ms/op
Iteration   5: 1.570 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1.555 ±(99.9%) 0.317 ms/op [Average]
  (min, avg, max) = (1.477, 1.555, 1.689), stdev = 0.082
  CI (99.9%): [1.238, 1.871] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 2)

# Run progress: 7.60% complete, ETA 02:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 44.554 ms/op
# Warmup Iteration   2: 41.028 ms/op
# Warmup Iteration   3: 45.275 ms/op
# Warmup Iteration   4: 46.796 ms/op
# Warmup Iteration   5: 47.423 ms/op
Iteration   1: 46.187 ms/op
Iteration   2: 45.221 ms/op
Iteration   3: 46.478 ms/op
Iteration   4: 45.521 ms/op
Iteration   5: 45.345 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  45.750 ±(99.9%) 2.124 ms/op [Average]
  (min, avg, max) = (45.221, 45.750, 46.478), stdev = 0.552
  CI (99.9%): [43.626, 47.874] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 1000, nValues = 3)

# Run progress: 7.72% complete, ETA 02:30:22
# Fork: 1 of 1
# Warmup Iteration   1: 44.824 ms/op
# Warmup Iteration   2: 40.600 ms/op
# Warmup Iteration   3: 43.261 ms/op
# Warmup Iteration   4: 46.017 ms/op
# Warmup Iteration   5: 48.014 ms/op
Iteration   1: 46.005 ms/op
Iteration   2: 46.468 ms/op
Iteration   3: 51.121 ms/op
Iteration   4: 44.435 ms/op
Iteration   5: 46.385 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  46.883 ±(99.9%) 9.653 ms/op [Average]
  (min, avg, max) = (44.435, 46.883, 51.121), stdev = 2.507
  CI (99.9%): [37.229, 56.536] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 2)

# Run progress: 7.84% complete, ETA 02:29:53
# Fork: 1 of 1
# Warmup Iteration   1: 6988.701 ms/op
# Warmup Iteration   2: 7587.756 ms/op
# Warmup Iteration   3: 7696.184 ms/op
# Warmup Iteration   4: 7971.283 ms/op
# Warmup Iteration   5: 10160.706 ms/op
Iteration   1: 11549.288 ms/op
Iteration   2: 12068.986 ms/op
Iteration   3: 11594.903 ms/op
Iteration   4: 10656.816 ms/op
Iteration   5: 10638.055 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11301.610 ±(99.9%) 2429.491 ms/op [Average]
  (min, avg, max) = (10638.055, 11301.610, 12068.986), stdev = 630.931
  CI (99.9%): [8872.118, 13731.101] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 1024, nKeys = 100000, nValues = 3)

# Run progress: 7.97% complete, ETA 02:46:09
# Fork: 1 of 1
# Warmup Iteration   1: 6778.120 ms/op
# Warmup Iteration   2: 10565.700 ms/op
# Warmup Iteration   3: 13428.089 ms/op
# Warmup Iteration   4: 12113.386 ms/op
# Warmup Iteration   5: 11550.587 ms/op
Iteration   1: 11411.078 ms/op
Iteration   2: 11551.249 ms/op
Iteration   3: 11946.472 ms/op
Iteration   4: 10813.073 ms/op
Iteration   5: 11926.348 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  11529.644 ±(99.9%) 1784.554 ms/op [Average]
  (min, avg, max) = (10813.073, 11529.644, 11946.472), stdev = 463.443
  CI (99.9%): [9745.090, 13314.198] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 2)

# Run progress: 8.09% complete, ETA 03:04:46
# Fork: 1 of 1
# Warmup Iteration   1: 3.929 ms/op
# Warmup Iteration   2: 3.237 ms/op
# Warmup Iteration   3: 3.204 ms/op
# Warmup Iteration   4: 3.066 ms/op
# Warmup Iteration   5: 2.884 ms/op
Iteration   1: 3.011 ms/op
Iteration   2: 2.983 ms/op
Iteration   3: 3.577 ms/op
Iteration   4: 5.089 ms/op
Iteration   5: 5.932 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  4.118 ±(99.9%) 5.108 ms/op [Average]
  (min, avg, max) = (2.983, 4.118, 5.932), stdev = 1.327
  CI (99.9%): [? 0, 9.227] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 32, nValues = 3)

# Run progress: 8.21% complete, ETA 03:03:43
# Fork: 1 of 1
# Warmup Iteration   1: 3.448 ms/op
# Warmup Iteration   2: 3.224 ms/op
# Warmup Iteration   3: 3.182 ms/op
# Warmup Iteration   4: 3.063 ms/op
# Warmup Iteration   5: 2.893 ms/op
Iteration   1: 2.932 ms/op
Iteration   2: 3.023 ms/op
Iteration   3: 3.524 ms/op
Iteration   4: 5.746 ms/op
Iteration   5: 6.103 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  4.266 ±(99.9%) 5.916 ms/op [Average]
  (min, avg, max) = (2.932, 4.266, 6.103), stdev = 1.536
  CI (99.9%): [? 0, 10.181] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 2)

# Run progress: 8.33% complete, ETA 03:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 102.300 ms/op
# Warmup Iteration   2: 88.145 ms/op
# Warmup Iteration   3: 88.767 ms/op
# Warmup Iteration   4: 94.485 ms/op
# Warmup Iteration   5: 89.474 ms/op
Iteration   1: 83.479 ms/op
Iteration   2: 87.670 ms/op
Iteration   3: 131.522 ms/op
Iteration   4: 139.213 ms/op
Iteration   5: 165.184 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  121.413 ±(99.9%) 134.944 ms/op [Average]
  (min, avg, max) = (83.479, 121.413, 165.184), stdev = 35.045
  CI (99.9%): [? 0, 256.358] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 1000, nValues = 3)

# Run progress: 8.46% complete, ETA 03:01:48
# Fork: 1 of 1
# Warmup Iteration   1: 89.644 ms/op
# Warmup Iteration   2: 87.294 ms/op
# Warmup Iteration   3: 82.452 ms/op
# Warmup Iteration   4: 84.892 ms/op
# Warmup Iteration   5: 85.795 ms/op
Iteration   1: 83.087 ms/op
Iteration   2: 82.757 ms/op
Iteration   3: 114.363 ms/op
Iteration   4: 144.345 ms/op
Iteration   5: 145.074 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  113.925 ±(99.9%) 118.970 ms/op [Average]
  (min, avg, max) = (82.757, 113.925, 145.074), stdev = 30.896
  CI (99.9%): [? 0, 232.895] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 2)

# Run progress: 8.58% complete, ETA 03:00:54
# Fork: 1 of 1
# Warmup Iteration   1: 16466.725 ms/op
# Warmup Iteration   2: 21299.881 ms/op
# Warmup Iteration   3: 22286.429 ms/op
# Warmup Iteration   4: 23686.073 ms/op
# Warmup Iteration   5: 22792.384 ms/op
Iteration   1: 22959.266 ms/op
Iteration   2: 23316.085 ms/op
Iteration   3: 23956.643 ms/op
Iteration   4: 24001.494 ms/op
Iteration   5: 22255.019 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  23297.702 ±(99.9%) 2810.964 ms/op [Average]
  (min, avg, max) = (22255.019, 23297.702, 24001.494), stdev = 729.999
  CI (99.9%): [20486.737, 26108.666] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 2048, nKeys = 100000, nValues = 3)

# Run progress: 8.70% complete, ETA 03:37:13
# Fork: 1 of 1
# Warmup Iteration   1: 18219.673 ms/op
# Warmup Iteration   2: 21456.871 ms/op
# Warmup Iteration   3: 21033.452 ms/op
# Warmup Iteration   4: 22353.302 ms/op
# Warmup Iteration   5: 22551.073 ms/op
Iteration   1: 23086.414 ms/op
Iteration   2: 22294.583 ms/op
Iteration   3: 22569.130 ms/op
Iteration   4: 22145.809 ms/op
Iteration   5: 22141.423 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  22447.472 ±(99.9%) 1529.497 ms/op [Average]
  (min, avg, max) = (22141.423, 22447.472, 23086.414), stdev = 397.206
  CI (99.9%): [20917.975, 23976.969] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 2)

# Run progress: 8.82% complete, ETA 04:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 6.230 ms/op
# Warmup Iteration   2: 5.912 ms/op
# Warmup Iteration   3: 5.921 ms/op
# Warmup Iteration   4: 5.836 ms/op
# Warmup Iteration   5: 5.727 ms/op
Iteration   1: 6.197 ms/op
Iteration   2: 5.801 ms/op
Iteration   3: 7.342 ms/op
Iteration   4: 11.051 ms/op
Iteration   5: 10.366 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  8.151 ±(99.9%) 9.296 ms/op [Average]
  (min, avg, max) = (5.801, 8.151, 11.051), stdev = 2.414
  CI (99.9%): [? 0, 17.447] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 32, nValues = 3)

# Run progress: 8.95% complete, ETA 04:09:33
# Fork: 1 of 1
# Warmup Iteration   1: 6.217 ms/op
# Warmup Iteration   2: 5.701 ms/op
# Warmup Iteration   3: 5.911 ms/op
# Warmup Iteration   4: 5.777 ms/op
# Warmup Iteration   5: 5.712 ms/op
Iteration   1: 5.707 ms/op
Iteration   2: 5.756 ms/op
Iteration   3: 7.032 ms/op
Iteration   4: 10.533 ms/op
Iteration   5: 11.380 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  8.082 ±(99.9%) 10.375 ms/op [Average]
  (min, avg, max) = (5.707, 8.082, 11.380), stdev = 2.694
  CI (99.9%): [? 0, 18.457] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 2)

# Run progress: 9.07% complete, ETA 04:07:36
# Fork: 1 of 1
# Warmup Iteration   1: 182.949 ms/op
# Warmup Iteration   2: 170.558 ms/op
# Warmup Iteration   3: 174.871 ms/op
# Warmup Iteration   4: 169.981 ms/op
# Warmup Iteration   5: 169.726 ms/op
Iteration   1: 169.132 ms/op
Iteration   2: 189.085 ms/op
Iteration   3: 257.073 ms/op
Iteration   4: 267.689 ms/op
Iteration   5: 297.572 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  236.110 ±(99.9%) 210.132 ms/op [Average]
  (min, avg, max) = (169.132, 236.110, 297.572), stdev = 54.570
  CI (99.9%): [25.979, 446.242] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 1000, nValues = 3)

# Run progress: 9.19% complete, ETA 04:05:46
# Fork: 1 of 1
# Warmup Iteration   1: 184.669 ms/op
# Warmup Iteration   2: 196.752 ms/op
# Warmup Iteration   3: 176.324 ms/op
# Warmup Iteration   4: 171.571 ms/op
# Warmup Iteration   5: 176.288 ms/op
Iteration   1: 161.961 ms/op
Iteration   2: 165.040 ms/op
Iteration   3: 301.823 ms/op
Iteration   4: 267.674 ms/op
Iteration   5: 273.792 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  234.058 ±(99.9%) 252.961 ms/op [Average]
  (min, avg, max) = (161.961, 234.058, 301.823), stdev = 65.693
  CI (99.9%): [? 0, 487.019] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 2)

# Run progress: 9.31% complete, ETA 04:04:04
# Fork: 1 of 1
# Warmup Iteration   1: 41362.093 ms/op
# Warmup Iteration   2: 47320.065 ms/op
# Warmup Iteration   3: 48340.172 ms/op
# Warmup Iteration   4: 46740.142 ms/op
# Warmup Iteration   5: 47210.859 ms/op
Iteration   1: 48806.999 ms/op
Iteration   2: 46551.740 ms/op
Iteration   3: 48732.512 ms/op
Iteration   4: 47872.682 ms/op
Iteration   5: 47944.876 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  47981.762 ±(99.9%) 3499.038 ms/op [Average]
  (min, avg, max) = (46551.740, 47981.762, 48806.999), stdev = 908.689
  CI (99.9%): [44482.724, 51480.800] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 4096, nKeys = 100000, nValues = 3)

# Run progress: 9.44% complete, ETA 05:15:59
# Fork: 1 of 1
# Warmup Iteration   1: 44552.612 ms/op
# Warmup Iteration   2: 45999.040 ms/op
# Warmup Iteration   3: 48386.429 ms/op
# Warmup Iteration   4: 48633.285 ms/op
# Warmup Iteration   5: 49004.707 ms/op
Iteration   1: 48465.052 ms/op
Iteration   2: 47805.178 ms/op
Iteration   3: 47813.760 ms/op
Iteration   4: 43401.063 ms/op
Iteration   5: 38399.151 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  45176.841 ±(99.9%) 16535.848 ms/op [Average]
  (min, avg, max) = (38399.151, 45176.841, 48465.052), stdev = 4294.307
  CI (99.9%): [28640.993, 61712.689] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 2)

# Run progress: 9.56% complete, ETA 06:24:33
# Fork: 1 of 1
# Warmup Iteration   1: 12.130 ms/op
# Warmup Iteration   2: 11.392 ms/op
# Warmup Iteration   3: 10.886 ms/op
# Warmup Iteration   4: 11.028 ms/op
# Warmup Iteration   5: 10.951 ms/op
Iteration   1: 10.804 ms/op
Iteration   2: 11.055 ms/op
Iteration   3: 13.125 ms/op
Iteration   4: 17.854 ms/op
Iteration   5: 17.968 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  14.161 ±(99.9%) 13.632 ms/op [Average]
  (min, avg, max) = (10.804, 14.161, 17.968), stdev = 3.540
  CI (99.9%): [0.530, 27.793] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 32, nValues = 3)

# Run progress: 9.68% complete, ETA 06:20:49
# Fork: 1 of 1
# Warmup Iteration   1: 12.267 ms/op
# Warmup Iteration   2: 11.846 ms/op
# Warmup Iteration   3: 11.499 ms/op
# Warmup Iteration   4: 11.507 ms/op
# Warmup Iteration   5: 11.422 ms/op
Iteration   1: 11.296 ms/op
Iteration   2: 11.476 ms/op
Iteration   3: 13.808 ms/op
Iteration   4: 20.154 ms/op
Iteration   5: 19.413 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  15.229 ±(99.9%) 16.488 ms/op [Average]
  (min, avg, max) = (11.296, 15.229, 20.154), stdev = 4.282
  CI (99.9%): [? 0, 31.718] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 2)

# Run progress: 9.80% complete, ETA 06:17:09
# Fork: 1 of 1
# Warmup Iteration   1: 340.609 ms/op
# Warmup Iteration   2: 331.182 ms/op
# Warmup Iteration   3: 321.566 ms/op
# Warmup Iteration   4: 319.638 ms/op
# Warmup Iteration   5: 320.992 ms/op
Iteration   1: 329.115 ms/op
Iteration   2: 448.914 ms/op
Iteration   3: 516.088 ms/op
Iteration   4: 480.643 ms/op
Iteration   5: 509.814 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  456.915 ±(99.9%) 293.633 ms/op [Average]
  (min, avg, max) = (329.115, 456.915, 516.088), stdev = 76.256
  CI (99.9%): [163.282, 750.548] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 1000, nValues = 3)

# Run progress: 9.93% complete, ETA 06:13:54
# Fork: 1 of 1
# Warmup Iteration   1: 348.619 ms/op
# Warmup Iteration   2: 327.095 ms/op
# Warmup Iteration   3: 319.614 ms/op
# Warmup Iteration   4: 322.167 ms/op
# Warmup Iteration   5: 333.289 ms/op
Iteration   1: 321.498 ms/op
Iteration   2: 433.355 ms/op
Iteration   3: 482.594 ms/op
Iteration   4: 561.926 ms/op
Iteration   5: 517.705 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  463.416 ±(99.9%) 355.343 ms/op [Average]
  (min, avg, max) = (321.498, 463.416, 561.926), stdev = 92.282
  CI (99.9%): [108.072, 818.759] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 2)

# Run progress: 10.05% complete, ETA 06:10:45
# Fork: 1 of 1
# Warmup Iteration   1: 72599.659 ms/op
# Warmup Iteration   2: 80524.755 ms/op
# Warmup Iteration   3: 75841.925 ms/op
# Warmup Iteration   4: 75441.476 ms/op
# Warmup Iteration   5: 77718.566 ms/op
Iteration   1: 77897.779 ms/op
Iteration   2: 76539.520 ms/op
Iteration   3: 76050.276 ms/op
Iteration   4: 77358.884 ms/op
Iteration   5: 76288.261 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  76826.944 ±(99.9%) 2986.206 ms/op [Average]
  (min, avg, max) = (76050.276, 76826.944, 77897.779), stdev = 775.508
  CI (99.9%): [73840.737, 79813.150] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 8192, nKeys = 100000, nValues = 3)

# Run progress: 10.17% complete, ETA 07:58:40
# Fork: 1 of 1
# Warmup Iteration   1: 73471.009 ms/op
# Warmup Iteration   2: 75381.541 ms/op
# Warmup Iteration   3: 76627.369 ms/op
# Warmup Iteration   4: 77296.814 ms/op
# Warmup Iteration   5: 77587.740 ms/op
Iteration   1: 77246.808 ms/op
Iteration   2: 77586.898 ms/op
Iteration   3: 77678.527 ms/op
Iteration   4: 78397.194 ms/op
Iteration   5: 77528.421 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  77687.570 ±(99.9%) 1648.802 ms/op [Average]
  (min, avg, max) = (77246.808, 77687.570, 78397.194), stdev = 428.189
  CI (99.9%): [76038.767, 79336.372] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 2)

# Run progress: 10.29% complete, ETA 09:44:04
# Fork: 1 of 1
# Warmup Iteration   1: 24.106 ms/op
# Warmup Iteration   2: 22.149 ms/op
# Warmup Iteration   3: 22.237 ms/op
# Warmup Iteration   4: 22.414 ms/op
# Warmup Iteration   5: 22.727 ms/op
Iteration   1: 22.137 ms/op
Iteration   2: 22.137 ms/op
Iteration   3: 26.040 ms/op
Iteration   4: 36.227 ms/op
Iteration   5: 36.285 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  28.565 ±(99.9%) 27.722 ms/op [Average]
  (min, avg, max) = (22.137, 28.565, 36.285), stdev = 7.199
  CI (99.9%): [0.844, 56.287] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 32, nValues = 3)

# Run progress: 10.42% complete, ETA 09:37:55
# Fork: 1 of 1
# Warmup Iteration   1: 23.703 ms/op
# Warmup Iteration   2: 22.216 ms/op
# Warmup Iteration   3: 22.165 ms/op
# Warmup Iteration   4: 22.003 ms/op
# Warmup Iteration   5: 22.967 ms/op
Iteration   1: 21.830 ms/op
Iteration   2: 21.802 ms/op
Iteration   3: 26.835 ms/op
Iteration   4: 35.630 ms/op
Iteration   5: 36.441 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  28.508 ±(99.9%) 27.635 ms/op [Average]
  (min, avg, max) = (21.802, 28.508, 36.441), stdev = 7.177
  CI (99.9%): [0.873, 56.143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 2)

# Run progress: 10.54% complete, ETA 09:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 674.023 ms/op
# Warmup Iteration   2: 641.318 ms/op
# Warmup Iteration   3: 639.265 ms/op
# Warmup Iteration   4: 661.242 ms/op
# Warmup Iteration   5: 646.022 ms/op
Iteration   1: 664.820 ms/op
Iteration   2: 1049.997 ms/op
Iteration   3: 1126.357 ms/op
Iteration   4: 1315.101 ms/op
Iteration   5: 1195.466 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1070.348 ±(99.9%) 950.187 ms/op [Average]
  (min, avg, max) = (664.820, 1070.348, 1315.101), stdev = 246.761
  CI (99.9%): [120.161, 2020.535] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 1000, nValues = 3)

# Run progress: 10.66% complete, ETA 09:26:22
# Fork: 1 of 1
# Warmup Iteration   1: 740.517 ms/op
# Warmup Iteration   2: 742.726 ms/op
# Warmup Iteration   3: 652.271 ms/op
# Warmup Iteration   4: 642.070 ms/op
# Warmup Iteration   5: 647.681 ms/op
Iteration   1: 913.564 ms/op
Iteration   2: 1204.373 ms/op
Iteration   3: 1057.715 ms/op
Iteration   4: 1029.593 ms/op
Iteration   5: 1107.864 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  1062.622 ±(99.9%) 410.566 ms/op [Average]
  (min, avg, max) = (913.564, 1062.622, 1204.373), stdev = 106.623
  CI (99.9%): [652.055, 1473.188] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 2)

# Run progress: 10.78% complete, ETA 09:21:09
# Fork: 1 of 1
# Warmup Iteration   1: 149343.127 ms/op
# Warmup Iteration   2: 153274.031 ms/op
# Warmup Iteration   3: 152894.040 ms/op
# Warmup Iteration   4: 153430.154 ms/op
# Warmup Iteration   5: 153518.821 ms/op
Iteration   1: 158009.681 ms/op
Iteration   2: 156296.076 ms/op
Iteration   3: 119730.338 ms/op
Iteration   4: 101440.321 ms/op
Iteration   5: 109834.980 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  129062.279 ±(99.9%) 101867.154 ms/op [Average]
  (min, avg, max) = (101440.321, 129062.279, 158009.681), stdev = 26454.576
  CI (99.9%): [27195.125, 230929.433] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 16384, nKeys = 100000, nValues = 3)

# Run progress: 10.91% complete, ETA 12:25:49
# Fork: 1 of 1
# Warmup Iteration   1: 105316.884 ms/op
# Warmup Iteration   2: 107477.731 ms/op
# Warmup Iteration   3: 106010.058 ms/op
# Warmup Iteration   4: 102916.725 ms/op
# Warmup Iteration   5: 159787.344 ms/op
Iteration   1: 173109.714 ms/op
Iteration   2: 191279.728 ms/op
Iteration   3: 166654.563 ms/op
Iteration   4: 162961.621 ms/op
Iteration   5: 163400.453 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  171481.216 ±(99.9%) 45390.743 ms/op [Average]
  (min, avg, max) = (162961.621, 171481.216, 191279.728), stdev = 11787.832
  CI (99.9%): [126090.473, 216871.958] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32768, nKeys = 32, nValues = 2)

# Run progress: 11.03% complete, ETA 15:30:04
# Fork: 1 of 1
# Warmup Iteration   1: 49.095 ms/op
# Warmup Iteration   2: 44.082 ms/op
# Warmup Iteration   3: 44.799 ms/op
# Warmup Iteration   4: 44.263 ms/op
# Warmup Iteration   5: 44.220 ms/op
Iteration   1: 45.807 ms/op
Iteration   2: 43.976 ms/op
Iteration   3: 55.952 ms/op
Iteration   4: 72.655 ms/op
Iteration   5: 74.670 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  58.612 ±(99.9%) 55.811 ms/op [Average]
  (min, avg, max) = (43.976, 58.612, 74.670), stdev = 14.494
  CI (99.9%): [2.801, 114.424] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32768, nKeys = 32, nValues = 3)

# Run progress: 11.15% complete, ETA 15:19:59
# Fork: 1 of 1
# Warmup Iteration   1: 50.436 ms/op
# Warmup Iteration   2: 44.586 ms/op
# Warmup Iteration   3: 44.869 ms/op
# Warmup Iteration   4: 44.256 ms/op
# Warmup Iteration   5: 44.225 ms/op
Iteration   1: 45.678 ms/op
Iteration   2: 44.223 ms/op
Iteration   3: 54.280 ms/op
Iteration   4: 75.079 ms/op
Iteration   5: 81.692 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  60.190 ±(99.9%) 66.264 ms/op [Average]
  (min, avg, max) = (44.223, 60.190, 81.692), stdev = 17.208
  CI (99.9%): [? 0, 126.454] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32768, nKeys = 1000, nValues = 2)

# Run progress: 11.27% complete, ETA 15:10:07
# Fork: 1 of 1
# Warmup Iteration   1: 1442.747 ms/op
# Warmup Iteration   2: 1769.084 ms/op
# Warmup Iteration   3: 1828.637 ms/op
# Warmup Iteration   4: 1552.801 ms/op
# Warmup Iteration   5: 1576.824 ms/op
Iteration   1: 2088.881 ms/op
Iteration   2: 2560.777 ms/op
Iteration   3: 2479.245 ms/op
Iteration   4: 2312.220 ms/op
Iteration   5: 2332.340 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2354.692 ±(99.9%) 696.699 ms/op [Average]
  (min, avg, max) = (2088.881, 2354.692, 2560.777), stdev = 180.931
  CI (99.9%): [1657.993, 3051.392] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32768, nKeys = 1000, nValues = 3)

# Run progress: 11.40% complete, ETA 15:01:43
# Fork: 1 of 1
# Warmup Iteration   1: 1416.030 ms/op
# Warmup Iteration   2: 1366.927 ms/op
# Warmup Iteration   3: 1294.948 ms/op
# Warmup Iteration   4: 1294.452 ms/op
# Warmup Iteration   5: 1302.796 ms/op
Iteration   1: 1497.487 ms/op
Iteration   2: 2174.087 ms/op
Iteration   3: 2172.177 ms/op
Iteration   4: 2160.319 ms/op
Iteration   5: 2152.781 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  2031.370 ±(99.9%) 1149.716 ms/op [Average]
  (min, avg, max) = (1497.487, 2031.370, 2174.087), stdev = 298.578
  CI (99.9%): [881.654, 3181.086] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32768, nKeys = 100000, nValues = 2)

# Run progress: 11.52% complete, ETA 14:53:06
# Fork: 1 of 1
# Warmup Iteration   1: 325279.227 ms/op
# Warmup Iteration   2: 322696.510 ms/op
# Warmup Iteration   3: 324364.444 ms/op
# Warmup Iteration   4: 322107.967 ms/op
# Warmup Iteration   5: 323458.968 ms/op
Iteration   1: 323099.348 ms/op
Iteration   2: 322839.597 ms/op
Iteration   3: 322423.639 ms/op
Iteration   4: 323121.190 ms/op
Iteration   5: 338686.009 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  326033.957 ±(99.9%) 27255.984 ms/op [Average]
  (min, avg, max) = (322423.639, 326033.957, 338686.009), stdev = 7078.292
  CI (99.9%): [298777.973, 353289.940] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 32768, nKeys = 100000, nValues = 3)

# Run progress: 11.64% complete, ETA 21:33:24
# Fork: 1 of 1
# Warmup Iteration   1: 322430.744 ms/op
# Warmup Iteration   2: 327628.349 ms/op
# Warmup Iteration   3: 321230.799 ms/op
# Warmup Iteration   4: 317098.810 ms/op
# Warmup Iteration   5: 323929.172 ms/op
Iteration   1: 350803.185 ms/op
Iteration   2: 324160.437 ms/op
Iteration   3: 325308.715 ms/op
Iteration   4: 319268.393 ms/op
Iteration   5: 349871.483 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  333882.442 ±(99.9%) 58510.708 ms/op [Average]
  (min, avg, max) = (319268.393, 333882.442, 350803.185), stdev = 15195.045
  CI (99.9%): [275371.734, 392393.151] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 65536, nKeys = 32, nValues = 2)

# Run progress: 11.76% complete, ETA 1 days, 04:08:27
# Fork: 1 of 1
# Warmup Iteration   1: 99.388 ms/op
# Warmup Iteration   2: 91.113 ms/op
# Warmup Iteration   3: 92.116 ms/op
# Warmup Iteration   4: 91.836 ms/op
# Warmup Iteration   5: 95.041 ms/op
Iteration   1: 90.377 ms/op
Iteration   2: 90.786 ms/op
Iteration   3: 118.855 ms/op
Iteration   4: 173.689 ms/op
Iteration   5: 194.482 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  133.638 ±(99.9%) 184.995 ms/op [Average]
  (min, avg, max) = (90.377, 133.638, 194.482), stdev = 48.043
  CI (99.9%): [? 0, 318.633] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 65536, nKeys = 32, nValues = 3)

# Run progress: 11.89% complete, ETA 1 days, 03:50:05
# Fork: 1 of 1
# Warmup Iteration   1: 97.514 ms/op
# Warmup Iteration   2: 90.731 ms/op
# Warmup Iteration   3: 90.230 ms/op
# Warmup Iteration   4: 90.895 ms/op
# Warmup Iteration   5: 88.724 ms/op
Iteration   1: 89.536 ms/op
Iteration   2: 89.073 ms/op
Iteration   3: 142.930 ms/op
Iteration   4: 161.395 ms/op
Iteration   5: 171.857 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  130.958 ±(99.9%) 151.754 ms/op [Average]
  (min, avg, max) = (89.073, 130.958, 171.857), stdev = 39.410
  CI (99.9%): [? 0, 282.712] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 65536, nKeys = 1000, nValues = 2)

# Run progress: 12.01% complete, ETA 1 days, 03:32:06
# Fork: 1 of 1
# Warmup Iteration   1: 2646.735 ms/op
# Warmup Iteration   2: 2577.724 ms/op
# Warmup Iteration   3: 2526.135 ms/op
# Warmup Iteration   4: 4471.725 ms/op
# Warmup Iteration   5: 4319.006 ms/op
Iteration   1: 4641.439 ms/op
Iteration   2: 4771.401 ms/op
Iteration   3: 5046.623 ms/op
Iteration   4: 4879.156 ms/op
Iteration   5: 4430.351 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  4753.794 ±(99.9%) 901.029 ms/op [Average]
  (min, avg, max) = (4430.351, 4753.794, 5046.623), stdev = 233.994
  CI (99.9%): [3852.765, 5654.823] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 65536, nKeys = 1000, nValues = 3)

# Run progress: 12.13% complete, ETA 1 days, 03:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 2860.146 ms/op
# Warmup Iteration   2: 2619.130 ms/op
# Warmup Iteration   3: 2979.864 ms/op
# Warmup Iteration   4: 4452.822 ms/op
# Warmup Iteration   5: 5191.853 ms/op
Iteration   1: 5109.308 ms/op
Iteration   2: 4757.203 ms/op
Iteration   3: 4932.849 ms/op
Iteration   4: 5204.420 ms/op
Iteration   5: 4908.495 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  4982.455 ±(99.9%) 678.056 ms/op [Average]
  (min, avg, max) = (4757.203, 4982.455, 5204.420), stdev = 176.089
  CI (99.9%): [4304.399, 5660.511] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 65536, nKeys = 100000, nValues = 2)

# Run progress: 12.25% complete, ETA 1 days, 03:04:35
# Fork: 1 of 1
# Warmup Iteration   1: 486236.093 ms/op
# Warmup Iteration   2: 433798.342 ms/op
# Warmup Iteration   3: 433041.603 ms/op
# Warmup Iteration   4: 397399.345 ms/op
# Warmup Iteration   5: 400328.317 ms/op
Iteration   1: 401074.291 ms/op
Iteration   2: 398058.178 ms/op
Iteration   3: 400416.846 ms/op
Iteration   4: 400077.596 ms/op
Iteration   5: 398524.885 ms/op


Result "tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark":
  399630.359 ±(99.9%) 4945.249 ms/op [Average]
  (min, avg, max) = (398058.178, 399630.359, 401074.291), stdev = 1284.265
  CI (99.9%): [394685.110, 404575.608] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin\java.exe
# VM options: -Dfile.encoding=windows-1252 -Duser.country=GB -Duser.language=en -Duser.variant
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: tools.refinery.store.map.benchmarks.getdiffcursor.ImmutableGetDiffCursorBenchmark.baselineGetDiffCursorAndCommitBenchmark
# Parameters: (nCommit = 10, nGetDiffCursor = 65536, nKeys = 100000, nValues = 3)

# Run progress: 12.38% complete, ETA 1 days, 10:55:51
# Fork: 1 of 1
# Warmup Iteration   1: 395634.894 ms/op
# Warmup Iteration   2: 392598.530 ms/op
# Warmup Iteration   3: 394571.605 ms/op
# Warmup Iteration   4: 417505.136 ms/op
# Warmup Iteration   5: Terminate batch job (Y/N)? 
